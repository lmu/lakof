(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[6],{

/***/ "./.plone/++plone++static/components/cs-jqtree-contextmenu/src/jqTreeContextMenu.js":
/*!******************************************************************************************!*\
  !*** ./.plone/++plone++static/components/cs-jqtree-contextmenu/src/jqTreeContextMenu.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar jQuery = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\nvar $ = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\n(function() {\nvar jqtree = __webpack_require__(/*! jqtree */ \"./.plone/++plone++static/components/jqtree/tree.jquery.js\");\n\n(function ($) {\n    if (!$.fn.tree) {\n        throw \"Error jqTree is not loaded.\";\n    }\n\n    $.fn.jqTreeContextMenu = function (options) {\n        var defaults = {\n            menuFadeDuration: 250,\n            selectClickedNode: true,\n            onContextMenuItem: null,\n            contextMenuDecider: null\n        };\n        var settings = $.extend({}, defaults, options);\n        var $el = this;\n        var $menuEl;\n\n        // Check if useContextMenu option is set\n        var jqTree = $el.data('simple_widget_tree');\n        if(!jqTree || !jqTree.options.useContextMenu){\n            throw 'Either jqTree was not found or useContextMenu in jqTree is set to false.';\n        }\n\n        // Check if the parameter is a jquery object\n        if(settings.menu instanceof jQuery) {\n            $menuEl = settings.menu;\n        } else if (typeof settings.menu == \"string\") {\n            $menuEl = $(settings.menu);\n        } else {\n            throw 'You must pass a menu selector string or jquery element to the jqTreeContextMenu.';\n        }\n        $menuEl.hide();\n        if (settings.onContextMenuItem) {\n            this.bind('cm-jqtree.item.click', settings.onContextMenuItem);\n        }\n\n        // Handle the contextmenu event sent from jqTree when user clicks right mouse button.\n        $el.bind('tree.contextmenu', function (event) {\n            var menu = $menuEl;\n            if (typeof(settings.contextMenuDecider) == \"function\") {\n                var menuChoice = settings.contextMenuDecider(event.node);\n                menu = (typeof menuChoice == \"string\") ? $(menuChoice) : $menuEl;\n            }\n            var x = event.click_event.pageX;\n            var y = event.click_event.pageY;\n            var yPadding = 5;\n            var xPadding = 5;\n\n            var menuHeight = menu.height();\n            var menuWidth = menu.width();\n            var windowHeight = $(window).height();\n            var windowWidth = $(window).width();\n\n            // Make sure the whole menu is rendered within the viewport.\n            if (menuHeight + y + yPadding > windowHeight) {\n                y = y - menuHeight;\n            }\n            if (menuWidth + x + xPadding > windowWidth) {\n                x = x - menuWidth;\n            }\n\n            // Must call show before we set the offset (offset can not be set on display: none elements).\n            menu.fadeIn(settings.menuFadeDuration);\n            menu.offset({ left: x, top: y });\n\n            var dismissContextMenu = function () {\n                $(document).unbind('click.jqtreecontextmenu');\n                $el.unbind('tree.click.jqtreecontextmenu');\n                menu.fadeOut(settings.menuFadeDuration);\n            };\n\n            // Make it possible to dismiss context menu by clicking somewhere in the document.\n            $(document).bind('click.jqtreecontextmenu', function (e) {\n                if (x != e.pageX || y != e.pageY) {\n                    dismissContextMenu();\n                }\n            });\n            // Dismiss context menu if another node in the tree is clicked.\n            $el.bind('tree.click.jqtreecontextmenu', function () {\n                dismissContextMenu();\n            });\n\n            // Make the selection follow the node that was right clicked on (if desired).\n            if (settings.selectClickedNode && $el.tree('getSelectedNode') !== event.node) {\n                $el.tree('selectNode', event.node);\n            }\n\n            // Handle click on menu items, if it's not disabled.\n            menu.find('li').off('click.contextmenu').on('click.contextmenu', function (e) {\n                e.stopImmediatePropagation();\n                dismissContextMenu();\n                $el.trigger('cm-jqtree.item.click', [event.node, $(this)]);\n            });\n        });\n\n        return this;\n    };\n} (jQuery));\n\n}.call({jQuery:$}));\n\n//# sourceURL=webpack:///./.plone/++plone++static/components/cs-jqtree-contextmenu/src/jqTreeContextMenu.js?");

/***/ }),

/***/ "./.plone/++plone++static/components/jqtree/tree.jquery.js":
/*!*****************************************************************!*\
  !*** ./.plone/++plone++static/components/jqtree/tree.jquery.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar jQuery = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\nvar $ = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\n(function() {\n\n/*!\n * JqTree 1.4.10\n * \n * Copyright 2019 Marco Braak\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * \n */!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=16)}([function(e,t,o){\"use strict\";var n;t.__esModule=!0,function(e){e[e.Before=1]=\"Before\",e[e.After=2]=\"After\",e[e.Inside=3]=\"Inside\",e[e.None=4]=\"None\"}(n=t.Position||(t.Position={}));var r={before:n.Before,after:n.After,inside:n.Inside,none:n.None};t.getPositionName=function(e){for(var t in r)if(r.hasOwnProperty(t)&&r[t]===e)return t;return\"\"},t.getPosition=function(e){return r[e]};var i=function(){function e(t,o,n){void 0===o&&(o=!1),void 0===n&&(n=e),this.name=\"\",this.setData(t),this.children=[],this.parent=null,o&&(this.idMapping={},this.tree=this,this.nodeClass=n)}return e.prototype.setData=function(e){var t=this,o=function(e){null!=e&&(t.name=e)};if(e)if(\"object\"!=typeof e)o(e);else for(var n in e)if(e.hasOwnProperty(n)){var r=e[n];\"label\"===n?o(r):\"children\"!==n&&(this[n]=r)}},e.prototype.loadFromData=function(e){this.removeChildren();for(var t=0,o=e;t<o.length;t++){var n=o[t],r=new this.tree.nodeClass(n);this.addChild(r),\"object\"==typeof n&&n.children&&r.loadFromData(n.children)}},e.prototype.addChild=function(e){this.children.push(e),e._setParent(this)},e.prototype.addChildAtPosition=function(e,t){this.children.splice(t,0,e),e._setParent(this)},e.prototype.removeChild=function(e){e.removeChildren(),this._removeChild(e)},e.prototype.getChildIndex=function(e){return jQuery.inArray(e,this.children)},e.prototype.hasChildren=function(){return 0!==this.children.length},e.prototype.isFolder=function(){return this.hasChildren()||this.load_on_demand},e.prototype.iterate=function(e){var t=function(o,n){if(o.children)for(var r=0,i=o.children;r<i.length;r++){var s=i[r];e(s,n)&&s.hasChildren()&&t(s,n+1)}};t(this,0)},e.prototype.moveNode=function(e,t,o){e.parent&&!e.isParentOf(t)&&(e.parent._removeChild(e),o===n.After?t.parent&&t.parent.addChildAtPosition(e,t.parent.getChildIndex(t)+1):o===n.Before?t.parent&&t.parent.addChildAtPosition(e,t.parent.getChildIndex(t)):o===n.Inside&&t.addChildAtPosition(e,0))},e.prototype.getData=function(e){function t(e){return e.map(function(e){var o={};for(var n in e)if(-1===[\"parent\",\"children\",\"element\",\"tree\"].indexOf(n)&&Object.prototype.hasOwnProperty.call(e,n)){var r=e[n];o[n]=r}return e.hasChildren()&&(o.children=t(e.children)),o})}return void 0===e&&(e=!1),t(e?[this]:this.children)},e.prototype.getNodeByName=function(e){return this.getNodeByCallback(function(t){return t.name===e})},e.prototype.getNodeByCallback=function(e){var t=null;return this.iterate(function(o){return!e(o)||(t=o,!1)}),t},e.prototype.addAfter=function(e){if(this.parent){var t=new this.tree.nodeClass(e),o=this.parent.getChildIndex(this);return this.parent.addChildAtPosition(t,o+1),\"object\"==typeof e&&e.children&&e.children.length&&t.loadFromData(e.children),t}return null},e.prototype.addBefore=function(e){if(this.parent){var t=new this.tree.nodeClass(e),o=this.parent.getChildIndex(this);return this.parent.addChildAtPosition(t,o),\"object\"==typeof e&&e.children&&e.children.length&&t.loadFromData(e.children),t}return null},e.prototype.addParent=function(e){if(this.parent){var t=new this.tree.nodeClass(e);t._setParent(this.tree);for(var o=this.parent,n=0,r=o.children;n<r.length;n++){var i=r[n];t.addChild(i)}return o.children=[],o.addChild(t),t}return null},e.prototype.remove=function(){this.parent&&(this.parent.removeChild(this),this.parent=null)},e.prototype.append=function(e){var t=new this.tree.nodeClass(e);return this.addChild(t),\"object\"==typeof e&&e.children&&e.children.length&&t.loadFromData(e.children),t},e.prototype.prepend=function(e){var t=new this.tree.nodeClass(e);return this.addChildAtPosition(t,0),\"object\"==typeof e&&e.children&&e.children.length&&t.loadFromData(e.children),t},e.prototype.isParentOf=function(e){for(var t=e.parent;t;){if(t===this)return!0;t=t.parent}return!1},e.prototype.getLevel=function(){for(var e=0,t=this;t.parent;)e+=1,t=t.parent;return e},e.prototype.getNodeById=function(e){return this.idMapping[e]},e.prototype.addNodeToIndex=function(e){null!=e.id&&(this.idMapping[e.id]=e)},e.prototype.removeNodeFromIndex=function(e){null!=e.id&&delete this.idMapping[e.id]},e.prototype.removeChildren=function(){var e=this;this.iterate(function(t){return e.tree.removeNodeFromIndex(t),!0}),this.children=[]},e.prototype.getPreviousSibling=function(){if(this.parent){var e=this.parent.getChildIndex(this)-1;return e>=0?this.parent.children[e]:null}return null},e.prototype.getNextSibling=function(){if(this.parent){var e=this.parent.getChildIndex(this)+1;return e<this.parent.children.length?this.parent.children[e]:null}return null},e.prototype.getNodesByProperty=function(e,t){return this.filter(function(o){return o[e]===t})},e.prototype.filter=function(e){var t=[];return this.iterate(function(o){return e(o)&&t.push(o),!0}),t},e.prototype.getNextNode=function(e){if(void 0===e&&(e=!0),e&&this.hasChildren()&&this.is_open)return this.children[0];if(this.parent){var t=this.getNextSibling();return t||this.parent.getNextNode(!1)}return null},e.prototype.getPreviousNode=function(){if(this.parent){var e=this.getPreviousSibling();return e?e.hasChildren()&&e.is_open?e.getLastChild():e:this.getParent()}return null},e.prototype.getParent=function(){return this.parent&&this.parent.parent?this.parent:null},e.prototype.getLastChild=function(){if(this.hasChildren()){var e=this.children[this.children.length-1];return e.hasChildren()&&e.is_open?e.getLastChild():e}return null},e.prototype.initFromData=function(e){var t,o=this,n=function(e){for(var t=0,n=e;t<n.length;t++){var r=n[t],i=new o.tree.nodeClass(\"\");i.initFromData(r),o.addChild(i)}};t=e,o.setData(t),t.children&&n(t.children)},e.prototype._setParent=function(e){this.parent=e,this.tree=e.tree,this.tree.addNodeToIndex(this)},e.prototype._removeChild=function(e){this.children.splice(this.getChildIndex(e),1),this.tree.removeNodeFromIndex(e)},e}();t.Node=i},function(e,t,o){\"use strict\";t.__esModule=!0,t.isInt=function(e){return\"number\"==typeof e&&e%1==0},t.isFunction=function(e){return\"function\"==typeof e},t.htmlEscape=function(e){return(\"\"+e).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#x27;\").replace(/\\//g,\"&#x2F;\")},t.getBoolString=function(e){return e?\"true\":\"false\"}},function(e,t){e.exports=jQuery},function(e,t,o){\"use strict\";t.__esModule=!0;var n=function(){function e(e,t){this.$el=jQuery(e);var o=this.constructor.defaults;this.options=jQuery.extend({},o,t)}return e.register=function(t,o){var n=function(){return\"simple_widget_\"+o};function r(t,o){var n=jQuery.data(t,o);return n&&n instanceof e?n:null}jQuery.fn[o]=function(o){for(var i=[],s=1;s<arguments.length;s++)i[s-1]=arguments[s];if(void 0===o||\"object\"==typeof o)return function(e,o){for(var i=n(),s=0,a=e.get();s<a.length;s++){var l=a[s];if(!r(l,i)){var d=new t(l,o);jQuery.data(l,i)||jQuery.data(l,i,d),d._init()}}return e}(this,o);if(\"string\"==typeof o&&\"_\"!==o[0]){var a=o;return\"destroy\"===a?function(e){for(var t=n(),o=0,i=e.get();o<i.length;o++){var s=i[o],a=r(s,t);a&&a.destroy(),jQuery.removeData(s,t)}}(this):\"get_widget_class\"===a?t:function(t,o,r){for(var i=null,s=0,a=t.get();s<a.length;s++){var l=a[s],d=jQuery.data(l,n());if(d&&d instanceof e){var u=d[o];u&&\"function\"==typeof u&&(i=u.apply(d,r))}}return i}(this,a,i)}}},e.prototype.destroy=function(){this._deinit()},e.prototype._init=function(){},e.prototype._deinit=function(){},e.defaults={},e}();t.default=n},function(e,t,o){\"use strict\";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});t.__esModule=!0;var i=o(5),s=o(2),a=o(6),l=o(7),d=o(8),u=o(9),h=o(10),p=o(11),c=o(12),f=o(13),g=o(3),m=o(0),v=o(1),y=o(14),_=\"Node parameter is empty\",N=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._handleClick=function(e){var o=t._getClickTarget(e.target);if(o)if(\"button\"===o.type)t.toggle(o.node,t.options.slide),e.preventDefault(),e.stopPropagation();else if(\"label\"===o.type){var n=o.node;t._triggerEvent(\"tree.click\",{node:n,click_event:e}).isDefaultPrevented()||t._selectNode(n,!0)}},t._handleDblclick=function(e){var o=t._getClickTarget(e.target);o&&\"label\"===o.type&&t._triggerEvent(\"tree.dblclick\",{node:o.node,click_event:e})},t._handleContextmenu=function(e){var o=s(e.target).closest(\"ul.jqtree-tree .jqtree-element\");if(o.length){var n=t._getNode(o);if(n)return e.preventDefault(),e.stopPropagation(),t._triggerEvent(\"tree.contextmenu\",{node:n,click_event:e}),!1}return null},t}return r(t,e),t.prototype.toggle=function(e,t){if(!e)throw Error(_);var o=null==t?this.options.slide:t;return e.is_open?this.closeNode(e,o):this.openNode(e,o),this.element},t.prototype.getTree=function(){return this.tree},t.prototype.selectNode=function(e){return this._selectNode(e,!1),this.element},t.prototype.getSelectedNode=function(){return!!this.selectNodeHandler&&this.selectNodeHandler.getSelectedNode()},t.prototype.toJson=function(){return JSON.stringify(this.tree.getData())},t.prototype.loadData=function(e,t){return this._loadData(e,t),this.element},t.prototype.loadDataFromUrl=function(e,t,o){return\"string\"==typeof e?this._loadDataFromUrl(e,t,o):this._loadDataFromUrl(null,e,t),this.element},t.prototype.reload=function(e){return this._loadDataFromUrl(null,null,e),this.element},t.prototype.getNodeById=function(e){return this.tree.getNodeById(e)},t.prototype.getNodeByName=function(e){return this.tree.getNodeByName(e)},t.prototype.getNodesByProperty=function(e,t){return this.tree.getNodesByProperty(e,t)},t.prototype.getNodeByHtmlElement=function(e){return this._getNode(s(e))},t.prototype.getNodeByCallback=function(e){return this.tree.getNodeByCallback(e)},t.prototype.openNode=function(e,t,o){var n=this;if(!e)throw Error(_);var r=function(){var e,r;return v.isFunction(t)?(e=t,r=null):(r=t,e=o),null==r&&(r=n.options.slide),[r,e]}(),i=r[0],s=r[1];return this._openNode(e,i,s),this.element},t.prototype.closeNode=function(e,t){if(!e)throw Error(_);var o=null==t?this.options.slide:t;return e.isFolder()&&(new y.FolderElement(e,this).close(o,this.options.animationSpeed),this._saveState()),this.element},t.prototype.isDragging=function(){return!!this.dndHandler&&this.dndHandler.isDragging},t.prototype.refreshHitAreas=function(){return this.dndHandler&&this.dndHandler.refresh(),this.element},t.prototype.addNodeAfter=function(e,t){var o=t.addAfter(e);return o&&this._refreshElements(t.parent),o},t.prototype.addNodeBefore=function(e,t){if(!t)throw Error(\"Parameter is empty: existingNode\");var o=t.addBefore(e);return o&&this._refreshElements(t.parent),o},t.prototype.addParentNode=function(e,t){if(!t)throw Error(\"Parameter is empty: existingNode\");var o=t.addParent(e);return o&&this._refreshElements(o.parent),o},t.prototype.removeNode=function(e){if(!e)throw Error(_);var t=e;return t.parent&&this.selectNodeHandler&&(this.selectNodeHandler.removeFromSelection(t,!0),t.remove(),this._refreshElements(t.parent)),this.element},t.prototype.appendNode=function(e,t){var o=t||this.tree,n=o.append(e);return this._refreshElements(o),n},t.prototype.prependNode=function(e,t){var o=t||this.tree,n=o.prepend(e);return this._refreshElements(o),n},t.prototype.updateNode=function(e,t){if(!e)throw Error(_);var o=t.id&&t.id!==e.id;return o&&this.tree.removeNodeFromIndex(e),e.setData(t),o&&this.tree.addNodeToIndex(e),\"object\"==typeof t&&t.children&&(e.removeChildren(),t.children.length&&e.loadFromData(t.children)),this._refreshElements(e),this._selectCurrentNode(),this.element},t.prototype.moveNode=function(e,t,o){if(!e)throw Error(_);if(!t)throw Error(\"Parameter is empty: targetNode\");var n=m.getPosition(o);return this.tree.moveNode(e,t,n),this._refreshElements(null),this.element},t.prototype.getStateFromStorage=function(){if(this.saveStateHandler)return this.saveStateHandler.getStateFromStorage()},t.prototype.addToSelection=function(e,t){if(!e)throw Error(_);var o=e;return this.selectNodeHandler&&(this.selectNodeHandler.addToSelection(o),this._getNodeElementForNode(o).select(t||!0),this._saveState()),this.element},t.prototype.getSelectedNodes=function(){return this.selectNodeHandler?this.selectNodeHandler.getSelectedNodes():[]},t.prototype.isNodeSelected=function(e){if(!e)throw Error(_);return!!this.selectNodeHandler&&this.selectNodeHandler.isNodeSelected(e)},t.prototype.removeFromSelection=function(e){if(!e)throw Error(_);return this.selectNodeHandler&&(this.selectNodeHandler.removeFromSelection(e),this._getNodeElementForNode(e).deselect(),this._saveState()),this.element},t.prototype.scrollToNode=function(e){if(!e)throw Error(_);if(this.scrollHandler){var t=s(e.element).offset(),o=t?t.top:0,n=this.$el.offset(),r=o-(n?n.top:0);this.scrollHandler.scrollToY(r)}return this.element},t.prototype.getState=function(){if(this.saveStateHandler)return this.saveStateHandler.getState()},t.prototype.setState=function(e){return this.saveStateHandler&&(this.saveStateHandler.setInitialState(e),this._refreshElements(null)),this.element},t.prototype.setOption=function(e,t){return this.options[e]=t,this.element},t.prototype.moveDown=function(){return this.keyHandler&&this.keyHandler.moveDown(),this.element},t.prototype.moveUp=function(){return this.keyHandler&&this.keyHandler.moveUp(),this.element},t.prototype.getVersion=function(){return i.default},t.prototype.testGenerateHitAreas=function(e){return this.dndHandler?(this.dndHandler.currentItem=this._getNodeElementForNode(e),this.dndHandler.generateHitAreas(),this.dndHandler.hitAreas):[]},t.prototype._triggerEvent=function(e,t){var o=s.Event(e);return s.extend(o,t),this.element.trigger(o),o},t.prototype._openNode=function(e,t,o){var n=this;void 0===t&&(t=!0);var r=function(e,t,o){new y.FolderElement(e,n).open(o,t,n.options.animationSpeed)};if(e.isFolder())if(e.load_on_demand)this._loadFolderOnDemand(e,t,o);else{for(var i=e.parent;i;)i.parent&&r(i,!1,null),i=i.parent;r(e,t,o),this._saveState()}},t.prototype._refreshElements=function(e){this.renderer.render(e),this._triggerEvent(\"tree.refresh\")},t.prototype._getNodeElementForNode=function(e){return e.isFolder()?new y.FolderElement(e,this):new y.NodeElement(e,this)},t.prototype._getNodeElement=function(e){var t=this._getNode(e);return t?this._getNodeElementForNode(t):null},t.prototype._containsElement=function(e){var t=this._getNode(s(e));return null!=t&&t.tree===this.tree},t.prototype._getScrollLeft=function(){return this.scrollHandler&&this.scrollHandler.getScrollLeft()||0},t.prototype._init=function(){e.prototype._init.call(this),this.element=this.$el,this.mouseDelay=300,this.isInitialized=!1,this.options.rtl=this._getRtlOption(),null===this.options.closedIcon&&(this.options.closedIcon=this._getDefaultClosedIcon()),this.renderer=new l.default(this),this.dataLoader=new d.default(this),null!=p.default?this.saveStateHandler=new p.default(this):this.options.saveState=!1,null!=f.default&&(this.selectNodeHandler=new f.default(this)),null!=a.DragAndDropHandler?this.dndHandler=new a.DragAndDropHandler(this):this.options.dragAndDrop=!1,null!=c.default&&(this.scrollHandler=new c.default(this)),null!=u.default&&null!=f.default&&(this.keyHandler=new u.default(this)),this._initData(),this.element.click(this._handleClick),this.element.dblclick(this._handleDblclick),this.options.useContextMenu&&this.element.on(\"contextmenu\",this._handleContextmenu)},t.prototype._deinit=function(){this.element.empty(),this.element.off(),this.keyHandler&&this.keyHandler.deinit(),this.tree=new m.Node({},!0),e.prototype._deinit.call(this)},t.prototype._mouseCapture=function(e){return!(!this.options.dragAndDrop||!this.dndHandler)&&this.dndHandler.mouseCapture(e)},t.prototype._mouseStart=function(e){return!(!this.options.dragAndDrop||!this.dndHandler)&&this.dndHandler.mouseStart(e)},t.prototype._mouseDrag=function(e){if(this.options.dragAndDrop&&this.dndHandler){var t=this.dndHandler.mouseDrag(e);return this.scrollHandler&&this.scrollHandler.checkScrolling(),t}return!1},t.prototype._mouseStop=function(e){return!(!this.options.dragAndDrop||!this.dndHandler)&&this.dndHandler.mouseStop(e)},t.prototype._initData=function(){this.options.data?this._loadData(this.options.data,null):this._getDataUrlInfo(null)?this._loadDataFromUrl(null,null,null):this._loadData([],null)},t.prototype._getDataUrlInfo=function(e){var t,o=this,n=this.options.dataUrl||this.element.data(\"url\"),r=function(t){if(e&&e.id){var n={node:e.id};t.data=n}else{var r=o._getNodeIdToBeSelected();if(r){n={selected_node:r};t.data=n}}};return\"function\"==typeof n?n(e):\"string\"==typeof n?(r(t={url:n}),t):\"object\"==typeof n?(r(n),n):n},t.prototype._getNodeIdToBeSelected=function(){return this.options.saveState&&this.saveStateHandler?this.saveStateHandler.getNodeIdToBeSelected():null},t.prototype._initTree=function(e){var t=this,o=function(){t.isInitialized||(t.isInitialized=!0,t._triggerEvent(\"tree.init\"))};this.tree=new this.options.nodeClass(null,!0,this.options.nodeClass),this.selectNodeHandler&&this.selectNodeHandler.clear(),this.tree.loadFromData(e);var n=this._setInitialState();this._refreshElements(null),n?this._setInitialStateOnDemand(o):o()},t.prototype._setInitialState=function(){var e=this,t=function(){if(e.options.saveState&&e.saveStateHandler){var t=e.saveStateHandler.getStateFromStorage();return t?[!0,e.saveStateHandler.setInitialState(t)]:[!1,!1]}return[!1,!1]}(),o=t[0],n=t[1];return o||(n=function(){if(!1===e.options.autoOpen)return!1;var t=e._getAutoOpenMaxLevel(),o=!1;return e.tree.iterate(function(e,n){return e.load_on_demand?(o=!0,!1):!!e.hasChildren()&&(e.is_open=!0,n!==t)}),o}()),n},t.prototype._setInitialStateOnDemand=function(e){var t,o,n,r=this;(function(){if(r.options.saveState&&r.saveStateHandler){var t=r.saveStateHandler.getStateFromStorage();return!!t&&(r.saveStateHandler.setInitialStateOnDemand(t,e),!0)}return!1})()||(t=r._getAutoOpenMaxLevel(),o=0,(n=function(){r.tree.iterate(function(e,i){return e.load_on_demand?(e.is_loading||function(e){o+=1,r._openNode(e,!1,function(){o-=1,n()})}(e),!1):(r._openNode(e,!1,null),i!==t)}),0===o&&e()})())},t.prototype._getAutoOpenMaxLevel=function(){return!0===this.options.autoOpen?-1:parseInt(this.options.autoOpen,10)},t.prototype._getClickTarget=function(e){var t=s(e),o=t.closest(\".jqtree-toggler\");if(o.length){if(n=this._getNode(o))return{type:\"button\",node:n}}else{var n,r=t.closest(\".jqtree-element\");if(r.length)if(n=this._getNode(r))return{type:\"label\",node:n}}return null},t.prototype._getNode=function(e){var t=e.closest(\"li.jqtree_common\");return 0===t.length?null:t.data(\"node\")},t.prototype._saveState=function(){this.options.saveState&&this.saveStateHandler&&this.saveStateHandler.saveState()},t.prototype._selectCurrentNode=function(){var e=this.getSelectedNode();if(e){var t=this._getNodeElementForNode(e);t&&t.select(!0)}},t.prototype._deselectCurrentNode=function(){var e=this.getSelectedNode();e&&this.removeFromSelection(e)},t.prototype._getDefaultClosedIcon=function(){return this.options.rtl?\"&#x25c0;\":\"&#x25ba;\"},t.prototype._getRtlOption=function(){if(null!=this.options.rtl)return this.options.rtl;var e=this.element.data(\"rtl\");return null!=e&&!1!==e},t.prototype._selectNode=function(e,t){var o=this;if(void 0===t&&(t=!1),this.selectNodeHandler){var n=function(){o.options.saveState&&o.saveStateHandler&&o.saveStateHandler.saveState()};if(!e)return this._deselectCurrentNode(),void n();if(o.options.onCanSelectNode?o.options.selectable&&o.options.onCanSelectNode(e):o.options.selectable){var r,i=e;if(this.selectNodeHandler.isNodeSelected(i))t&&(this._deselectCurrentNode(),this._triggerEvent(\"tree.select\",{node:null,previous_node:i}));else{var s=this.getSelectedNode();this._deselectCurrentNode(),this.addToSelection(i),this._triggerEvent(\"tree.select\",{node:i,deselected_node:s}),(r=e.parent)&&r.parent&&!r.is_open&&o.openNode(r,!1)}n()}}},t.prototype._loadData=function(e,t){e&&(this._triggerEvent(\"tree.load_data\",{tree_data:e}),t?(this._deselectNodes(t),this._loadSubtree(e,t)):this._initTree(e),this.isDragging()&&this.dndHandler&&this.dndHandler.refresh())},t.prototype._deselectNodes=function(e){if(this.selectNodeHandler)for(var t=0,o=this.selectNodeHandler.getSelectedNodesUnder(e);t<o.length;t++){var n=o[t];this.selectNodeHandler.removeFromSelection(n)}},t.prototype._loadSubtree=function(e,t){t.loadFromData(e),t.load_on_demand=!1,t.is_loading=!1,this._refreshElements(t)},t.prototype._loadDataFromUrl=function(e,t,o){var n=e||this._getDataUrlInfo(t);this.dataLoader.loadFromUrl(n,t,o)},t.prototype._loadFolderOnDemand=function(e,t,o){var n=this;void 0===t&&(t=!0),e.is_loading=!0,this._loadDataFromUrl(null,e,function(){n._openNode(e,t,o)})},t.defaults={animationSpeed:\"fast\",autoOpen:!1,saveState:!1,dragAndDrop:!1,selectable:!0,useContextMenu:!0,onCanSelectNode:null,onSetStateFromStorage:null,onGetStateFromStorage:null,onCreateLi:null,onIsMoveHandle:null,onCanMove:null,onCanMoveTo:null,onLoadFailed:null,autoEscape:!0,dataUrl:null,closedIcon:null,openedIcon:\"&#x25bc;\",slide:!0,nodeClass:m.Node,dataFilter:null,keyboardSupport:!0,openFolderDelay:500,rtl:!1,onDragMove:null,onDragStop:null,buttonLeft:!0,onLoading:null,tabIndex:0},t}(h.default);g.default.register(N,\"tree\")},function(e,t,o){\"use strict\";t.__esModule=!0;t.default=\"1.4.10\"},function(e,t,o){\"use strict\";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});t.__esModule=!0;var i=o(2),s=o(0),a=o(1),l=function(){function e(e){this.treeWidget=e,this.hoveredArea=null,this.hitAreas=[],this.isDragging=!1,this.currentItem=null,this.positionInfo=null}return e.prototype.mouseCapture=function(e){var t=i(e.target);if(!this.mustCaptureElement(t))return null;if(this.treeWidget.options.onIsMoveHandle&&!this.treeWidget.options.onIsMoveHandle(t))return null;var o=this.treeWidget._getNodeElement(t);return o&&this.treeWidget.options.onCanMove&&(this.treeWidget.options.onCanMove(o.node)||(o=null)),this.currentItem=o,null!=this.currentItem},e.prototype.generateHitAreas=function(){if(this.currentItem){var e=new d(this.treeWidget.tree,this.currentItem.node,this.getTreeDimensions().bottom);this.hitAreas=e.generate()}else this.hitAreas=[]},e.prototype.mouseStart=function(e){if(this.currentItem&&void 0!==e.pageX&&void 0!==e.pageY){this.refresh();var t=i(e.target).offset(),o=t?t.left:0,n=t?t.top:0,r=this.currentItem.node,s=this.treeWidget.options.autoEscape?a.htmlEscape(r.name):r.name;return this.dragElement=new u(s,e.pageX-o,e.pageY-n,this.treeWidget.element),this.isDragging=!0,this.positionInfo=e,this.currentItem.$element.addClass(\"jqtree-moving\"),!0}return!1},e.prototype.mouseDrag=function(e){if(this.currentItem&&this.dragElement&&void 0!==e.pageX&&void 0!==e.pageY){this.dragElement.move(e.pageX,e.pageY),this.positionInfo=e;var t=this.findHoveredArea(e.pageX,e.pageY);return this.canMoveToArea(t)&&t?(t.node.isFolder()||this.stopOpenFolderTimer(),this.hoveredArea!==t&&(this.hoveredArea=t,this.mustOpenFolderTimer(t)?this.startOpenFolderTimer(t.node):this.stopOpenFolderTimer(),this.updateDropHint())):(this.removeHover(),this.removeDropHint(),this.stopOpenFolderTimer()),t||this.treeWidget.options.onDragMove&&this.treeWidget.options.onDragMove(this.currentItem.node,e.originalEvent),!0}return!1},e.prototype.mouseStop=function(e){this.moveItem(e),this.clear(),this.removeHover(),this.removeDropHint(),this.removeHitAreas();var t=this.currentItem;return this.currentItem&&(this.currentItem.$element.removeClass(\"jqtree-moving\"),this.currentItem=null),this.isDragging=!1,this.positionInfo=null,!this.hoveredArea&&t&&this.treeWidget.options.onDragStop&&this.treeWidget.options.onDragStop(t.node,e.originalEvent),!1},e.prototype.refresh=function(){this.removeHitAreas(),this.currentItem&&(this.generateHitAreas(),this.currentItem=this.treeWidget._getNodeElementForNode(this.currentItem.node),this.isDragging&&this.currentItem.$element.addClass(\"jqtree-moving\"))},e.prototype.mustCaptureElement=function(e){return!e.is(\"input,select,textarea\")},e.prototype.canMoveToArea=function(e){if(e&&this.currentItem){if(this.treeWidget.options.onCanMoveTo){var t=s.getPositionName(e.position);return this.treeWidget.options.onCanMoveTo(this.currentItem.node,e.node,t)}return!0}return!1},e.prototype.removeHitAreas=function(){this.hitAreas=[]},e.prototype.clear=function(){this.dragElement&&(this.dragElement.remove(),this.dragElement=null)},e.prototype.removeDropHint=function(){this.previousGhost&&this.previousGhost.remove()},e.prototype.removeHover=function(){this.hoveredArea=null},e.prototype.findHoveredArea=function(e,t){var o=this.getTreeDimensions();if(e<o.left||t<o.top||e>o.right||t>o.bottom)return null;for(var n=0,r=this.hitAreas.length;n<r;){var i=n+r>>1,s=this.hitAreas[i];if(t<s.top)r=i;else{if(!(t>s.bottom))return s;n=i+1}}return null},e.prototype.mustOpenFolderTimer=function(e){var t=e.node;return t.isFolder()&&!t.is_open&&e.position===s.Position.Inside},e.prototype.updateDropHint=function(){if(this.hoveredArea){this.removeDropHint();var e=this.treeWidget._getNodeElementForNode(this.hoveredArea.node);this.previousGhost=e.addDropHint(this.hoveredArea.position)}},e.prototype.startOpenFolderTimer=function(e){var t=this;this.stopOpenFolderTimer(),this.openFolderTimer=window.setTimeout(function(){t.treeWidget._openNode(e,t.treeWidget.options.slide,function(){t.refresh(),t.updateDropHint()})},this.treeWidget.options.openFolderDelay)},e.prototype.stopOpenFolderTimer=function(){this.openFolderTimer&&(clearTimeout(this.openFolderTimer),this.openFolderTimer=null)},e.prototype.moveItem=function(e){var t=this;if(this.currentItem&&this.hoveredArea&&this.hoveredArea.position!==s.Position.None&&this.canMoveToArea(this.hoveredArea)){var o=this.currentItem.node,n=this.hoveredArea.node,r=this.hoveredArea.position,i=o.parent;r===s.Position.Inside&&(this.hoveredArea.node.is_open=!0);var a=function(){t.treeWidget.tree.moveNode(o,n,r),t.treeWidget.element.empty(),t.treeWidget._refreshElements(null)};this.treeWidget._triggerEvent(\"tree.move\",{move_info:{moved_node:o,target_node:n,position:s.getPositionName(r),previous_parent:i,do_move:a,original_event:e.originalEvent}}).isDefaultPrevented()||a()}},e.prototype.getTreeDimensions=function(){var e=this.treeWidget.element.offset();if(e){var t=this.treeWidget.element,o=t.width()||0,n=t.height()||0,r=e.left+this.treeWidget._getScrollLeft();return{left:r,top:e.top,right:r+o,bottom:e.top+n+16}}return{left:0,top:0,right:0,bottom:0}},e}();t.DragAndDropHandler=l;var d=function(e){function t(t,o,n){var r=e.call(this,t)||this;return r.currentNode=o,r.treeBottom=n,r}return r(t,e),t.prototype.generate=function(){return this.positions=[],this.lastTop=0,this.iterate(),this.generateHitAreas(this.positions)},t.prototype.generateHitAreas=function(e){for(var t=-1,o=[],n=[],r=0,i=e;r<i.length;r++){var s=i[r];s.top!==t&&o.length&&(o.length&&this.generateHitAreasForGroup(n,o,t,s.top),t=s.top,o=[]),o.push(s)}return this.generateHitAreasForGroup(n,o,t,this.treeBottom),n},t.prototype.handleOpenFolder=function(e,t){return e!==this.currentNode&&(e.children[0]!==this.currentNode&&this.addPosition(e,s.Position.Inside,this.getTop(t)),!0)},t.prototype.handleClosedFolder=function(e,t,o){var n=this.getTop(o);e===this.currentNode?this.addPosition(e,s.Position.None,n):(this.addPosition(e,s.Position.Inside,n),t!==this.currentNode&&this.addPosition(e,s.Position.After,n))},t.prototype.handleFirstNode=function(e){e!==this.currentNode&&this.addPosition(e,s.Position.Before,this.getTop(i(e.element)))},t.prototype.handleAfterOpenFolder=function(e,t){e===this.currentNode||t===this.currentNode?this.addPosition(e,s.Position.None,this.lastTop):this.addPosition(e,s.Position.After,this.lastTop)},t.prototype.handleNode=function(e,t,o){var n=this.getTop(o);e===this.currentNode?this.addPosition(e,s.Position.None,n):this.addPosition(e,s.Position.Inside,n),t===this.currentNode||e===this.currentNode?this.addPosition(e,s.Position.None,n):this.addPosition(e,s.Position.After,n)},t.prototype.getTop=function(e){var t=e.offset();return t?t.top:0},t.prototype.addPosition=function(e,t,o){var n={top:o,bottom:0,node:e,position:t};this.positions.push(n),this.lastTop=o},t.prototype.generateHitAreasForGroup=function(e,t,o,n){for(var r=Math.min(t.length,4),i=Math.round((n-o)/r),s=o,a=0;a<r;){var l=t[a];e.push({top:s,bottom:s+i,node:l.node,position:l.position}),s+=i,a+=1}},t}(function(){function e(e){this.tree=e}return e.prototype.iterate=function(){var e=this,t=!0,o=function(n,r){var s=(n.is_open||!n.element)&&n.hasChildren(),a=null;if(n.element){if(!(a=i(n.element)).is(\":visible\"))return;t&&(e.handleFirstNode(n),t=!1),n.hasChildren()?n.is_open?e.handleOpenFolder(n,a)||(s=!1):e.handleClosedFolder(n,r,a):e.handleNode(n,r,a)}if(s){var l=n.children.length;n.children.forEach(function(e,t){o(n.children[t],t===l-1?null:n.children[t+1])}),n.is_open&&a&&e.handleAfterOpenFolder(n,r)}};o(this.tree,null)},e}());t.HitAreasGenerator=d;var u=function(){function e(e,t,o,n){this.offsetX=t,this.offsetY=o,this.$element=i('<span class=\"jqtree-title jqtree-dragging\">'+e+\"</span>\"),this.$element.css(\"position\",\"absolute\"),n.append(this.$element)}return e.prototype.move=function(e,t){this.$element.offset({left:e-this.offsetX,top:t-this.offsetY})},e.prototype.remove=function(){this.$element.remove()},e}()},function(e,t,o){\"use strict\";t.__esModule=!0;var n=o(1),r=function(){function e(e){this.treeWidget=e,this.openedIconElement=this.createButtonElement(e.options.openedIcon),this.closedIconElement=this.createButtonElement(e.options.closedIcon)}return e.prototype.render=function(e){e&&e.parent?this.renderFromNode(e):this.renderFromRoot()},e.prototype.renderFromRoot=function(){var e=this.treeWidget.element;e.empty(),this.createDomElements(e[0],this.treeWidget.tree.children,!0,1)},e.prototype.renderFromNode=function(e){var t=jQuery(e.element),o=this.createLi(e,e.getLevel());this.attachNodeData(e,o),t.after(o),t.remove(),e.children&&this.createDomElements(o,e.children,!1,e.getLevel()+1)},e.prototype.createDomElements=function(e,t,o,n){var r=this.createUl(o);e.appendChild(r);for(var i=0,s=t;i<s.length;i++){var a=s[i],l=this.createLi(a,n);r.appendChild(l),this.attachNodeData(a,l),a.hasChildren()&&this.createDomElements(l,a.children,!1,n+1)}},e.prototype.attachNodeData=function(e,t){e.element=t,jQuery(t).data(\"node\",e)},e.prototype.createUl=function(e){var t,o;e?(t=\"jqtree-tree\",o=\"tree\",this.treeWidget.options.rtl&&(t+=\" jqtree-rtl\")):(t=\"\",o=\"group\");var n=document.createElement(\"ul\");return n.className=\"jqtree_common \"+t,n.setAttribute(\"role\",o),n},e.prototype.createLi=function(e,t){var o=Boolean(this.treeWidget.selectNodeHandler&&this.treeWidget.selectNodeHandler.isNodeSelected(e)),n=e.isFolder()?this.createFolderLi(e,t,o):this.createNodeLi(e,t,o);return this.treeWidget.options.onCreateLi&&this.treeWidget.options.onCreateLi(e,jQuery(n),o),n},e.prototype.createFolderLi=function(e,t,o){var n=this.getButtonClasses(e),r=this.getFolderClasses(e,o),i=e.is_open?this.openedIconElement:this.closedIconElement,s=document.createElement(\"li\");s.className=\"jqtree_common \"+r,s.setAttribute(\"role\",\"presentation\");var a=document.createElement(\"div\");a.className=\"jqtree-element jqtree_common\",a.setAttribute(\"role\",\"presentation\"),s.appendChild(a);var l=document.createElement(\"a\");return l.className=n,l.appendChild(i.cloneNode(!0)),l.setAttribute(\"role\",\"presentation\"),l.setAttribute(\"aria-hidden\",\"true\"),this.treeWidget.options.buttonLeft&&a.appendChild(l),a.appendChild(this.createTitleSpan(e.name,t,o,e.is_open,!0)),this.treeWidget.options.buttonLeft||a.appendChild(l),s},e.prototype.createNodeLi=function(e,t,o){var n=[\"jqtree_common\"];o&&n.push(\"jqtree-selected\");var r=n.join(\" \"),i=document.createElement(\"li\");i.className=r,i.setAttribute(\"role\",\"presentation\");var s=document.createElement(\"div\");return s.className=\"jqtree-element jqtree_common\",s.setAttribute(\"role\",\"presentation\"),i.appendChild(s),s.appendChild(this.createTitleSpan(e.name,t,o,e.is_open,!1)),i},e.prototype.createTitleSpan=function(e,t,o,r,i){var s=document.createElement(\"span\"),a=\"jqtree-title jqtree_common\";return i&&(a+=\" jqtree-title-folder\"),s.className=a,s.setAttribute(\"role\",\"treeitem\"),s.setAttribute(\"aria-level\",\"\"+t),s.setAttribute(\"aria-selected\",n.getBoolString(o)),s.setAttribute(\"aria-expanded\",n.getBoolString(r)),o&&s.setAttribute(\"tabindex\",this.treeWidget.options.tabIndex),s.innerHTML=this.escapeIfNecessary(e),s},e.prototype.getButtonClasses=function(e){var t=[\"jqtree-toggler\",\"jqtree_common\"];return e.is_open||t.push(\"jqtree-closed\"),this.treeWidget.options.buttonLeft?t.push(\"jqtree-toggler-left\"):t.push(\"jqtree-toggler-right\"),t.join(\" \")},e.prototype.getFolderClasses=function(e,t){var o=[\"jqtree-folder\"];return e.is_open||o.push(\"jqtree-closed\"),t&&o.push(\"jqtree-selected\"),e.is_loading&&o.push(\"jqtree-loading\"),o.join(\" \")},e.prototype.escapeIfNecessary=function(e){return this.treeWidget.options.autoEscape?n.htmlEscape(e):e},e.prototype.createButtonElement=function(e){if(\"string\"==typeof e){var t=document.createElement(\"div\");return t.innerHTML=e,document.createTextNode(t.innerHTML)}return jQuery(e)[0]},e}();t.default=r},function(e,t,o){\"use strict\";t.__esModule=!0;var n=function(){function e(e){this.treeWidget=e}return e.prototype.loadFromUrl=function(e,t,o){var n=this;if(e){var r=this.getDomElement(t);this.addLoadingClass(r),this.notifyLoading(!0,t,r);var i=function(){n.removeLoadingClass(r),n.notifyLoading(!1,t,r)};this.submitRequest(e,function(e){i(),n.treeWidget.loadData(n.parseData(e),t),o&&\"function\"==typeof o&&o()},function(e){i();var t=n.treeWidget.options.onLoadFailed;t&&t(e)})}},e.prototype.addLoadingClass=function(e){e&&e.addClass(\"jqtree-loading\")},e.prototype.removeLoadingClass=function(e){e&&e.removeClass(\"jqtree-loading\")},e.prototype.getDomElement=function(e){return e?jQuery(e.element):this.treeWidget.element},e.prototype.notifyLoading=function(e,t,o){var n=this.treeWidget.options.onLoading;n&&n(e,t,o),this.treeWidget._triggerEvent(\"tree.loading_data\",{isLoading:e,node:t,$el:o})},e.prototype.submitRequest=function(e,t,o){var n=jQuery.extend({method:\"GET\"},\"string\"==typeof e?{url:e}:e,{cache:!1,dataType:\"json\",success:t,error:o});n.method=n.method.toUpperCase(),jQuery.ajax(n)},e.prototype.parseData=function(e){var t=this.treeWidget.options.dataFilter,o=e instanceof Array||\"object\"==typeof e?e:null!=e?jQuery.parseJSON(e):[];return t?t(o):o},e}();t.default=n},function(e,t,o){\"use strict\";t.__esModule=!0;var n=function(){function e(t){var o=this;this.handleKeyDown=function(t){if(!o.canHandleKeyboard())return!0;switch(t.which){case e.DOWN:return o.moveDown();case e.UP:return o.moveUp();case e.RIGHT:return o.moveRight();case e.LEFT:return o.moveLeft();default:return!0}},this.treeWidget=t,t.options.keyboardSupport&&jQuery(document).on(\"keydown.jqtree\",this.handleKeyDown)}return e.prototype.deinit=function(){jQuery(document).off(\"keydown.jqtree\")},e.prototype.moveDown=function(){var e=this.treeWidget.getSelectedNode();return!!e&&this.selectNode(e.getNextNode())},e.prototype.moveUp=function(){var e=this.treeWidget.getSelectedNode();return!!e&&this.selectNode(e.getPreviousNode())},e.prototype.moveRight=function(){var e=this.treeWidget.getSelectedNode();return!e||(!e.isFolder()||(e.is_open?this.selectNode(e.getNextNode()):(this.treeWidget.openNode(e),!1)))},e.prototype.moveLeft=function(){var e=this.treeWidget.getSelectedNode();return!e||(e.isFolder()&&e.is_open?(this.treeWidget.closeNode(e),!1):this.selectNode(e.getParent()))},e.prototype.selectNode=function(e){return!e||(this.treeWidget.selectNode(e),this.treeWidget.scrollHandler&&!this.treeWidget.scrollHandler.isScrolledIntoView(jQuery(e.element).find(\".jqtree-element\"))&&this.treeWidget.scrollToNode(e),!1)},e.prototype.canHandleKeyboard=function(){return this.treeWidget.options.keyboardSupport&&this.isFocusOnTree()&&null!=this.treeWidget.getSelectedNode()},e.prototype.isFocusOnTree=function(){var e=document.activeElement;return Boolean(e&&\"SPAN\"===e.tagName&&this.treeWidget._containsElement(e))},e.LEFT=37,e.UP=38,e.RIGHT=39,e.DOWN=40,e}();t.default=n},function(e,t,o){\"use strict\";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});t.__esModule=!0;var i=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mouseDown=function(e){if(1===e.which){var o=t._handleMouseDown(t._getPositionInfo(e));return o&&e.preventDefault(),o}},t.mouseMove=function(e){return t._handleMouseMove(e,t._getPositionInfo(e))},t.mouseUp=function(e){return t._handleMouseUp(t._getPositionInfo(e))},t.touchStart=function(e){var o=e.originalEvent;if(!(o.touches.length>1)){var n=o.changedTouches[0];return t._handleMouseDown(t._getPositionInfo(n))}},t.touchMove=function(e){var o=e.originalEvent;if(!(o.touches.length>1)){var n=o.changedTouches[0];return t._handleMouseMove(e,t._getPositionInfo(n))}},t.touchEnd=function(e){var o=e.originalEvent;if(!(o.touches.length>1)){var n=o.changedTouches[0];return t._handleMouseUp(t._getPositionInfo(n))}},t}return r(t,e),t.prototype.setMouseDelay=function(e){this.mouseDelay=e},t.prototype._init=function(){this.$el.on(\"mousedown.mousewidget\",this.mouseDown),this.$el.on(\"touchstart.mousewidget\",this.touchStart),this.isMouseStarted=!1,this.mouseDelay=0,this.mouseDelayTimer=null,this.isMouseDelayMet=!0,this.mouseDownInfo=null},t.prototype._deinit=function(){this.$el.off(\"mousedown.mousewidget\"),this.$el.off(\"touchstart.mousewidget\");var e=jQuery(document);e.off(\"mousemove.mousewidget\"),e.off(\"mouseup.mousewidget\")},t.prototype._handleMouseDown=function(e){if(this.isMouseStarted&&this._handleMouseUp(e),this.mouseDownInfo=e,this._mouseCapture(e))return this._handleStartMouse(),!0},t.prototype._handleStartMouse=function(){var e=jQuery(document);e.on(\"mousemove.mousewidget\",this.mouseMove),e.on(\"touchmove.mousewidget\",this.touchMove),e.on(\"mouseup.mousewidget\",this.mouseUp),e.on(\"touchend.mousewidget\",this.touchEnd),this.mouseDelay&&this._startMouseDelayTimer()},t.prototype._startMouseDelayTimer=function(){var e=this;this.mouseDelayTimer&&clearTimeout(this.mouseDelayTimer),this.mouseDelayTimer=window.setTimeout(function(){e.isMouseDelayMet=!0},this.mouseDelay),this.isMouseDelayMet=!1},t.prototype._handleMouseMove=function(e,t){return this.isMouseStarted?(this._mouseDrag(t),e.preventDefault()):!(!this.mouseDelay||this.isMouseDelayMet)||(this.mouseDownInfo&&(this.isMouseStarted=!1!==this._mouseStart(this.mouseDownInfo)),this.isMouseStarted?this._mouseDrag(t):this._handleMouseUp(t),!this.isMouseStarted)},t.prototype._getPositionInfo=function(e){return{pageX:e.pageX,pageY:e.pageY,target:e.target,originalEvent:e}},t.prototype._handleMouseUp=function(e){var t=jQuery(document);t.off(\"mousemove.mousewidget\"),t.off(\"touchmove.mousewidget\"),t.off(\"mouseup.mousewidget\"),t.off(\"touchend.mousewidget\"),this.isMouseStarted&&(this.isMouseStarted=!1,this._mouseStop(e))},t}(o(3).default);t.default=i},function(e,t,o){\"use strict\";t.__esModule=!0;var n=o(1),r=function(){function e(e){this.treeWidget=e}return e.prototype.saveState=function(){var e=JSON.stringify(this.getState());this.treeWidget.options.onSetStateFromStorage?this.treeWidget.options.onSetStateFromStorage(e):this.supportsLocalStorage()&&localStorage.setItem(this.getKeyName(),e)},e.prototype.getStateFromStorage=function(){var e=this._loadFromStorage();return e?this._parseState(e):null},e.prototype.getState=function(){var e,t=this;return{open_nodes:(e=[],t.treeWidget.tree.iterate(function(t){return t.is_open&&t.id&&t.hasChildren()&&e.push(t.id),!0}),e),selected_node:t.treeWidget.getSelectedNodes().map(function(e){return e.id})}},e.prototype.setInitialState=function(e){if(e){var t=!1;return e.open_nodes&&(t=this._openInitialNodes(e.open_nodes)),e.selected_node&&(this._resetSelection(),this._selectInitialNodes(e.selected_node)),t}return!1},e.prototype.setInitialStateOnDemand=function(e,t){e?this._setInitialStateOnDemand(e.open_nodes,e.selected_node,t):t()},e.prototype.getNodeIdToBeSelected=function(){var e=this.getStateFromStorage();return e&&e.selected_node?e.selected_node[0]:null},e.prototype._parseState=function(e){var t=jQuery.parseJSON(e);return t&&t.selected_node&&n.isInt(t.selected_node)&&(t.selected_node=[t.selected_node]),t},e.prototype._loadFromStorage=function(){return this.treeWidget.options.onGetStateFromStorage?this.treeWidget.options.onGetStateFromStorage():this.supportsLocalStorage()?localStorage.getItem(this.getKeyName()):void 0},e.prototype._openInitialNodes=function(e){for(var t=!1,o=0,n=e;o<n.length;o++){var r=n[o],i=this.treeWidget.getNodeById(r);i&&(i.load_on_demand?t=!0:i.is_open=!0)}return t},e.prototype._selectInitialNodes=function(e){for(var t=0,o=0,n=e;o<n.length;o++){var r=n[o],i=this.treeWidget.getNodeById(r);i&&(t+=1,this.treeWidget.selectNodeHandler&&this.treeWidget.selectNodeHandler.addToSelection(i))}return 0!==t},e.prototype._resetSelection=function(){var e=this.treeWidget.selectNodeHandler;e&&e.getSelectedNodes().forEach(function(t){e.removeFromSelection(t)})},e.prototype._setInitialStateOnDemand=function(e,t,o){var n=this,r=0,i=e,s=function(){for(var e=[],s=0,l=i;s<l.length;s++){var d=l[s],u=n.treeWidget.getNodeById(d);u?u.is_loading||(u.load_on_demand?a(u):n.treeWidget._openNode(u,!1,null)):e.push(d)}i=e,n._selectInitialNodes(t)&&n.treeWidget._refreshElements(null),0===r&&o()},a=function(e){r+=1,n.treeWidget._openNode(e,!1,function(){r-=1,s()})};s()},e.prototype.getKeyName=function(){return\"string\"==typeof this.treeWidget.options.saveState?this.treeWidget.options.saveState:\"tree\"},e.prototype.supportsLocalStorage=function(){return null==this._supportsLocalStorage&&(this._supportsLocalStorage=function(){if(null==localStorage)return!1;try{var e=\"_storage_test\";sessionStorage.setItem(e,\"value\"),sessionStorage.removeItem(e)}catch(e){return!1}return!0}()),this._supportsLocalStorage},e}();t.default=r},function(e,t,o){\"use strict\";t.__esModule=!0;var n=function(){function e(e){this.treeWidget=e,this.previousTop=-1,this.isInitialized=!1}return e.prototype.checkScrolling=function(){this.ensureInit(),this.checkVerticalScrolling(),this.checkHorizontalScrolling()},e.prototype.scrollToY=function(e){if(this.ensureInit(),this.$scrollParent)this.$scrollParent[0].scrollTop=e;else{var t=this.treeWidget.$el.offset(),o=t?t.top:0;jQuery(document).scrollTop(e+o)}},e.prototype.isScrolledIntoView=function(e){var t,o,n,r;this.ensureInit();var i,s=e.height()||0;this.$scrollParent?(r=0,o=this.$scrollParent.height()||0,t=(n=((i=e.offset())?i.top:0)-this.scrollParentTop)+s):(o=(r=jQuery(window).scrollTop()||0)+(jQuery(window).height()||0),t=(n=(i=e.offset())?i.top:0)+s);return t<=o&&n>=r},e.prototype.getScrollLeft=function(){return this.$scrollParent&&this.$scrollParent.scrollLeft()||0},e.prototype.initScrollParent=function(){var e=this,t=function(){e.scrollParentTop=0,e.$scrollParent=null};\"fixed\"===this.treeWidget.$el.css(\"position\")&&t();var o=function(){var t=[\"overflow\",\"overflow-y\"],o=function(e){for(var o=0,n=t;o<n.length;o++){var r=n[o],i=e.css(r);if(\"auto\"===i||\"scroll\"===i)return!0}return!1};if(o(e.treeWidget.$el))return e.treeWidget.$el;for(var n=0,r=e.treeWidget.$el.parents().get();n<r.length;n++){var i=r[n],s=jQuery(i);if(o(s))return s}return null}();if(o&&o.length&&\"HTML\"!==o[0].tagName){this.$scrollParent=o;var n=this.$scrollParent.offset();this.scrollParentTop=n?n.top:0}else t();this.isInitialized=!0},e.prototype.ensureInit=function(){this.isInitialized||this.initScrollParent()},e.prototype.handleVerticalScrollingWithScrollParent=function(e){var t=this.$scrollParent&&this.$scrollParent[0];t&&(this.scrollParentTop+t.offsetHeight-e.bottom<20?(t.scrollTop+=20,this.treeWidget.refreshHitAreas(),this.previousTop=-1):e.top-this.scrollParentTop<20&&(t.scrollTop-=20,this.treeWidget.refreshHitAreas(),this.previousTop=-1))},e.prototype.handleVerticalScrollingWithDocument=function(e){var t=jQuery(document).scrollTop()||0;e.top-t<20?jQuery(document).scrollTop(t-20):(jQuery(window).height()||0)-(e.bottom-t)<20&&jQuery(document).scrollTop(t+20)},e.prototype.checkVerticalScrolling=function(){var e=this.treeWidget.dndHandler&&this.treeWidget.dndHandler.hoveredArea;e&&e.top!==this.previousTop&&(this.previousTop=e.top,this.$scrollParent?this.handleVerticalScrollingWithScrollParent(e):this.handleVerticalScrollingWithDocument(e))},e.prototype.checkHorizontalScrolling=function(){var e=this.treeWidget.dndHandler&&this.treeWidget.dndHandler.positionInfo;e&&(this.$scrollParent?this.handleHorizontalScrollingWithParent(e):this.handleHorizontalScrollingWithDocument(e))},e.prototype.handleHorizontalScrollingWithParent=function(e){if(void 0!==e.pageX&&void 0!==e.pageY){var t=this.$scrollParent,o=t&&t.offset();if(t&&o){var n=t[0],r=n.scrollLeft+n.clientWidth<n.scrollWidth,i=n.scrollLeft>0,s=o.left+n.clientWidth,a=o.left,l=e.pageX>s-20,d=e.pageX<a+20;l&&r?n.scrollLeft=Math.min(n.scrollLeft+20,n.scrollWidth):d&&i&&(n.scrollLeft=Math.max(n.scrollLeft-20,0))}}},e.prototype.handleHorizontalScrollingWithDocument=function(e){if(void 0!==e.pageX&&void 0!==e.pageY){var t=jQuery(document),o=t.scrollLeft()||0,n=jQuery(window).width()||0,r=o>0,i=e.pageX>n-20,s=e.pageX-o<20;i?t.scrollLeft(o+20):s&&r&&t.scrollLeft(Math.max(o-20,0))}},e}();t.default=n},function(e,t,o){\"use strict\";t.__esModule=!0;var n=function(){function e(e){this.treeWidget=e,this.clear()}return e.prototype.getSelectedNode=function(){var e=this.getSelectedNodes();return!!e.length&&e[0]},e.prototype.getSelectedNodes=function(){if(this.selectedSingleNode)return[this.selectedSingleNode];var e=[];for(var t in this.selectedNodes)if(this.selectedNodes.hasOwnProperty(t)){var o=this.treeWidget.getNodeById(t);o&&e.push(o)}return e},e.prototype.getSelectedNodesUnder=function(e){if(this.selectedSingleNode)return e.isParentOf(this.selectedSingleNode)?[this.selectedSingleNode]:[];var t=[];for(var o in this.selectedNodes)if(this.selectedNodes.hasOwnProperty(o)){var n=this.treeWidget.getNodeById(o);n&&e.isParentOf(n)&&t.push(n)}return t},e.prototype.isNodeSelected=function(e){return!!e&&(null!=e.id?!!this.selectedNodes[e.id]:!!this.selectedSingleNode&&this.selectedSingleNode.element===e.element)},e.prototype.clear=function(){this.selectedNodes={},this.selectedSingleNode=null},e.prototype.removeFromSelection=function(e,t){var o=this;void 0===t&&(t=!1),null==e.id?this.selectedSingleNode&&e.element===this.selectedSingleNode.element&&(this.selectedSingleNode=null):(delete this.selectedNodes[e.id],t&&e.iterate(function(){return delete o.selectedNodes[e.id],!0}))},e.prototype.addToSelection=function(e){null!=e.id?this.selectedNodes[e.id]=!0:this.selectedSingleNode=e},e}();t.default=n},function(e,t,o){\"use strict\";var n,r=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});t.__esModule=!0;var i=o(0),s=function(){function e(e,t){this.init(e,t)}return e.prototype.init=function(e,t){this.node=e,this.treeWidget=t,e.element||(e.element=this.treeWidget.element.get(0)),this.$element=jQuery(e.element)},e.prototype.addDropHint=function(e){return this.mustShowBorderDropHint(e)?new l(this.$element,this.treeWidget._getScrollLeft()):new d(this.node,this.$element,e)},e.prototype.select=function(e){var t=this.getLi();t.addClass(\"jqtree-selected\"),t.attr(\"aria-selected\",\"true\");var o=this.getSpan();o.attr(\"tabindex\",this.treeWidget.options.tabIndex),e&&o.focus()},e.prototype.deselect=function(){var e=this.getLi();e.removeClass(\"jqtree-selected\"),e.attr(\"aria-selected\",\"false\");var t=this.getSpan();t.removeAttr(\"tabindex\"),t.blur()},e.prototype.getUl=function(){return this.$element.children(\"ul:first\")},e.prototype.getSpan=function(){return this.$element.children(\".jqtree-element\").find(\"span.jqtree-title\")},e.prototype.getLi=function(){return this.$element},e.prototype.mustShowBorderDropHint=function(e){return e===i.Position.Inside},e}();t.NodeElement=s;var a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return r(t,e),t.prototype.open=function(e,t,o){var n=this;if(void 0===t&&(t=!0),void 0===o&&(o=\"fast\"),!this.node.is_open){this.node.is_open=!0;var r=this.getButton();r.removeClass(\"jqtree-closed\"),r.html(\"\");var i=r.get(0);if(i){var s=this.treeWidget.renderer.openedIconElement.cloneNode(!0);i.appendChild(s)}var a=function(){n.getLi().removeClass(\"jqtree-closed\"),n.getSpan().attr(\"aria-expanded\",\"true\"),e&&e(n.node),n.treeWidget._triggerEvent(\"tree.open\",{node:n.node})};t?this.getUl().slideDown(o,a):(this.getUl().show(),a())}},t.prototype.close=function(e,t){var o=this;if(void 0===e&&(e=!0),void 0===t&&(t=\"fast\"),this.node.is_open){this.node.is_open=!1;var n=this.getButton();n.addClass(\"jqtree-closed\"),n.html(\"\");var r=n.get(0);if(r){var i=this.treeWidget.renderer.closedIconElement.cloneNode(!0);r.appendChild(i)}var s=function(){o.getLi().addClass(\"jqtree-closed\"),o.getSpan().attr(\"aria-expanded\",\"false\"),o.treeWidget._triggerEvent(\"tree.close\",{node:o.node})};e?this.getUl().slideUp(t,s):(this.getUl().hide(),s())}},t.prototype.mustShowBorderDropHint=function(e){return!this.node.is_open&&e===i.Position.Inside},t.prototype.getButton=function(){return this.$element.children(\".jqtree-element\").find(\"a.jqtree-toggler\")},t}(s);t.FolderElement=a;var l=function(){function e(e,t){var o=e.children(\".jqtree-element\"),n=e.width()||0,r=Math.max(n+t-4,0),i=o.outerHeight()||0,s=Math.max(i-4,0);this.$hint=jQuery('<span class=\"jqtree-border\"></span>'),o.append(this.$hint),this.$hint.css({width:r,height:s})}return e.prototype.remove=function(){this.$hint.remove()},e}();t.BorderDropHint=l;var d=function(){function e(e,t,o){this.$element=t,this.node=e,this.$ghost=jQuery('<li class=\"jqtree_common jqtree-ghost\"><span class=\"jqtree_common jqtree-circle\"></span>\\n            <span class=\"jqtree_common jqtree-line\"></span></li>'),o===i.Position.After?this.moveAfter():o===i.Position.Before?this.moveBefore():o===i.Position.Inside&&(e.isFolder()&&e.is_open?this.moveInsideOpenFolder():this.moveInside())}return e.prototype.remove=function(){this.$ghost.remove()},e.prototype.moveAfter=function(){this.$element.after(this.$ghost)},e.prototype.moveBefore=function(){this.$element.before(this.$ghost)},e.prototype.moveInsideOpenFolder=function(){jQuery(this.node.children[0].element).before(this.$ghost)},e.prototype.moveInside=function(){this.$element.after(this.$ghost),this.$ghost.addClass(\"jqtree-inside\")},e}()},,function(e,t,o){e.exports=o(4)}]);\n}.call({jQuery:$}));\n\n//# sourceURL=webpack:///./.plone/++plone++static/components/jqtree/tree.jquery.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/addnew.js":
/*!************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/addnew.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, PopoverView) {\n  'use strict';\n\n  var AddNewView = PopoverView.extend({\n    className: 'popover addnew',\n    title: _.template('<%= _t(\"Add new file\") %>'),\n    content: _.template(\n      '<span class=\"current-path\"></span>' +\n      '<div class=\"form-group\">' +\n        '<label for=\"filename-field\"><%= _t(\"Filename\") %></label>' +\n        '<input type=\"text\" class=\"form-control\" ' +\n                'id=\"filename-field\" placeholder=\"<%= _t(\"Enter filename\") %>\">' +\n      '</div>' +\n      '<button class=\"btn btn-block btn-primary\"><%= _t(\"Add\") %></button>'\n    ),\n    events: {\n      'click button': 'addButtonClicked'\n    },\n    addButtonClicked: function(e) {\n      var self = this;\n      var $input = self.$('input');\n      var filename = $input.val();\n      if (filename){\n        self.app.doAction('addFile', {\n          type: 'POST',\n          data: {\n            filename: filename,\n            path: self.app.getFolderPath()\n          },\n          success: function(data) {\n            self.hide();\n            self.data = data;\n            self.app.refreshTree(function() {\n              var path = self.data.parent + '/' +  self.data.name;\n              self.app.selectItem(path);\n              delete self.data;\n            });\n          }\n        });\n        // XXX show loading\n      } else {\n        self.$('.form-group').addClass('has-error');\n      }\n    }\n  });\n\n  return AddNewView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/addnew.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/basepopover.js":
/*!*****************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/basepopover.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/popover */ \"./.plone/++resource++mockupjs/ui/views/popover.js\"),\n  __webpack_require__(/*! text!mockup-patterns-filemanager-url/templates/popover.xml */ \"./node_modules/text-loader/index.js!./.plone/++resource++mockup/filemanager/templates/popover.xml\"),\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, PopoverView, PopoverTemplate) {\n  'use strict';\n\n  var FileManagerPopover = PopoverView.extend({\n    className: 'popover',\n    title: _.template('nothing'),\n    content: _.template('<div/>'),\n    template: PopoverTemplate,\n    initialize: function(options) {\n      this.app = options.app;\n      PopoverView.prototype.initialize.apply(this, [options]);\n    },\n    afterRender: function () {\n      var self = this;\n      self.$el.find(\".popover-close\").click(function(e){\n        self.hide(true);\n      });\n      return self;\n    },\n    getBodyClassName: function(){\n      var name = 'popover-';\n      if(this.options.id){\n        name += this.options.id + '-';\n      }\n      name += 'active';\n      return name;\n    },\n    render: function() {\n      var self = this;\n      PopoverView.prototype.render.call(this);\n      return self;\n    },\n    hide: function(closePopover) {\n      if(this.closeOnOutClick || closePopover == true){\n        this.opened = false;\n        this.$el.removeClass('active');\n        if (this.triggerView) {\n          this.triggerView.$el.removeClass('active');\n          this.triggerView.$el.attr('aria-hidden', 'true');\n        }\n        this.uiEventTrigger('hide', this);\n        this.$el.attr('aria-hidden', 'true');\n        $('body').removeClass(this.getBodyClassName());\n      }\n    },\n    toggle: function(button, e) {\n      PopoverView.prototype.toggle.apply(this, [button, e]);\n      var self = this;\n      if (!self.opened) {\n        return;\n      }\n      var $path = self.$('.current-path');\n      if ($path.length !== 0) {\n        $path.html(self.getPath());\n      }\n    },\n    getPath: function() {\n      return this.app.getFolderPath();\n    }\n  });\n\n  return FileManagerPopover;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/basepopover.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/customize.js":
/*!***************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/customize.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\"),\n  __webpack_require__(/*! translate */ \"./.plone/++resource++mockupjs/i18n-wrapper.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, PopoverView, _t) {\n  'use strict';\n\n  var CustomizeView = PopoverView.extend({\n    className: 'popover customize',\n    title: _.template('<%= _t(\"Add new override\") %>'),\n    content: _.template(\n      '<form>' +\n        '<div class=\"input-group\">' +\n          '<input type=\"text\" class=\"search form-control\" ' +\n                  'id=\"search-field\" placeholder=\"<%= _t(\"Find resource in plone to override\") %>\">' +\n          '<span class=\"input-group-btn\">' +\n            '<input type=\"submit\" class=\"btn btn-primary\" value=\"<%= _t(\"Search\") %>\"/>' +\n          '</span>' +\n        '</div>' +\n      '</form>' +\n      '<ul class=\"results list-group\">' +\n      '</ul>'\n    ),\n    render: function() {\n      var self = this;\n      PopoverView.prototype.render.call(this);\n      self.$form = self.$('form');\n      self.$results = self.$('.results');\n      self.$form.submit(function(e) {\n        e.preventDefault();\n        $.ajax({\n          url: self.app.options.resourceSearchUrl,\n          dataType: 'json',\n          success: function(data) {\n            self.$results.empty();\n            _.each(data, function(item) {\n              var $item = $(\n                '<li class=\"list-group-item\" data-id=\"' + item.id + '\">' +\n                  '<span class=\"badge\"><a href=#\">' + _t('Customize') + '</a></span>' +\n                  item.id +\n                '</li>');\n              $('a', $item).click(function(e) {\n                e.preventDefault();\n                self.customize($(this).parents('li').eq(0).attr('data-id'));\n              });\n              self.$results.append($item);\n            });\n          }\n        });\n      });\n      return self;\n    },\n    customize: function(resource) {\n      var self = this;\n      self.app.doAction('customize', {\n        type: 'POST',\n        data: {\n          resource: resource\n        },\n        success: function(data) {\n          self.hide();\n          // clear out\n          self.$('input.search').attr('value', '');\n          self.$results.empty();\n          self.app.refreshTree();\n        }\n      });\n    }\n  });\n\n  return CustomizeView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/customize.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/delete.js":
/*!************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/delete.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, PopoverView) {\n  'use strict';\n\n  var DeleteView = PopoverView.extend({\n    className: 'popover delete',\n    title: _.template('<%= _t(\"Delete\") %>'),\n    content: _.template(\n      '<span class=\"current-path\"></span>' +\n      '<p><%= _t(\"Are you sure you want to delete this resource?\") %></p>' +\n      '<button class=\"btn btn-block btn-danger\"><%= _t(\"Yes, delete\") %></button>'\n    ),\n    events: {\n      'click button': 'deleteButtonClicked'\n    },\n    getPath: function() {\n      return this.app.getNodePath();\n    },\n    deleteButtonClicked: function(e) {\n      var self = this;\n      var path = self.app.getNodePath();\n      if (path === undefined) {\n        alert('No file selected.');\n        return;\n      }\n      self.app.doAction('delete', {\n        type: 'POST',\n        data: {\n          path: path\n        },\n        success: function(data) {\n          self.hide();\n          self.data = data;\n          self.app.refreshTree(function() {\n\n            var parent = self.data.path;\n            parent = parent.substr(0, parent.lastIndexOf('/'));\n\n            var node = self.app.getNodeByPath(parent);\n            if (node !== null) {\n              self.app.$tree.tree('openNode', node);\n            }\n\n            self.app.closeActiveTab();\n\n            delete self.app.fileData[self.data.path];\n            delete self.data;\n          });\n          self.app.resizeEditor();\n        }\n      });\n      // XXX show loading\n    }\n  });\n\n  return DeleteView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/delete.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/findfile.js":
/*!**************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/findfile.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\"),\n  __webpack_require__(/*! translate */ \"./.plone/++resource++mockupjs/i18n-wrapper.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, PopoverView, _t) {\n  'use strict';\n\n  var FindFile = PopoverView.extend({\n    className: 'popover filesearch',\n    closeOnOutClick: false,\n    backdropOptions: {\n      zIndex: '1009',\n      opacity: '0.4',\n      className: 'backdrop backdrop-popover',\n      classActiveName: 'backdrop-active',\n      closeOnEsc: false,\n      closeOnClick: false\n    },\n    title: _.template('<%= _t(\"Find File\") %>'),\n    content: _.template(\n      '<form>' +\n        '<div class=\"input-group\">' +\n          '<input type=\"text\" class=\"search form-control\" ' +\n                  'id=\"file-search-field\" placeholder=\"<%= _t(\"Find theme resource in plone\") %>\">' +\n        '</div>' +\n        '<div class=\"input-group\">' +\n          '<input type=\"submit\" class=\"btn btn-primary\" value=\"<%= _t(\"Search\") %>\"/>' +\n        '</div>' +\n      '</form><br/>' +\n      '<ul class=\"results list-group\">' +\n      '</ul>'\n    ),\n    appendToResults: function(item){\n      var self = this;\n      var $item = $(\n        '<li class=\"list-group-item\">' +\n          '<span class=\"badge\"><a data-target=\"' + item.path + '\" href=#\">' +\n          _t(item.filename) + '</a></span>' +\n        '</li>');\n      $('a', $item).click(function(e) {\n        e.preventDefault();\n        self.findfile($(this).attr('data-target'));\n      });\n      self.$results.append($item);\n    },\n    filterFiles: function(patt, data){\n      var self = this;\n      _.each(data, function(item) {\n        if(item.folder){\n          self.filterFiles(patt, item.children);\n        }else{\n          if(patt.test(item.filename)){\n            self.appendToResults(item);\n            self.noMatches++;\n          }\n        }\n      });\n    },\n    render: function() {\n      var self = this;\n      PopoverView.prototype.render.call(this);\n      self.$form = self.$('form');\n      self.$searchFor = self.$(\"input\");\n      self.$results = self.$('.results');\n      self.$form.submit(function(e) {\n        e.preventDefault();\n        $.ajax({\n          url: self.app.options.actionUrl + '?action=dataTree',\n          dataType: 'json',\n          success: function(data) {\n            self.$results.empty();\n            self.noMatches = 0;\n            var searchFor = self.$searchFor.val();\n            var patt = new RegExp(searchFor, \"g\");\n            self.filterFiles(patt, data);\n            if(self.noMatches == 0){\n              self.$results.append(\"<span>No results found for \" + searchFor + \"</span>\");\n            }\n          }\n        });\n      });\n      return self;\n    },\n    findfile: function(resource) {\n      var self = this;\n      self.app.doAction('getFile', {\n        data: {\n          path: resource\n        },\n        dataType: 'json',\n        success: function(data) {\n          self.app.fileData[resource] = data;\n          self.app.openEditor(resource);\n        }\n      });\n    }\n  });\n\n  return FindFile;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/findfile.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/findinfiles.js":
/*!*****************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/findinfiles.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\"),\n  __webpack_require__(/*! translate */ \"./.plone/++resource++mockupjs/i18n-wrapper.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, PopoverView, _t) {\n  'use strict';\n\n  var FindInFiles = PopoverView.extend({\n    className: 'popover filesearch',\n    closeOnOutClick: false,\n    backdropOptions: {\n      zIndex: '1009',\n      opacity: '0.4',\n      className: 'backdrop backdrop-popover',\n      classActiveName: 'backdrop-active',\n      closeOnEsc: false,\n      closeOnClick: false\n    },\n    title: _.template('<%= _t(\"Find in File\") %>'),\n    content: _.template(\n      '<form>' +\n        '<div class=\"input-group\">' +\n          '<input type=\"text\" class=\"search form-control\" ' +\n                  'id=\"file-search-field\" placeholder=\"<%= _t(\"Find text within theme resource in plone\") %>\">' +\n        '</div>' +\n        '<div class=\"input-group\">' +\n          '<input type=\"submit\" class=\"btn btn-primary\" value=\"<%= _t(\"Search\") %>\"/>' +\n        '</div>' +\n      '</form><br/>' +\n      '<ul style=\"max-height: 400px; overflow: auto;\" class=\"results list-group\">' +\n      '</ul>'\n    ),\n    appendToResults: function(item){\n      var self = this, seen = null;\n      var file_item =\n        '<li class=\"list-group-item\" data-id=\"' + item.file.label + '\">' +\n          '<span class=\"badge\">' + _t(item.file.filename) + '</span><ul>';\n      for(var x in item.lines){\n        seen = item.lines[x];\n        file_item += '<li class=\"list-group-item\" data-id=\"' + item.file.label + '\">' +\n          '<span class=\"badge\"><a class=\"ff-open-file\" data-target=\"'+item.file.path+'\" ' +\n          'target-line=\"'+seen.line+'\" href=\"#\">Line ' +\n          '<span style=\"display: inline-block; width: 100px;\">' + seen.line +\n          '</span><span>'+seen.text+'</span><a></span></li>';\n      }\n      file_item += '</ul></li>';\n      var $item = $(file_item);\n      $('a', $item).click(function(e) {\n        e.preventDefault();\n        self.findinfiles(\n          $(this).attr(\"data-target\"),\n          parseInt($(this).attr(\"target-line\"))\n        );\n      });\n      self.$results.append($item);\n    },\n\n    filterFile: function(patt, item){\n      var self = this;\n      $.ajax({\n        url: self.app.options.actionUrl + '?action=getFile&path='+item.path.replace(\"/\", \"%2F\"),\n        dataType: 'json',\n        success: function(data) {\n          var contents = data[\"contents\"];\n          if(contents == undefined){\n            return;\n          }\n          var lines = contents.split(\"\\n\");\n          var seen = [], line = '';\n          var result = null;\n          for(var x in lines){\n            line = lines[x];\n            result = patt.exec(line);\n            if(result != null){\n              seen.push({\n                \"line\": parseInt(x) + 1,\n                \"text\": '<b>'+result[0]+'</b>'+line.substr(result[\"index\"] + result[0].length, 20)\n              });\n            }\n          }\n          if(seen.length > 0){\n            self.appendToResults({file: item, lines: seen});\n            self.noMatches += seen.length;\n          }\n        }\n      });\n    },\n    filterFiles: function(patt, data){\n      var self = this;\n      _.each(data, function(item) {\n        if(item.folder){\n          self.filterFiles(patt, item.children);\n        }else{\n          self.filterFile(patt, item);\n        }\n      });\n    },\n    render: function() {\n      var self = this;\n      PopoverView.prototype.render.call(this);\n      self.$form = self.$('form');\n      self.$searchFor = self.$(\"input\");\n      self.$results = self.$('.results');\n      self.$form.submit(function(e) {\n        e.preventDefault();\n        $.ajax({\n          url: self.app.options.actionUrl + '?action=dataTree',\n          dataType: 'json',\n          success: function(data) {\n            self.$results.empty();\n            self.noMatches = 0;\n            var searchFor = self.$searchFor.val();\n            var patt = new RegExp(searchFor, \"g\");\n            self.filterFiles(patt, data);\n          }\n        });\n      });\n      return self;\n    },\n    findinfiles: function(resource, line) {\n      var self = this;\n      self.app.doAction('getFile', {\n        data: {\n          path: resource\n        },\n        dataType: 'json',\n        success: function(data) {\n          self.app.fileData[resource] = data;\n          self.app.openEditor(resource, {goToLine: line});\n        }\n      });\n    }\n  });\n\n  return FindInFiles;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/findinfiles.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/newfolder.js":
/*!***************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/newfolder.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, PopoverView) {\n  'use strict';\n\n  var AddNewView = PopoverView.extend({\n    className: 'popover addfolder',\n    title: _.template('<%= _t(\"New folder\") %>'),\n    content: _.template(\n      '<span class=\"current-path\"></span>' +\n      '<div class=\"form-group\">' +\n        '<label for=\"filename-field\"><%= _t(\"Add new folder to current directory\") %></label>' +\n        '<input type=\"email\" class=\"form-control\" ' +\n                'id=\"filename-field\" placeholder=\"<%= _t(\"Enter folder name\") %>\">' +\n      '</div>' +\n      '<button class=\"btn btn-block btn-primary\"><%= _t(\"Add\") %></button>'\n    ),\n    events: {\n      'click button': 'addButtonClicked'\n    },\n    addButtonClicked: function(e) {\n      var self = this;\n      var $input = self.$('input');\n      var name = $input.val();\n      if (name) {\n        self.app.doAction('addFolder', {\n          type: 'POST',\n          data: {\n            name: name,\n            path: self.app.getFolderPath()\n          },\n          success: function(data) {\n            self.hide();\n            self.data = data;\n            self.app.refreshTree(function() {\n              var node = self.app.getNodeByPath(self.data.parent);\n              self.app.$tree.tree('openNode', node);\n              delete self.data;\n            });\n          }\n        });\n        // XXX show loading\n      } else {\n        self.$('.form-group').addClass('has-error');\n      }\n    }\n  });\n\n  return AddNewView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/newfolder.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/rename.js":
/*!************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/rename.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, PopoverView) {\n  'use strict';\n\n  var RenameView = PopoverView.extend({\n    className: 'popover addnew',\n    title: _.template('<%= _t(\"Rename\") %>'),\n    content: _.template(\n      '<span class=\"current-path\"></span>' +\n      '<div class=\"form-group\">' +\n        '<label for=\"filename-field\"><%= _t(\"Filename\") %></label>' +\n        '<input type=\"text\" class=\"form-control\" ' +\n                'id=\"filename-field\">' +\n      '</div>' +\n      '<button class=\"btn btn-block btn-primary\"><%= _t(\"Rename\") %></button>'\n    ),\n    events: {\n      'click button': 'renameButtonClicked'\n    },\n    toggle: function(button, e) {\n      PopoverView.prototype.toggle.apply(this, [button, e]);\n      var self = this;\n      if (!self.opened) {\n        return;\n      }\n      var node = self.app.getSelectedNode();\n      self.$('input').val(node.name);\n      self.$('.current-path').html(self.app.getNodePath(node));\n    },\n    renameButtonClicked: function(e) {\n      var self = this;\n      var $input = self.$('input');\n      var filename = $input.val();\n      if (filename) {\n        self.app.doAction('renameFile', {\n          type: 'POST',\n          data: {\n            path: self.app.getNodePath(),\n            filename: filename\n          },\n          success: function(data) {\n            self.hide();\n            self.data = data;\n            self.app.refreshTree(function() {\n              var path;\n              var oldPath;\n              if (self.data.newParent != '/') {\n                path = [self.data.newParent, self.data.newName].join('/');\n                oldPath = [self.data.oldParent, self.data.oldName].join('/');\n              } else {\n                path = '/' + self.data.newName;\n                oldPath = '/' + self.data.oldName;\n              }\n\n              if (self.app.fileData[path] !== undefined) {\n                self.app.refreshFile(path);\n              } else {\n                self.app.selectItem(path);\n              }\n\n              self.app.closeTab(oldPath);\n              delete self.data;\n            });\n          }\n        });\n        // XXX show loading\n      } else {\n        self.$('.form-group').addClass('has-error');\n      }\n    }\n  });\n\n  return RenameView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/rename.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/js/upload.js":
/*!************************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/js/upload.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/basepopover */ \"./.plone/++resource++mockup/filemanager/js/basepopover.js\"),\n  __webpack_require__(/*! mockup-patterns-upload */ \"./.plone/++resource++mockup/upload/pattern.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, PopoverView, Upload) {\n  'use strict';\n\n  var UploadView = PopoverView.extend({\n    className: 'popover upload',\n    title: _.template('<%= _t(\"Upload\") %>'),\n    content: _.template(\n      '<span>Location: <span class=\"current-path\"></span></span>' +\n      '<input type=\"text\" name=\"upload\" style=\"display:none\" />' +\n      '<div class=\"uploadify-me\"></div>'),\n    render: function() {\n      var self = this;\n      PopoverView.prototype.render.call(this);\n      self.upload = new Upload(self.$('.uploadify-me').addClass('pat-upload'), {\n        url: self.app.options.uploadUrl,\n        success: function(response) {\n          if (self.callback) {\n            if (response.status == 'success') {\n              self.callback.apply(self.app, [response]);\n            } else {\n              alert('There was a problem during the upload process');\n            }\n          }\n        }\n      });\n      return this;\n    },\n    toggle: function(button, e) {\n      /* we need to be able to change the current default upload directory */\n      PopoverView.prototype.toggle.apply(this, [button, e]);\n      if (!this.opened) {\n        return;\n      }\n    }\n\n  });\n\n  return UploadView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/js/upload.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/filemanager/pattern.js":
/*!**********************************************************!*\
  !*** ./.plone/++resource++mockup/filemanager/pattern.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* Filemanager pattern.\n *\n * Options:\n *    aceConfig(object): ace configuration ({})\n *    actionUrl(string): base url to get/put data. Action is passed is an a parameters, ?action=(dataTree, newFile, deleteFile, getFile, saveFile)\n *    uploadUrl(string): url to upload files to\n *    resourceSearchUrl(string): url to search for resources to customize\n *\n * Documentation:\n *\n *\n *   {{ example-1 }}\n *\n *   Example with upload\n *\n *   {{ example-2 }}\n *\n * Example: example-1\n *    <div class=\"pat-filemanager\"\n *         data-pat-filemanager=\"actionUrl:/filemanager-actions;\n *                               resourceSearchUrl:/search-resources;\">\n *    </div>\n *\n * Example: example-2\n *    <div class=\"pat-filemanager\"\n *         data-pat-filemanager=\"actionUrl:/filemanager-actions;\n *                               uploadUrl:/upload;\n *                               resourceSearchUrl:/search-resources;\">\n *    </div>\n *\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! pat-base */ \"./.plone/++plone++static/components/patternslib/src/core/base.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! jqtree-contextmenu */ \"./.plone/++plone++static/components/cs-jqtree-contextmenu/src/jqTreeContextMenu.js\"),\n  __webpack_require__(/*! mockup-patterns-tree */ \"./.plone/++resource++mockup/tree/pattern.js\"),\n  __webpack_require__(/*! mockup-patterns-texteditor */ \"./.plone/++resource++mockup/texteditor/pattern.js\"),\n  __webpack_require__(/*! text!mockup-patterns-filemanager-url/templates/app.xml */ \"./node_modules/text-loader/index.js!./.plone/++resource++mockup/filemanager/templates/app.xml\"),\n  __webpack_require__(/*! mockup-ui-url/views/toolbar */ \"./.plone/++resource++mockupjs/ui/views/toolbar.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/button */ \"./.plone/++resource++mockupjs/ui/views/button.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/buttongroup */ \"./.plone/++resource++mockupjs/ui/views/buttongroup.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/anchor */ \"./.plone/++resource++mockupjs/ui/views/anchor.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/dropdown */ \"./.plone/++resource++mockupjs/ui/views/dropdown.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/addnew */ \"./.plone/++resource++mockup/filemanager/js/addnew.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/newfolder */ \"./.plone/++resource++mockup/filemanager/js/newfolder.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/findfile */ \"./.plone/++resource++mockup/filemanager/js/findfile.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/findinfiles */ \"./.plone/++resource++mockup/filemanager/js/findinfiles.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/delete */ \"./.plone/++resource++mockup/filemanager/js/delete.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/customize */ \"./.plone/++resource++mockup/filemanager/js/customize.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/rename */ \"./.plone/++resource++mockup/filemanager/js/rename.js\"),\n  __webpack_require__(/*! mockup-patterns-filemanager-url/js/upload */ \"./.plone/++resource++mockup/filemanager/js/upload.js\"),\n  __webpack_require__(/*! translate */ \"./.plone/++resource++mockupjs/i18n-wrapper.js\"),\n  __webpack_require__(/*! mockup-utils */ \"./.plone/++resource++mockupjs/utils.js\"),\n  __webpack_require__(/*! text!mockup-ui-url/templates/popover.xml */ \"./node_modules/text-loader/index.js!./.plone/++resource++mockupjs/ui/templates/popover.xml\"),\n  __webpack_require__(/*! text!mockup-ui-url/templates/dropdown.xml */ \"./node_modules/text-loader/index.js!./.plone/++resource++mockupjs/ui/templates/dropdown.xml\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, Base, _, ContextMenu, Tree, TextEditor, AppTemplate, Toolbar,\n  ButtonView, ButtonGroup, AnchorView, DropdownView,\n  AddNewView, NewFolderView, FindFileView, FindInFilesView, DeleteView,\n  CustomizeView, RenameView, UploadView, _t, utils) {\n  'use strict';\n\n  var FileManager = Base.extend({\n    name: 'filemanager',\n    trigger: '.pat-filemanager',\n    parser: 'mockup',\n    template: _.template(AppTemplate),\n    tabItemTemplate: _.template(\n      '<li class=\"active\" data-path=\"<%= path %>\">' +\n        '<a href=\"#\" class=\"select\"><%= path %></a>' +\n        '<a href=\"#\" class=\"remove\">' +\n          '<span class=\"glyphicon glyphicon-remove-circle\"></span>' +\n        '</a>' +\n      '</li>'),\n    saveBtn: null,\n    uploadFolder: '',\n    fileData: {},\n    /* mapping of files to data that it describes */\n    defaults: {\n      aceConfig: {},\n      actionUrl: null,\n      uploadUrl: null,\n      resourceSearchUrl: null,\n      treeConfig: {\n        autoOpen: true\n      }\n    },\n    init: function() {\n      var self = this;\n\n      if (self.options.actionUrl === null) {\n        self.$el.html('Must specify actionUrl setting for pattern');\n        return;\n      }\n\n      self.options.treeConfig = $.extend(true, {}, self.treeConfig, {\n        dataUrl: self.options.actionUrl + '?action=dataTree',\n        dragAndDrop: true,\n        useContextMenu: true,\n        onCanMoveTo: function(moved, target, position) {\n          /* if not using folder option, just allow, otherwise, only allow if folder */\n          if (position === \"inside\") {\n            return target.folder === undefined || target.folder === true;\n          }\n          return true;\n        },\n        onCreateLi: function(node, li) {\n          var imageTypes = ['png', 'jpg', 'jpeg', 'gif', 'ico'];\n          var themeTypes = ['css', 'html', 'htm', 'txt', 'xml', 'js', 'cfg', 'less'];\n          $('span', li).addClass('glyphicon');\n          if (node.folder) {\n            $('span', li).addClass('glyphicon-folder-close').addClass(\"droptarget\");\n          } else if ($.inArray(node.fileType, imageTypes) >= 0) {\n            $('span', li).addClass('glyphicon-picture');\n          } else if ($.inArray(node.fileType, themeTypes) >= 0) {\n            $('span', li).addClass('glyphicon-file');\n          } else {\n            $('span', li).addClass('glyphicon-cog');\n          }\n        }\n      });\n\n      self.fileData = {};\n\n      self.saveBtn = new ButtonView({\n        id: 'save',\n        title: _t('Save'),\n        icon: 'floppy-disk',\n        context: 'primary',\n        shortcut: 'Ctrl-S'\n      });\n      self.btns = {\n        \"newfolder\": new AnchorView({\n          id: 'newfolder',\n          title: _t('New folder'),\n          tooltip: _t('Add new folder to current directory'),\n          icon: 'folder-open',\n          context: 'default',\n          shortcut: 'Alt-Shift-N'\n        }),\n        \"newfile\": new AnchorView({\n          id: 'addnew',\n          title: _t('New file'),\n          tooltip: _t('Add new file to current folder'),\n          icon: 'file',\n          context: 'default',\n          shortcut: 'Alt-N'\n        }),\n        \"findfile\": new AnchorView({\n          id: 'findfile',\n          title: _t('Find File'),\n          tooltip: _t('Find theme resource in plone'),\n          icon: 'search',\n          context: 'default',\n          shortcut: 'Ctrl-F'\n        }),\n        \"findtextinfile\": new AnchorView({\n          id: 'findinfiles',\n          title: _t('Find in Files'),\n          tooltip: _t('Find text within theme resource in plone'),\n          icon: 'search',\n          context: 'default',\n          shortcut: 'Ctrl-E'\n        }),\n        \"rename\": new AnchorView({\n          id: 'rename',\n          title: _t('Rename'),\n          tooltip: _t('Rename currently selected resource'),\n          icon: 'random',\n          context: 'default'\n        }),\n        \"delete\": new AnchorView({\n          id: 'delete',\n          title: _t('Delete'),\n          tooltip: _t('Delete currently selected resource'),\n          icon: 'trash',\n          context: 'danger'\n        }),\n      };\n\n      var newFolderView = new NewFolderView({\n        triggerView: self.btns[\"newfolder\"],\n        app: self\n      });\n      var addNewView = new AddNewView({\n        triggerView: self.btns[\"newfile\"],\n        app: self\n      });\n      var findFileView = new FindFileView({\n        triggerView: self.btns[\"findfile\"],\n        app: self\n      });\n      var findinFilesView = new FindInFilesView({\n        triggerView: self.btns[\"findtextinfile\"],\n        app: self\n      });\n      var renameView = new RenameView({\n        triggerView: self.btns[\"rename\"],\n        app: self\n      });\n      var deleteView = new DeleteView({\n        triggerView: self.btns[\"delete\"],\n        app: self\n      });\n\n      var file_menu = new DropdownView({\n        title: _t('File'),\n        items: [\n          addNewView.triggerView,\n          newFolderView.triggerView\n        ],\n        id: 'file_menu',\n        app: self,\n        icon: 'file',\n        disable: function() {}\n      });\n\n      var edit_menu = new DropdownView({\n        title: _t('Edit'),\n        items: [\n          renameView.triggerView,\n          deleteView.triggerView\n        ],\n        id: 'edit_menu',\n        app: self,\n        icon: 'file',\n        disable: function() {}\n      });\n\n      var find_menu = new DropdownView({\n        title: _t('Find'),\n        items: [\n          findFileView.triggerView,\n          findinFilesView.triggerView\n        ],\n        id: 'find_menu',\n        icon: 'search',\n        app: self,\n        disable: function() {}\n      });\n\n      var views = {\n        \"file_menu\": [\n          newFolderView,\n          addNewView\n        ],\n        \"edit_menu\": [\n          renameView,\n          deleteView,\n        ],\n        \"find_menu\": [\n          findFileView,\n          findinFilesView\n        ],\n      };\n      var mainButtons = [\n        self.saveBtn,\n        file_menu,\n        edit_menu,\n        find_menu,\n      ];\n\n      if (self.options.uploadUrl && utils.featureSupport.dragAndDrop() && utils.featureSupport.fileApi()) {\n        self.btns[\"upload\"] = new AnchorView({\n            id: 'upload',\n            title: _t('Upload Local Files...'),\n            tooltip: _t('Upload file to current directory'),\n            icon: 'upload',\n            context: 'default'\n        });\n        var uploadView = new UploadView({\n          triggerView: self.btns[\"upload\"],\n          app: self,\n          callback: function(data) {\n            var path = self.uploadFolder + '/' + data.name;\n            self.refreshTree(function() {\n              self.selectItem(path);\n              self.getUpload().toggle();\n            });\n\n          }\n        });\n\n        views.file_menu.push(uploadView);\n        file_menu.items.push(uploadView.triggerView);\n      }\n      if (self.options.resourceSearchUrl) {\n        self.btns[\"customize\"] = new AnchorView({\n          id: 'customize',\n          title: _t('Add new override'),\n          tooltip: _t('Find resource in plone to override'),\n          context: 'default'\n        });\n        var customizeView = new CustomizeView({\n          triggerView: self.btns[\"customize\"],\n          app: self\n        });\n        views[\"edit_menu\"].push(customizeView);\n        edit_menu.items.push(customizeView.triggerView);\n      }\n      self.views = [];\n      self.views = self.views.concat(views.file_menu).concat(views.edit_menu).concat(views.find_menu);\n\n      self.toolbar = new Toolbar({\n        items: [\n          new ButtonGroup({\n            items: mainButtons,\n            id: 'main',\n            app: self\n          })\n        ]\n      });\n\n      self._save = function() {\n\n        var path = $('.active', self.$tabs).data('path');\n        if (path === undefined || path === false) {\n          alert('No file selected.');\n          return;\n        }\n        self.doAction('saveFile', {\n          type: 'POST',\n          data: {\n            path: path,\n            data: self.ace.editor.getValue(),\n            _authenticator: utils.getAuthenticator()\n          },\n          success: function(data) {\n            if (data['error'] !== undefined) {\n              alert('There was a problem saving the file.');\n            }\n            $('[data-path=\"' + path + '\"]').removeClass('modified');\n          }\n        });\n      };\n\n      self.saveBtn.on('button:click', function() {\n        self._save();\n      });\n      self.render();\n      self.shortcuts();\n\n    },\n\n    shortcuts: function(){\n\n      this.$el[0].addEventListener('keyup', function (e) {\n        // \"Alt+N\"\n        if (e.altKey && e.keyCode === 78) {\n          this.btns.newfile.$el.click();\n        }\n      }.bind(this));\n\n      this.$el[0].addEventListener('keyup', function (e) {\n        // \"Alt+Shift+N\"\n        if (e.altKey && e.shiftKey && e.keyCode === 78) {\n          this.btns.newfolder.$el.click();\n        }\n      }.bind(this));\n\n      this.$el[0].addEventListener('keyup', function (e) {\n        // \"Ctrl+S\"\n        if (e.ctrlKey && e.keyCode === 83) {\n          this.saveBtn.$el.click();\n        }\n      }.bind(this));\n\n      this.$el[0].addEventListener('keyup', function (e) {\n        // \"Ctrl+F\"\n        if (e.ctrlKey && e.keyCode === 70) {\n          this.btns.findfile.$el.click();\n        }\n      }.bind(this));\n\n      this.$el[0].addEventListener('keyup', function (e) {\n        // \"Ctrl+E\n        if (e.ctrlKey && e.keyCode === 69) {\n          this.btns.findtextinfile.$el.click();\n        }\n      }.bind(this));\n\n    },\n\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n    refreshTree: function(callback) {\n      var self = this;\n      if (callback === undefined) {\n        callback = function() {};\n      }\n      self.$tree.tree('loadDataFromUrl',\n        self.options.actionUrl + '?action=dataTree',\n        null,\n        callback\n      );\n    },\n    render: function() {\n      var self = this;\n      self.$el.html(self.template(self.options));\n      self.$('#toolbar').append(self.toolbar.render().el);\n      _.each(self.views, function(view) {\n        self.$('#toolbar').append(view.render().el);\n      });\n      self.$tree = self.$('.tree');\n      self.$nav = self.$('nav');\n      self.$tabs = $('ul.nav', self.$nav);\n      self.tree = new Tree(self.$tree, self.options.treeConfig);\n      self.$editor = self.$('.editor');\n\n      /* close popovers when clicking away */\n      $(document).click(function(e) {\n        var $el = $(e.target);\n        if (!$el.is(':visible')) {\n          // ignore this, fake event trigger to element that is not visible\n          return;\n        }\n        if ($el.is('a') || $el.parent().is('a')) {\n          return;\n        }\n        var $popover = $('.popover:visible');\n        if ($popover.length > 0 && !$.contains($popover[0], $el[0])) {\n          var popover = $popover.data('component');\n          if (popover) {\n            popover.hide();\n          }\n        }\n      });\n\n      // bind 'tree.contextmenu' event\n      self.$tree.jqTreeContextMenu({\n          menu: '#contextual-menu',\n          onContextMenuItem: function(e, node, $el) {\n            var action = $el.data(\"item\");\n            try {\n              self.btns[action].el.click();\n            } catch($err) {\n              console.log(\"Command does not exist: \" + action);\n            }\n          }\n      });\n\n      self.$tree.bind('tree.select', function(e) {\n        if (e.node === null) {\n          self.toggleButtons(false);\n        } else {\n          self.toggleButtons(true);\n          self.handleClick(e);\n        }\n      });\n\n      self.$tree.bind('tree.move', function(event) {\n\n        var target_node = event.move_info.target_node;\n        var srcpath = event.move_info.moved_node.path;\n        var newpath = target_node.path;\n        if (event.move_info.position !== \"inside\" ){\n          newpath = newpath.substring(newpath.indexOf('/'), newpath.lastIndexOf('/'));\n        }\n\n        self.doAction('move', {\n          data: {\n            source: srcpath,\n            destination: newpath\n          },\n          dataType: 'json',\n          success: function(data) {\n            self.$tree.tree('reload', function() {\n              self.$tree.tree('selectNode', target_node);\n            });\n            var jdata = JSON.parse(data);\n            if(jdata.error != ''){\n              alert(jdata.error);\n            }\n          }\n        });\n      });\n\n      self.$tree.bind('tree.open', function(e) {\n        var element = $(e.node.element).find(':first').find('.glyphicon');\n        $(element).addClass('glyphicon-folder-open');\n        $(element).removeClass('glyphicon-folder-close');\n      });\n\n      self.$tree.bind('tree.close', function(e) {\n        var element = $(e.node.element).find(':first').find('.glyphicon');\n        $(element).addClass('glyphicon-folder-close');\n        $(element).removeClass('glyphicon-folder-open');\n      });\n\n      self.$tree.bind('tree.init', function(e) {\n        var node = self.$tree.tree('getTree').children[0];\n        if (node) {\n          self.$tree.tree('selectNode', node);\n        }\n      });\n\n      $(self.$tabs).on('click', function(e) {\n        var path = $(e.target).data('path');\n        if (path === undefined) {\n          path = $(e.target.parentElement).data('path');\n          if (path === undefined) {\n            return false;\n          }\n        }\n        self.selectItem(path);\n      });\n      $(window).on('resize', function() {\n        self.resizeEditor();\n      });\n    },\n    toggleButtons: function(on) {\n      if (on === undefined) {\n        return;\n      }\n\n      if (on) {\n        $('#btn-delete', this.$el).prop('disabled', false);\n        $('#btn-save', this.$el).prop('disabled', false);\n        $('#btn-rename', this.$el).prop('disabled', false);\n      } else {\n        $('#btn-delete', this.$el).prop('disabled', true);\n        $('#btn-save', this.$el).prop('disabled', true);\n        $('#btn-rename', this.$el).prop('disabled', true);\n      }\n    },\n    handleClick: function(event) {\n      var self = this;\n      self.closeActivePopovers();\n      self.openFile(event);\n    },\n    closeActiveTab: function() {\n      var self = this;\n      var active = self.$tabs.find('.active .remove');\n      var $siblings = $(active).parent().siblings();\n      if ($siblings.length > 0) {\n        var $item;\n        if ($(active).parent().prev().length > 0) {\n          $item = $(active).parent().prev();\n        } else {\n          $item = $(active).parent().next();\n        }\n        $(active).parent().remove();\n        $item.click();\n      } else {\n        $(active).parent().remove();\n        self.toggleButtons(false);\n        self.openEditor();\n      }\n    },\n    closeTab: function(path) {\n      var self = this;\n      if (path === undefined) {\n        return;\n      }\n\n      var tabs = self.$tabs.children();\n\n      $(tabs).each(function() {\n        if ($(this).data('path') == path) {\n          $(this).find('a.remove').trigger('click');\n        }\n      });\n    },\n    closeActivePopovers: function() {\n      var active = $('.navbar a.active');\n      $(active).each(function() {\n        $(this).click();\n      });\n    },\n    createTab: function(path) {\n      var self = this;\n      var $item = $(self.tabItemTemplate({\n        path: path\n      }));\n      self.shrinkTab($item);\n      self.$tabs.append($item);\n      $('.remove', $item).click(function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        self.closeActivePopovers();\n        if ($(this).parent().hasClass('active')) {\n          self.closeActiveTab();\n        } else {\n          $(this).parent().remove();\n        }\n      });\n      $('.select', $item).click(function(e) {\n        e.preventDefault();\n        $('li', self.$tabs).removeClass('active');\n        var $li = $(this).parent();\n        self.closeActivePopovers();\n        $li.addClass('active');\n      });\n    },\n    updateTabs: function(path) {\n      var self = this;\n      if (path === undefined) {\n        return;\n      }\n      $('li', self.$tabs).removeClass('active');\n      var $existing = $('[data-path=\"' + path + '\"]', self.$tabs);\n      if ($existing.length === 0) {\n        self.createTab(path);\n      } else {\n        $existing.addClass('active');\n      }\n    },\n    shrinkTab: function(tab) {\n      var self = this;\n      if (self.$tabs.hasClass('smallTabs')) {\n        tab = $(tab);\n        var text = tab.text();\n        if (text.lastIndexOf('/') > 0) {\n          text = text.substr(text.lastIndexOf('/') + 1);\n          tab.find('.select').text(text);\n        }\n      }\n    },\n    openFile: function(event) {\n      var self = this;\n      if (event.node === null) {\n        return true;\n      }\n      if (event.node.folder) {\n        if (self.options.theme) {\n          self.setUploadUrl(event.node.path);\n        }\n        return true;\n      }\n      var doc = event.node.path;\n      if (self.fileData[doc]) {\n        self.openEditor(doc);\n\n        var resetLine = function() {\n          if (self.fileData[doc].line === undefined) {\n            return;\n          }\n          self.ace.editor.scrollToLine(self.fileData[doc].line);\n          self.ace.editor.moveCursorToPosition(self.fileData[doc].cursorPosition);\n          //We only want this to fire after the intial render,\n          //Not after rendering a \"scroll\" or \"focus\" event,\n          //So we remove it immediately after.\n          self.ace.editor.renderer.off('afterRender', resetLine);\n        };\n        //This sets the listener before rendering finishes\n        self.ace.editor.renderer.on('afterRender', resetLine);\n      } else {\n        self.doAction('getFile', {\n          data: {\n            path: doc\n          },\n          dataType: 'json',\n          success: function(data) {\n            self.fileData[doc] = data;\n            self.openEditor(doc);\n          }\n        });\n      }\n    },\n    getNodeByPath: function(path) {\n      var self = this;\n      if (path === undefined || path === '') {\n        return null;\n      }\n\n      if (path.indexOf('/') === 0) {\n        path = path.substr(1, path.length);\n      }\n\n      var folders = path.split('/');\n      var children = self.$tree.tree('getTree').children;\n\n      for (var i = 0; i < folders.length; i++) {\n        for (var z = 0; z < children.length; z++) {\n          if (children[z].name == folders[i]) {\n            if (children[z].folder == true && i != (folders.length - 1)) {\n              children = children[z].children;\n              break;\n            } else {\n              return children[z];\n            }\n          }\n        }\n      }\n\n      return null;\n    },\n    doAction: function(action, options) {\n      var self = this;\n      if (!options) {\n        options = {};\n      }\n      $.ajax({\n        url: self.options.actionUrl,\n        type: options.type || 'GET',\n        data: $.extend({}, {\n          _authenticator: utils.getAuthenticator(),\n          action: action\n        }, options.data || {}),\n        success: options.success,\n        failure: options.failure || function() {}\n      });\n    },\n    openEditor: function(path, options) {\n      var self = this;\n\n      if (path !== undefined) {\n        self.updateTabs(path);\n      }\n      if (options === undefined) {\n        options = {};\n      }\n\n      // first we need to save the current editor content\n      if (self.currentPath) {\n        self.fileData[self.currentPath].contents = self.ace.editor.getValue();\n        var lineNum = self.ace.editor.getFirstVisibleRow();\n        self.fileData[self.currentPath].line = lineNum;\n        self.fileData[self.currentPath].cursorPosition = self.ace.editor.getCursorPosition();\n      }\n      self.currentPath = path;\n      if (self.ace !== undefined) {\n        self.ace.editor.destroy();\n        self.ace.editor.container.parentNode.replaceChild(\n          self.ace.editor.container.cloneNode(true),\n          self.ace.editor.container\n        );\n      }\n      self.ace = new TextEditor(self.$editor);\n\n      if (self.currentPath === undefined) {\n        self.ace.setText('');\n        self.ace.setSyntax('text');\n        self.ace.editor.clearSelection();\n        self.$tree.tree('selectNode', null);\n      } else if (typeof self.fileData[path].info !== 'undefined') {\n        var preview = self.fileData[path].info;\n        if (self.ace.editor !== undefined) {\n          self.ace.editor.off();\n        }\n        $('.ace_editor').empty().append(preview);\n      } else {\n        self.ace.setText(self.fileData[path].contents);\n        self.ace.setSyntax(path);\n        self.ace.editor.clearSelection();\n      }\n\n      self.resizeEditor();\n      if(options.goToLine != undefined){\n        self.ace.editor.gotoLine(options.goToLine, 0, true);\n      }\n\n      self.$el.trigger('fileChange');\n      self.ace.editor.on('change', function() {\n        if (self.ace.editor.curOp && self.ace.editor.curOp.command.name) {\n          $('[data-path=\"' + path + '\"]').addClass('modified');\n        }\n      });\n      self.ace.editor.on('paste', function() {\n        $('[data-path=\"' + path + '\"]').addClass('modified');\n      });\n      self.ace.editor.commands.addCommand({\n        name: 'saveFile',\n        bindKey: {\n          win: 'Ctrl-S',\n          mac: 'Command-S',\n          sender: 'editor|cli'\n        },\n        exec: function(env, args, request) {\n          self._save();\n        }\n      });\n    },\n    getSelectedNode: function() {\n      return this.$tree.tree('getSelectedNode');\n    },\n    getNodePath: function(node) {\n      var self = this;\n      if (node === undefined) {\n        node = self.getSelectedNode();\n      }\n      var path = self.getFolderPath(node.parent);\n      if (path !== '/') {\n        path += '/';\n      }\n\n      var name = (node.name !== undefined) ? node.name : '';\n      return path + name;\n    },\n    getFolderPath: function(node) {\n      var self = this;\n      if (node === undefined) {\n        node = self.getSelectedNode();\n      }\n      var parts = [];\n      if (!node.folder && node.name) {\n        node = node.parent;\n      }\n      while (node.name) {\n        parts.push(node.name);\n        node = node.parent;\n      }\n      parts.reverse();\n      return '/' + parts.join('/');\n    },\n    getUpload: function() {\n      var self = this;\n\n      return _.find(self.views, function(x) {\n        return x.upload !== undefined;\n      });\n    },\n    resizeEditor: function() {\n      var self = this;\n\n      self.$editor = $('.editor', self.$el);\n      var tab = self.$tabs.children()[0];\n      if ($(tab).outerHeight() < (self.$tabs.height() - 1)) {\n        self.$tabs.addClass('smallTabs');\n        $(self.$tabs.children()).each(function() {\n          self.shrinkTab(this);\n        });\n      }\n      var tabBox = self.$tabs.parent();\n\n      //Contains both the tabs, and editor window\n      var container = tabBox.parent().parent();\n      var h = container.innerHeight();\n      h -= tabBox.outerHeight();\n\n      //+2 for the editor borders\n      h -= 2;\n      //accounts for the borders/margin\n      self.$editor.height(h);\n      var w = container.innerWidth();\n      w -= (container.outerWidth(true) - container.innerWidth());\n\n      self.$editor.width(w);\n      if (self.ace !== undefined) {\n        //This forces ace to redraw if the container has changed size\n        self.ace.editor.resize();\n        self.ace.editor.$blockScrolling = Infinity;\n        self.ace.editor.focus();\n      }\n    },\n    selectItem: function(path) {\n      var self = this;\n      var node = self.getNodeByPath(path);\n      self.$tree.tree('selectNode', node);\n    },\n    setUploadUrl: function(path) {\n      var self = this;\n\n      if (path === undefined) {\n        path = '';\n      }\n\n      self.uploadFolder = path;\n      var view = self.getUpload();\n      if (view !== undefined) {\n        var url = self.options.uploadUrl +\n          path +\n          '/themeFileUpload' +\n          '?_authenticator=' +\n          utils.getAuthenticator();\n\n        view.upload.dropzone.options.url = url;\n      }\n    },\n    refreshFile: function(path) {\n      var self = this;\n\n      if (path === undefined) {\n        path = self.getSelectedNode().path;\n      }\n      self.closeTab(path);\n      delete self.fileData[path];\n      self.selectItem(path);\n    }\n  });\n\n  return FileManager;\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/pattern.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/texteditor/pattern.js":
/*!*********************************************************!*\
  !*** ./.plone/++resource++mockup/texteditor/pattern.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*** IMPORTS FROM imports-loader ***/\nvar ace = __webpack_require__(/*! ace */ \"./node_modules/brace/index.js\");\nvar _a = __webpack_require__(/*! ace/mode/javascript */ \"./node_modules/brace/mode/javascript.js\");\nvar _b = __webpack_require__(/*! ace/mode/text */ \"./node_modules/brace/mode/text.js\");\nvar _c = __webpack_require__(/*! ace/mode/css */ \"./node_modules/brace/mode/css.js\");\nvar _d = __webpack_require__(/*! ace/mode/html */ \"./node_modules/brace/mode/html.js\");\nvar _e = __webpack_require__(/*! ace/mode/xml */ \"./node_modules/brace/mode/xml.js\");\nvar _f = __webpack_require__(/*! ace/mode/less */ \"./node_modules/brace/mode/less.js\");\nvar _g = __webpack_require__(/*! ace/mode/python */ \"./node_modules/brace/mode/python.js\");\nvar _h = __webpack_require__(/*! ace/mode/xml */ \"./node_modules/brace/mode/xml.js\");\nvar _i = __webpack_require__(/*! ace/mode/ini */ \"./node_modules/brace/mode/ini.js\");\nvar _j = __webpack_require__(/*! ace/theme/monokai */ \"./node_modules/brace/theme/monokai.js\");\n\n/* Text editor pattern\n *\n * Options:\n *    theme(string): Theme to use with editor. defaults to whatever it ships with. (null)\n *    mode(string): What type of syntax is it? ('text')\n *    width(integer): Width of the editor. (500)\n *    height(integer): Height of the editor. (200)\n *    tabSize(integer): TODO (4)\n *    softTabs(boolean): Use spaces for tabs. (true)\n *    wrapMode(boolean): Wrap text. (false)\n *    showGutter(boolean): TODO (true),\n *    showPrintMargin(boolean): Show print margin. (false)\n *    readOnly(boolean): Read only editor. (false)\n *\n * Documentation:\n *    # Default\n *\n *    {{ example-1 }}\n *\n *    # Different theme\n *\n *    {{ example-2 }}\n *\n *    # Different options\n *\n *    {{ example-3 }}\n *\n * Example: example-1\n *    <pre class=\"pat-texteditor\" data-pat-texteditor=\"theme:clouds\">\n *    foobar\n *    </pre>\n *\n * Example: example-2\n *    <pre class=\"pat-texteditor\" data-pat-texteditor=\"mode:javascript;theme:dawn;\">\n *    var foo = 'bar';\n *    function foobar() {\n *      return foo;\n *    }\n *    </pre>\n *\n * Example: example-3\n *    <pre class=\"pat-texteditor\"\n *         data-pat-texteditor=\"mode:javascript;\n *                       theme:ambiance;\n *                       tabSize:2;\n *                       showGutter:false;\n *                       showPrintMargin:true;\">\n *    var foo = 'bar';\n *    function foobar() {\n *      return foo;\n *    }\n *    </pre>\n *\n */\n\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! pat-base */ \"./.plone/++plone++static/components/patternslib/src/core/base.js\"),\n  __webpack_require__(/*! mockup-utils */ \"./.plone/++resource++mockupjs/utils.js\"),\n  __webpack_require__(/*! ace */ \"./node_modules/brace/index.js\"),\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, Base, utils) {\n  'use strict';\n\n  var AcePattern = Base.extend({\n    name: 'texteditor',\n    trigger: '.pat-texteditor',\n    parser: 'mockup',\n    defaults: {\n      theme: null,\n      mode: 'text',\n      width: 500,\n      height: 200,\n      tabSize: 4,\n      softTabs: true,\n      wrapMode: false,\n      showGutter: true,\n      showPrintMargin: false,\n      readOnly: false\n    },\n    init: function() {\n      var self = this;\n      if (!window.ace){\n        // XXX hack...\n        // wait, try loading later\n        setTimeout(function() {\n          self.init();\n        }, 200);\n        return;\n      }\n      var ace = window.ace;\n\n      ace.config.set(\"packaged\", true);\n      ace.config.set(\"basePath\", \"++plone++static/components/ace-builds/src/\");\n\n      // set id on current element\n      var id = utils.setId(self.$el);\n      self.$wrapper = $('<div class=\"editorWrapper\" />').css({\n        height: parseInt(self.options.height) + 25, // weird sizing issue here...\n        width: self.options.width,\n        position: 'relative'\n      });\n      if( !self.$el.parent().hasClass('editorWrapper') ) {\n          self.$el.wrap(self.$wrapper);\n      }\n      self.$el.css({\n        width: self.options.width,\n        height: self.options.height,\n        position: 'absolute'\n      });\n\n      self.editor = ace.edit(id);\n      if (self.options.theme) {\n        self.setTheme(self.options.theme);\n      }\n      self.editor.getSession().setMode('ace/mode/' + self.options.mode);\n      self.editor.getSession().setTabSize(parseInt(self.options.tabSize, 10));\n      self.editor.getSession().setUseSoftTabs(utils.bool(self.options.softTabs));\n      self.editor.getSession().setUseWrapMode(utils.bool(self.options.wrapMode));\n      self.editor.renderer.setShowGutter(utils.bool(self.options.showGutter));\n      self.editor.setShowPrintMargin(utils.bool(self.options.showPrintMargin));\n      self.editor.setReadOnly(utils.bool(self.options.readOnly));\n    },\n    setSyntax: function(name)\n    {\n      var self = this;\n      var modes = {\n        'js': 'javascript',\n        'txt': 'text',\n        'css': 'css',\n        'html': 'html',\n        'xml': 'xml',\n        'less': 'less',\n        'py': 'python',\n        'pt': 'xml',\n        'cfg': 'ini'\n      };\n\n      var extension = name.substr(name.lastIndexOf('.') + 1);\n      var mode = modes[extension];\n\n      if (mode !== undefined){\n        self.editor.getSession().setMode('ace/mode/' + mode);\n        return true;\n      }\n    },\n    setTheme: function(theme) {\n      var self = this;\n      self.editor.setTheme('ace/theme/' + theme);\n    },\n    setText: function(data) {\n      var self = this;\n      if(self.editor){\n        self.editor.setValue(data);\n      }\n    }\n  });\n\n  return AcePattern;\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/texteditor/pattern.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/tree/pattern.js":
/*!***************************************************!*\
  !*** ./.plone/++resource++mockup/tree/pattern.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* Tree pattern.\n *\n * Options:\n * data(jSON): load data structure directly into tree (undefined)\n * dataUrl(jSON): Load data from remote url (undefined)\n * autoOpen(boolean): auto open tree contents (false)\n * dragAndDrop(boolean): node drag and drop support (false)\n * selectable(boolean): if nodes can be selectable (true)\n * keyboardSupport(boolean): if keyboard naviation is allowed (true)\n *\n * Documentation: # JSON node data\n *\n *    {{ example-1 }}\n *\n *    # Remote data URL\n *\n *    {{ example-2 }}\n *\n *    # Drag and drop\n *\n *    {{ example-3 }}\n *\n * Example: example-1\n *    <div class=\"pat-tree\"\n *         data-pat-tree='data:[\n *          { \"label\": \"node1\",\n *            \"children\": [\n *              { \"label\": \"child1\" },\n *              { \"label\": \"child2\" }\n *            ]\n *          },\n *          { \"label\": \"node2\",\n *            \"children\": [\n *              { \"label\": \"child3\" }\n *            ]\n *          }\n *        ];'> </div>\n *\n * Example: example-2\n *    <div class=\"pat-tree\"\n *         data-pat-tree=\"dataUrl:/docs/dev/tests/json/fileTree.json;\n *                        autoOpen:true\"></div>\n *\n * Example: example-3\n *    <div class=\"pat-tree\"\n *         data-pat-tree=\"dataUrl:/docs/dev/tests/json/fileTree.json;\n *                        dragAndDrop: true;\n *                        autoOpen: true\"></div>\n *\n */\n\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! pat-base */ \"./.plone/++plone++static/components/patternslib/src/core/base.js\"),\n  __webpack_require__(/*! mockup-utils */ \"./.plone/++resource++mockupjs/utils.js\"),\n  __webpack_require__(/*! jqtree */ \"./.plone/++plone++static/components/jqtree/tree.jquery.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, Base, utils) {\n  'use strict';\n\n  var Tree = Base.extend({\n    name: 'tree',\n    trigger: '.pat-tree',\n    parser: 'mockup',\n    defaults: {\n      dragAndDrop: false,\n      autoOpen: false,\n      selectable: true,\n      keyboardSupport: true,\n      onLoad: null\n    },\n    init: function() {\n      var self = this;\n      /* convert all bool options */\n      for (var optionKey in self.options) {\n        var def = self.defaults[optionKey];\n        if (def !== undefined && typeof(def) === 'boolean') {\n          self.options[optionKey] = utils.bool(self.options[optionKey]);\n        }\n      }\n\n      if (self.options.onCanMoveTo === undefined) {\n        self.options.onCanMoveTo = function(moved, target, position) {\n          /* if not using folder option, just allow, otherwise, only allow if folder */\n          if (position === \"inside\") {\n            return target.folder === undefined || target.folder === true;\n          }\n          return true;\n        }\n      }\n\n      if (self.options.data && typeof(self.options.data) === 'string') {\n        self.options.data = $.parseJSON(self.options.data);\n      }\n      if (self.options.onLoad !== null){\n        // delay generating tree...\n        var options = $.extend({}, self.options);\n        $.getJSON(options.dataUrl, function(data) {\n          options.data = data;\n          delete options.dataUrl;\n          self.tree = self.$el.tree(options);\n          self.options.onLoad(self);\n        });\n      } else {\n        self.tree = self.$el.tree(self.options);\n      }\n    }\n  });\n\n\n  return Tree;\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/tree/pattern.js?");

/***/ }),

/***/ "./.plone/++resource++mockupjs/ui/views/anchor.js":
/*!********************************************************!*\
  !*** ./.plone/++resource++mockupjs/ui/views/anchor.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/base */ \"./.plone/++resource++mockupjs/ui/views/base.js\"),\n  __webpack_require__(/*! mockup-patterns-tooltip */ \"./.plone/++resource++mockup/tooltip/pattern.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, BaseView, Tooltip) {\n  'use strict';\n\n  var AnchorView = BaseView.extend({\n    tagName: 'a',\n    className: 'alink',\n    eventPrefix: 'button',\n    context: 'default',\n    idPrefix: 'alink-',\n    shortcut: '',\n    attributes: {\n      'href': '#'\n    },\n    extraClasses: [],\n    tooltip: null,\n    template: '<% if (icon) { %><span class=\"glyphicon glyphicon-<%= icon %>\"></span><% } %> <%= title %> <span class=\"shortcut\"><%= shortcut %></span>',\n    events: {\n      'click': 'handleClick'\n    },\n    initialize: function(options) {\n      if (!options.id) {\n        var title = options.title || '';\n        options.id = title !== '' ? title.toLowerCase().replace(' ', '-') : this.cid;\n      }\n      BaseView.prototype.initialize.apply(this, [options]);\n\n      this.on('render', function() {\n        this.$el.attr('title', this.options.tooltip || this.options.title || '');\n        this.$el.attr('aria-label', this.options.title || this.options.tooltip || '');\n        _.each(this.extraClasses, function(klass) {\n          this.$el.addClass(klass);\n        });\n      }, this);\n    },\n    handleClick: function(e) {\n      e.preventDefault();\n      if (!this.$el.prop('disabled')) {\n        this.uiEventTrigger('click', this, e);\n      }\n    },\n    serializedModel: function() {\n      return _.extend({'icon': '', 'title': '', 'shortcut': ''}, this.options);\n    },\n    disable: function() {\n      this.$el.prop('disabled', true);\n    },\n    enable: function() {\n      this.$el.prop('disabled', false);\n    }\n  });\n\n  return AnchorView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/views/anchor.js?");

/***/ }),

/***/ "./.plone/++resource++mockupjs/ui/views/buttongroup.js":
/*!*************************************************************!*\
  !*** ./.plone/++resource++mockupjs/ui/views/buttongroup.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/container */ \"./.plone/++resource++mockupjs/ui/views/container.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, ContainerView) {\n  'use strict';\n\n  var ButtonGroup = ContainerView.extend({\n    tagName: 'div',\n    className: 'btn-group',\n    idPrefix: 'btngroup-',\n    disable: function() {\n      _.each(this.items, function(button) {\n        button.disable();\n      });\n    },\n    enable: function() {\n      _.each(this.items, function(button) {\n        button.enable();\n      });\n    }\n  });\n\n  return ButtonGroup;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/views/buttongroup.js?");

/***/ }),

/***/ "./.plone/++resource++mockupjs/ui/views/container.js":
/*!***********************************************************!*\
  !*** ./.plone/++resource++mockupjs/ui/views/container.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/base */ \"./.plone/++resource++mockupjs/ui/views/base.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, BaseView) {\n  'use strict';\n\n  var Container = BaseView.extend({\n    id: '',\n    items: [],\n    itemContainer: null,\n    isOffsetParent: true,\n    idPrefix: 'container-',\n    render: function() {\n      if (this.options.id) {\n        this.$el.attr('id', this.idPrefix + this.options.id);\n      }\n\n      this.applyTemplate();\n\n      this.renderItems();\n      this.bindEvents();\n\n      if (this.isOffsetParent) {\n        this.$el.addClass('ui-offset-parent');\n      }\n\n      this.trigger('render', this);\n\n      this.afterRender();\n\n      this.$el.data('component', this);\n      return this;\n    },\n    renderItems: function() {\n      var $container;\n\n      if (this.itemContainer !== null) {\n        $container = $(this.itemContainer, this.$el);\n        if ($container.length === 0) {\n          throw 'Item Container element not found.';\n        }\n      } else {\n        $container = this.$el;\n      }\n      _.each(this.items, function(view) {\n        if (view.appendInContainer === true) {\n          $container.append(view.render().$el);\n        } else {\n          view.render();\n        }\n      }, this);\n    },\n    bindEvents: function() {\n      var self = this;\n      _.each(this.items, function(view) {\n        view.on('all', function() {\n          var slice = [].slice;\n          var eventName = arguments[0];\n          var eventTarget;\n          var newName = self.id !== '' ? self.id + '.' + eventName : eventName;\n          if (arguments.length > 1) {\n            eventTarget = arguments[1];\n          }\n          if (newName !== eventName) {\n            var newArgs = slice.call(arguments, 0);\n            newArgs[0] = newName;\n            self.trigger.apply(self, newArgs);\n          }\n          if (eventTarget !== undefined && eventTarget.isUIView === true) {\n            if (eventTarget.propagateEvent(eventName) === true) {\n              self.trigger.apply(self, arguments);\n            }\n          }\n        });\n      });\n    },\n    get: function(id) {\n      // Remove the recursive part because it was confusing if two children had the\n      // same id\n      return _.findWhere(this.items, {'id': id});\n    },\n    add: function(item) {\n      if (item.id !== undefined && this.get(item.id)) {\n        throw 'Another item with the same `id` already exists.';\n      }\n      this.items.push(item);\n    }\n  });\n\n  return Container;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/views/container.js?");

/***/ }),

/***/ "./.plone/++resource++mockupjs/ui/views/dropdown.js":
/*!**********************************************************!*\
  !*** ./.plone/++resource++mockupjs/ui/views/dropdown.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/buttongroup */ \"./.plone/++resource++mockupjs/ui/views/buttongroup.js\"),\n  __webpack_require__(/*! text!mockup-ui-url/templates/dropdown.xml */ \"./node_modules/text-loader/index.js!./.plone/++resource++mockupjs/ui/templates/dropdown.xml\"),\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, ButtonGroup, DropdownTemplate) {\n  'use strict';\n\n  var DropdownView = ButtonGroup.extend({\n    idPrefix: 'btngroup-dropdown-',\n    template: DropdownTemplate,\n    className: 'btn-group-dropdown',\n    itemContainer: \"ul.dropdown-content\",\n    title: null,\n\n    initialize: function(options) {\n      ButtonGroup.prototype.initialize.apply(this, [options]);\n\n      this.on('render', function() {\n        this.renderTitle();\n      }, this);\n    },\n\n    renderTitle: function() {\n      var title = this.options.title;\n      if(this.options.title === undefined) {\n        title = this.title;\n        if(this.title === null) {\n          title = \"Menu Option\";\n        }\n      }\n      this.$('.dropdown-title').empty().append(title);\n    },\n\n    renderItems: function() {\n      var self = this;\n      var $container;\n\n      if (this.itemContainer !== null) {\n        $container = $(this.itemContainer, this.$el);\n        if ($container.length === 0) {\n          throw 'Item Container element not found.';\n        }\n      } else {\n        $container = this.$el;\n      }\n\n      var $item = null;\n      _.each(this.items, function(view) {\n        $item = $(\"<li></li>\");\n        $item.append(view.render().$el.removeClass(\"btn\"));\n        $container.append($item);\n      }, this);\n    },\n\n  });\n\n  return DropdownView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/views/dropdown.js?");

/***/ }),

/***/ "./.plone/++resource++mockupjs/ui/views/popover.js":
/*!*********************************************************!*\
  !*** ./.plone/++resource++mockupjs/ui/views/popover.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! underscore */ \"./.plone/++plone++static/components/underscore/underscore.js\"),\n  __webpack_require__(/*! mockup-ui-url/views/container */ \"./.plone/++resource++mockupjs/ui/views/container.js\"),\n  __webpack_require__(/*! mockup-patterns-backdrop */ \"./.plone/++resource++mockup/backdrop/pattern.js\"),\n  __webpack_require__(/*! text!mockup-ui-url/templates/popover.xml */ \"./node_modules/text-loader/index.js!./.plone/++resource++mockupjs/ui/templates/popover.xml\"),\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, _, ContainerView, Backdrop, PopoverTemplate) {\n  'use strict';\n\n  var PopoverView = ContainerView.extend({\n    tagName: 'div',\n    className: 'popover',\n    eventPrefix: 'popover',\n    template: PopoverTemplate,\n    content: null,\n    title: null,\n    triggerView: null,\n    idPrefix: 'popover-',\n    triggerEvents: {\n      'button:click': 'toggle'\n    },\n    placement: 'bottom',\n    events: {\n    },\n    opened: false,\n    closeOnOutClick: true,\n    appendInContainer: true,\n    backdrop: undefined,\n    $backdrop: null,\n    useBackdrop: true,\n    backdropOptions: {\n      zIndex: '1009',\n      opacity: '0.4',\n      className: 'backdrop backdrop-popover',\n      classActiveName: 'backdrop-active',\n      closeOnEsc: false,\n      closeOnClick: true\n    },\n    initialize: function(options) {\n      ContainerView.prototype.initialize.apply(this, [options]);\n      this.bindTriggerEvents();\n\n      this.on('render', function() {\n        this.$el.attr('role', 'tooltip').attr('aria-hidden', 'false');\n        this.renderTitle();\n        this.renderContent();\n      }, this);\n    },\n    afterRender: function () {\n    },\n    getTemplateOptions: function(){\n      return this.options;\n    },\n    renderTitle: function() {\n      var title = this.title;\n      if(typeof(title) === 'function'){\n        title = title(this.getTemplateOptions());\n      }\n      this.$('.popover-title').empty().append(title);\n    },\n    renderContent: function() {\n      this.$('.popover-content').empty().append(this.content(this.getTemplateOptions()));\n    },\n    bindTriggerEvents: function() {\n      if (this.triggerView) {\n        _.each(this.triggerEvents, function(func, event) {\n          var method = this[func];\n          if (!method) {\n            $.error('Function not found.');\n          }\n          this.stopListening(this.triggerView, event);\n          this.listenTo(this.triggerView, event, method);\n        }, this);\n      }\n    },\n\n    getPosition: function() {\n      var $el = this.triggerView.$el;\n      return $.extend({}, {\n        width: $el[0].offsetWidth,\n        height: $el[0].offsetHeight\n      }, $el.offset());\n    },\n\n    getBodyClassName: function(){\n      var name = 'popover-';\n      if(this.options.id){\n        name += this.options.id + '-';\n      }\n      name += 'active';\n      return name;\n    },\n\n    show: function() {\n      /* hide existing */\n      $('.popover:visible').each(function(){\n        var popover = $(this).data('component');\n        if(popover){\n          popover.hide();\n        }\n      });\n\n      this.position();\n\n      this.setBackdrop();\n      if (this.useBackdrop === true) {\n        this.backdrop.show();\n      }\n\n      this.opened = true;\n\n      if (this.triggerView) {\n        this.triggerView.$el.addClass('active');\n      }\n\n      this.uiEventTrigger('show', this);\n      this.$el.attr('aria-hidden', 'false');\n      $('body').addClass(this.getBodyClassName());\n    },\n\n    position: function(){\n      var pos = this.getPosition();\n      var $tip = this.$el, tp, placement, actualWidth, actualHeight;\n\n      placement = this.placement;\n\n      $tip.css({ top: 0, left: 0 }).addClass('active');\n\n      actualWidth = $tip[0].offsetWidth;\n      actualHeight = $tip[0].offsetHeight;\n\n      switch (placement) {\n        case 'bottom':\n          tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2};\n          break;\n        case 'top':\n          tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2};\n          break;\n        case 'left':\n          tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth};\n          break;\n        case 'right':\n          tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width};\n          break;\n      }\n\n      this.applyPlacement(tp, placement);\n    },\n\n    applyPlacement: function(offset, placement) {\n      var $el = this.$el,\n        $tip = this.$el,\n        width = $tip[0].offsetWidth,\n        height = $tip[0].offsetHeight,\n        actualWidth,\n        actualHeight,\n        delta,\n        replace;\n\n      $el.removeClass(placement);\n\n      $el.offset(offset)\n        .addClass(placement)\n        .addClass('active');\n\n      actualWidth = $tip[0].offsetWidth;\n      actualHeight = $tip[0].offsetHeight;\n\n      if (placement === 'top' && actualHeight !== height) {\n        offset.top = offset.top + height - actualHeight;\n        replace = true;\n      }\n\n      if (placement === 'bottom' || placement === 'top') {\n        delta = 0;\n\n        if (offset.left < 0) {\n          delta = offset.left * -2;\n          offset.left = 0;\n          $el.removeClass(placement);\n          $el.offset(offset).addClass(placement);\n          actualWidth = $tip[0].offsetWidth;\n          actualHeight = $tip[0].offsetHeight;\n        }\n\n        this.positionArrow(delta - width + actualWidth, actualWidth, 'left');\n\n      } else {\n        this.positionArrow(actualHeight - height, actualHeight, 'top');\n      }\n\n      if (replace) {\n        $el.offset(offset);\n      }\n    },\n    positionArrow: function(delta, dimension, position) {\n      var $arrow = this.$('.arrow');\n      $arrow.css(position, delta ? (50 * (1 - delta / dimension) + '%') : '');\n    },\n    hide: function() {\n      this.opened = false;\n      this.$el.removeClass('active');\n      if (this.triggerView) {\n        this.triggerView.$el.removeClass('active');\n        this.triggerView.$el.attr('aria-hidden', 'true');\n      }\n      this.uiEventTrigger('hide', this);\n      this.$el.attr('aria-hidden', 'true');\n      $('body').removeClass(this.getBodyClassName());\n    },\n    toggle: function(button, e) {\n      if (this.opened) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    },\n    setBackdrop: function() {\n      if (this.useBackdrop === true && this.backdrop === undefined) {\n        var self = this;\n        this.$backdrop = this.$el.closest('.ui-backdrop-element');\n        if (this.$backdrop.length === 0) {\n          this.$backdrop = $('body');\n        }\n\n        this.backdrop = new Backdrop(this.$backdrop, this.backdropOptions);\n        this.backdrop.$el.on('hidden.backdrop.patterns', function(e) {\n          if (e.namespace === 'backdrop.patterns') {\n            e.stopPropagation();\n            if (self.opened === true) {\n              self.hide();\n            }\n          }\n        });\n        this.on('popover:hide', function() {\n          this.backdrop.hide();\n        }, this);\n      }\n    }\n  });\n\n  return PopoverView;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/views/popover.js?");

/***/ }),

/***/ "./.plone/++resource++mockupjs/ui/views/toolbar.js":
/*!*********************************************************!*\
  !*** ./.plone/++resource++mockupjs/ui/views/toolbar.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! mockup-ui-url/views/container */ \"./.plone/++resource++mockupjs/ui/views/container.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(ContainerView) {\n  'use strict';\n\n  var Toolbar = ContainerView.extend({\n    tagName: 'div',\n    className: 'navbar',\n    idPrefix: 'toolbar-'\n  });\n\n  return Toolbar;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/views/toolbar.js?");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./.plone/++resource++mockup/filemanager/templates/app.xml":
/*!********************************************************************************************!*\
  !*** ./node_modules/text-loader!./.plone/++resource++mockup/filemanager/templates/app.xml ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div id=\\\"toolbar\\\">\\n</div>\\n<div id=\\\"toolbar-action\\\">\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"tree\\\">\\n    </div>\\n    <div class=\\\"nav-and-editor\\\">\\n        <nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n            <div class=\\\"collapse navbar-collapse\\\">\\n              <ul class=\\\"nav navbar-nav\\\">\\n               </ul>\\n            </div><!-- /.navbar-collapse -->\\n            <div class=\\\"fileeditor\\\">\\n                <div class=\\\"editor\\\">\\n                </div>\\n            </div>\\n        </nav>\\n</div>\\n<ul id=\\\"contextual-menu\\\" class=\\\"dropdown-menu\\\">\\n    <li data-item=\\\"newfile\\\"><a>New File</a></li>\\n    <li data-item=\\\"newfolder\\\"><a>New Folder</a></li>\\n    <li data-item=\\\"rename\\\"><a>Rename</a></li>\\n    <li data-item=\\\"delete\\\"><a>Delete</a></li>\\n    <li data-item=\\\"upload\\\"><a>Upload Here</a></li>\\n</ul>\\n\"\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/templates/app.xml?./node_modules/text-loader");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./.plone/++resource++mockup/filemanager/templates/popover.xml":
/*!************************************************************************************************!*\
  !*** ./node_modules/text-loader!./.plone/++resource++mockup/filemanager/templates/popover.xml ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"arrow\\\"></div>\\n<div class=\\\"popover-label\\\">\\n<div style=\\\"position: relative;\\\" class=\\\"popover-title\\\">\\n</div>\\n<a style=\\\"position: absolute; top: 5px; right: 3px; font-size: 16px; color: #999;\\\"\\n   href=\\\"#\\\" class=\\\"popover-close\\\">\\n  <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n</a>\\n</div>\\n<div class=\\\"items popover-content\\\">\\n</div>\\n\\n\"\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/filemanager/templates/popover.xml?./node_modules/text-loader");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./.plone/++resource++mockupjs/ui/templates/dropdown.xml":
/*!******************************************************************************************!*\
  !*** ./node_modules/text-loader!./.plone/++resource++mockupjs/ui/templates/dropdown.xml ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\\n<a href=\\\"#\\\" class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdown-menu-\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">\\n  <span class=\\\"glyphicon glyphicon-<%= icon %>\\\"></span>\\n  <span class=\\\"dropdown-title\\\">\\n\\n  </span>\\n  <span class=\\\"caret\\\"></span>\\n</a>\\n<ul class=\\\"dropdown-menu items dropdown-content\\\" aria-labelledby=\\\"dropdown-menu-\\\">\\n</ul>\\n\"\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/templates/dropdown.xml?./node_modules/text-loader");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./.plone/++resource++mockupjs/ui/templates/popover.xml":
/*!*****************************************************************************************!*\
  !*** ./node_modules/text-loader!./.plone/++resource++mockupjs/ui/templates/popover.xml ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"arrow\\\"></div>\\n<div class=\\\"popover-title\\\">\\n</div>\\n<div class=\\\"items popover-content\\\">\\n</div>\\n\\n\"\n\n//# sourceURL=webpack:///./.plone/++resource++mockupjs/ui/templates/popover.xml?./node_modules/text-loader");

/***/ })

}]);