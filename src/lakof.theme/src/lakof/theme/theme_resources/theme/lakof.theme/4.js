(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[4],{

/***/ "./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tmpl.js":
/*!****************************************************************************************!*\
  !*** ./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tmpl.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar jQuery = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\nvar $ = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\n\n/*\n * jQuery Templating Plugin\n * Copyright 2010, John Resig\n * Dual licensed under the MIT or GPL Version 2 licenses.\n */\n(function( jQuery, undefined ){\n\tvar oldManip = jQuery.fn.domManip, tmplItmAtt = \"_tmplitem\", htmlExpr = /^[^<]*(<[\\w\\W]+>)[^>]*$|\\{\\{\\! /,\n\t\tnewTmplItems = {}, wrappedItems = {}, appendToTmplItems, topTmplItem = { key: 0, data: {} }, itemKey = 0, cloneIndex = 0, stack = [];\n\n\tfunction newTmplItem( options, parentItem, fn, data ) {\n\t\t// Returns a template item data structure for a new rendered instance of a template (a 'template item').\n\t\t// The content field is a hierarchical array of strings and nested items (to be\n\t\t// removed and replaced by nodes field of dom elements, once inserted in DOM).\n\t\tvar newItem = {\n\t\t\tdata: data || (parentItem ? parentItem.data : {}),\n\t\t\t_wrap: parentItem ? parentItem._wrap : null,\n\t\t\ttmpl: null,\n\t\t\tparent: parentItem || null,\n\t\t\tnodes: [],\n\t\t\tcalls: tiCalls,\n\t\t\tnest: tiNest,\n\t\t\twrap: tiWrap,\n\t\t\thtml: tiHtml,\n\t\t\tupdate: tiUpdate\n\t\t};\n\t\tif ( options ) {\n\t\t\tjQuery.extend( newItem, options, { nodes: [], parent: parentItem } );\n\t\t}\n\t\tif ( fn ) {\n\t\t\t// Build the hierarchical content to be used during insertion into DOM\n\t\t\tnewItem.tmpl = fn;\n\t\t\tnewItem._ctnt = newItem._ctnt || newItem.tmpl( jQuery, newItem );\n\t\t\tnewItem.key = ++itemKey;\n\t\t\t// Keep track of new template item, until it is stored as jQuery Data on DOM element\n\t\t\t(stack.length ? wrappedItems : newTmplItems)[itemKey] = newItem;\n\t\t}\n\t\treturn newItem;\n\t}\n\n\t// Override appendTo etc., in order to provide support for targeting multiple elements. (This code would disappear if integrated in jquery core).\n\tjQuery.each({\n\t\tappendTo: \"append\",\n\t\tprependTo: \"prepend\",\n\t\tinsertBefore: \"before\",\n\t\tinsertAfter: \"after\",\n\t\treplaceAll: \"replaceWith\"\n\t}, function( name, original ) {\n\t\tjQuery.fn[ name ] = function( selector ) {\n\t\t\tvar ret = [], insert = jQuery( selector ), elems, i, l, tmplItems,\n\t\t\t\tparent = this.length === 1 && this[0].parentNode;\n\n\t\t\tappendToTmplItems = newTmplItems || {};\n\t\t\tif ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {\n\t\t\t\tinsert[ original ]( this[0] );\n\t\t\t\tret = this;\n\t\t\t} else {\n\t\t\t\tfor ( i = 0, l = insert.length; i < l; i++ ) {\n\t\t\t\t\tcloneIndex = i;\n\t\t\t\t\telems = (i > 0 ? this.clone(true) : this).get();\n\t\t\t\t\tjQuery.fn[ original ].apply( jQuery(insert[i]), elems );\n\t\t\t\t\tret = ret.concat( elems );\n\t\t\t\t}\n\t\t\t\tcloneIndex = 0;\n\t\t\t\tret = this.pushStack( ret, name, insert.selector );\n\t\t\t}\n\t\t\ttmplItems = appendToTmplItems;\n\t\t\tappendToTmplItems = null;\n\t\t\tjQuery.tmpl.complete( tmplItems );\n\t\t\treturn ret;\n\t\t};\n\t});\n\n\tjQuery.fn.extend({\n\t\t// Use first wrapped element as template markup.\n\t\t// Return wrapped set of template items, obtained by rendering template against data.\n\t\ttmpl: function( data, options, parentItem ) {\n\t\t\treturn jQuery.tmpl( this[0], data, options, parentItem );\n\t\t},\n\n\t\t// Find which rendered template item the first wrapped DOM element belongs to\n\t\ttmplItem: function() {\n\t\t\treturn jQuery.tmplItem( this[0] );\n\t\t},\n\n\t\t// Consider the first wrapped element as a template declaration, and get the compiled template or store it as a named template.\n\t\ttemplate: function( name ) {\n\t\t\treturn jQuery.template( name, this[0] );\n\t\t},\n\n\t\tdomManip: function( args, table, callback, options ) {\n\t\t\t// This appears to be a bug in the appendTo, etc. implementation\n\t\t\t// it should be doing .call() instead of .apply(). See #6227\n\t\t\tif ( args[0] && args[0].nodeType ) {\n\t\t\t\tvar dmArgs = jQuery.makeArray( arguments ), argsLength = args.length, i = 0, tmplItem;\n\t\t\t\twhile ( i < argsLength && !(tmplItem = jQuery.data( args[i++], \"tmplItem\" ))) {}\n\t\t\t\tif ( argsLength > 1 ) {\n\t\t\t\t\tdmArgs[0] = [jQuery.makeArray( args )];\n\t\t\t\t}\n\t\t\t\tif ( tmplItem && cloneIndex ) {\n\t\t\t\t\tdmArgs[2] = function( fragClone ) {\n\t\t\t\t\t\t// Handler called by oldManip when rendered template has been inserted into DOM.\n\t\t\t\t\t\tjQuery.tmpl.afterManip( this, fragClone, callback );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\toldManip.apply( this, dmArgs );\n\t\t\t} else {\n\t\t\t\toldManip.apply( this, arguments );\n\t\t\t}\n\t\t\tcloneIndex = 0;\n\t\t\tif ( !appendToTmplItems ) {\n\t\t\t\tjQuery.tmpl.complete( newTmplItems );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t});\n\n\tjQuery.extend({\n\t\t// Return wrapped set of template items, obtained by rendering template against data.\n\t\ttmpl: function( tmpl, data, options, parentItem ) {\n\t\t\tvar ret, topLevel = !parentItem;\n\t\t\tif ( topLevel ) {\n\t\t\t\t// This is a top-level tmpl call (not from a nested template using {{tmpl}})\n\t\t\t\tparentItem = topTmplItem;\n\t\t\t\ttmpl = jQuery.template[tmpl] || jQuery.template( null, tmpl );\n\t\t\t\twrappedItems = {}; // Any wrapped items will be rebuilt, since this is top level\n\t\t\t} else if ( !tmpl ) {\n\t\t\t\t// The template item is already associated with DOM - this is a refresh.\n\t\t\t\t// Re-evaluate rendered template for the parentItem\n\t\t\t\ttmpl = parentItem.tmpl;\n\t\t\t\tnewTmplItems[parentItem.key] = parentItem;\n\t\t\t\tparentItem.nodes = [];\n\t\t\t\tif ( parentItem.wrapped ) {\n\t\t\t\t\tupdateWrapped( parentItem, parentItem.wrapped );\n\t\t\t\t}\n\t\t\t\t// Rebuild, without creating a new template item\n\t\t\t\treturn jQuery( build( parentItem, null, parentItem.tmpl( jQuery, parentItem ) ));\n\t\t\t}\n\t\t\tif ( !tmpl ) {\n\t\t\t\treturn []; // Could throw...\n\t\t\t}\n\t\t\tif ( typeof data === \"function\" ) {\n\t\t\t\tdata = data.call( parentItem || {} );\n\t\t\t}\n\t\t\tif ( options && options.wrapped ) {\n\t\t\t\tupdateWrapped( options, options.wrapped );\n\t\t\t}\n\t\t\tret = jQuery.isArray( data ) ? \n\t\t\t\tjQuery.map( data, function( dataItem ) {\n\t\t\t\t\treturn dataItem ? newTmplItem( options, parentItem, tmpl, dataItem ) : null;\n\t\t\t\t}) :\n\t\t\t\t[ newTmplItem( options, parentItem, tmpl, data ) ];\n\t\t\treturn topLevel ? jQuery( build( parentItem, null, ret ) ) : ret;\n\t\t},\n\n\t\t// Return rendered template item for an element.\n\t\ttmplItem: function( elem ) {\n\t\t\tvar tmplItem;\n\t\t\tif ( elem instanceof jQuery ) {\n\t\t\t\telem = elem[0];\n\t\t\t}\n\t\t\twhile ( elem && elem.nodeType === 1 && !(tmplItem = jQuery.data( elem, \"tmplItem\" )) && (elem = elem.parentNode) ) {}\n\t\t\treturn tmplItem || topTmplItem;\n\t\t},\n\n\t\t// Set:\n\t\t// Use $.template( name, tmpl ) to cache a named template,\n\t\t// where tmpl is a template string, a script element or a jQuery instance wrapping a script element, etc.\n\t\t// Use $( \"selector\" ).template( name ) to provide access by name to a script block template declaration.\n\n\t\t// Get:\n\t\t// Use $.template( name ) to access a cached template.\n\t\t// Also $( selectorToScriptBlock ).template(), or $.template( null, templateString )\n\t\t// will return the compiled template, without adding a name reference.\n\t\t// If templateString includes at least one HTML tag, $.template( templateString ) is equivalent\n\t\t// to $.template( null, templateString )\n\t\ttemplate: function( name, tmpl ) {\n\t\t\tif (tmpl) {\n\t\t\t\t// Compile template and associate with name\n\t\t\t\tif ( typeof tmpl === \"string\" ) {\n\t\t\t\t\t// This is an HTML string being passed directly in.\n\t\t\t\t\ttmpl = buildTmplFn( tmpl )\n\t\t\t\t} else if ( tmpl instanceof jQuery ) {\n\t\t\t\t\ttmpl = tmpl[0] || {};\n\t\t\t\t}\n\t\t\t\tif ( tmpl.nodeType ) {\n\t\t\t\t\t// If this is a template block, use cached copy, or generate tmpl function and cache.\n\t\t\t\t\ttmpl = jQuery.data( tmpl, \"tmpl\" ) || jQuery.data( tmpl, \"tmpl\", buildTmplFn( tmpl.innerHTML ));\n\t\t\t\t}\n\t\t\t\treturn typeof name === \"string\" ? (jQuery.template[name] = tmpl) : tmpl;\n\t\t\t}\n\t\t\t// Return named compiled template\n\t\t\treturn name ? (typeof name !== \"string\" ? jQuery.template( null, name ): \n\t\t\t\t(jQuery.template[name] || \n\t\t\t\t\t// If not in map, treat as a selector. (If integrated with core, use quickExpr.exec) \n\t\t\t\t\tjQuery.template( null, htmlExpr.test( name ) ? name : jQuery( name )))) : null; \n\t\t},\n\n\t\tencode: function( text ) {\n\t\t\t// Do HTML encoding replacing < > & and ' and \" by corresponding entities.\n\t\t\treturn (\"\" + text).split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split('\"').join(\"&#34;\").split(\"'\").join(\"&#39;\");\n\t\t}\n\t});\n\n\tjQuery.extend( jQuery.tmpl, {\n\t\ttag: {\n\t\t\t\"tmpl\": {\n\t\t\t\t_default: { $2: \"null\" },\n\t\t\t\topen: \"if($notnull_1){_=_.concat($item.nest($1,$2));}\"\n\t\t\t\t// tmpl target parameter can be of type function, so use $1, not $1a (so not auto detection of functions)\n\t\t\t\t// This means that {{tmpl foo}} treats foo as a template (which IS a function). \n\t\t\t\t// Explicit parens can be used if foo is a function that returns a template: {{tmpl foo()}}.\n\t\t\t},\n\t\t\t\"wrap\": {\n\t\t\t\t_default: { $2: \"null\" },\n\t\t\t\topen: \"$item.calls(_,$1,$2);_=[];\",\n\t\t\t\tclose: \"call=$item.calls();_=call._.concat($item.wrap(call,_));\"\n\t\t\t},\n\t\t\t\"each\": {\n\t\t\t\t_default: { $2: \"$index, $value\" },\n\t\t\t\topen: \"if($notnull_1){$.each($1a,function($2){with(this){\",\n\t\t\t\tclose: \"}});}\"\n\t\t\t},\n\t\t\t\"if\": {\n\t\t\t\topen: \"if(($notnull_1) && $1a){\",\n\t\t\t\tclose: \"}\"\n\t\t\t},\n\t\t\t\"else\": {\n\t\t\t\t_default: { $1: \"true\" },\n\t\t\t\topen: \"}else if(($notnull_1) && $1a){\"\n\t\t\t},\n\t\t\t\"html\": {\n\t\t\t\t// Unecoded expression evaluation. \n\t\t\t\topen: \"if($notnull_1){_.push($1a);}\"\n\t\t\t},\n\t\t\t\"=\": {\n\t\t\t\t// Encoded expression evaluation. Abbreviated form is ${}.\n\t\t\t\t_default: { $1: \"$data\" },\n\t\t\t\topen: \"if($notnull_1){_.push($.encode($1a));}\"\n\t\t\t},\n\t\t\t\"!\": {\n\t\t\t\t// Comment tag. Skipped by parser\n\t\t\t\topen: \"\"\n\t\t\t}\n\t\t},\n\n\t\t// This stub can be overridden, e.g. in jquery.tmplPlus for providing rendered events\n\t\tcomplete: function( items ) {\n\t\t\tnewTmplItems = {};\n\t\t},\n\n\t\t// Call this from code which overrides domManip, or equivalent\n\t\t// Manage cloning/storing template items etc.\n\t\tafterManip: function afterManip( elem, fragClone, callback ) {\n\t\t\t// Provides cloned fragment ready for fixup prior to and after insertion into DOM\n\t\t\tvar content = fragClone.nodeType === 11 ?\n\t\t\t\tjQuery.makeArray(fragClone.childNodes) :\n\t\t\t\tfragClone.nodeType === 1 ? [fragClone] : [];\n\n\t\t\t// Return fragment to original caller (e.g. append) for DOM insertion\n\t\t\tcallback.call( elem, fragClone );\n\n\t\t\t// Fragment has been inserted:- Add inserted nodes to tmplItem data structure. Replace inserted element annotations by jQuery.data.\n\t\t\tstoreTmplItems( content );\n\t\t\tcloneIndex++;\n\t\t}\n\t});\n\n\t//========================== Private helper functions, used by code above ==========================\n\n\tfunction build( tmplItem, nested, content ) {\n\t\t// Convert hierarchical content into flat string array \n\t\t// and finally return array of fragments ready for DOM insertion\n\t\tvar frag, ret = content ? jQuery.map( content, function( item ) {\n\t\t\treturn (typeof item === \"string\") ? \n\t\t\t\t// Insert template item annotations, to be converted to jQuery.data( \"tmplItem\" ) when elems are inserted into DOM.\n\t\t\t\t(tmplItem.key ? item.replace( /(<\\w+)(?=[\\s>])(?![^>]*_tmplitem)([^>]*)/g, \"$1 \" + tmplItmAtt + \"=\\\"\" + tmplItem.key + \"\\\" $2\" ) : item) :\n\t\t\t\t// This is a child template item. Build nested template.\n\t\t\t\tbuild( item, tmplItem, item._ctnt );\n\t\t}) : \n\t\t// If content is not defined, insert tmplItem directly. Not a template item. May be a string, or a string array, e.g. from {{html $item.html()}}. \n\t\ttmplItem;\n\t\tif ( nested ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\t// top-level template\n\t\tret = ret.join(\"\");\n\n\t\t// Support templates which have initial or final text nodes, or consist only of text\n\t\t// Also support HTML entities within the HTML markup.\n\t\tret.replace( /^\\s*([^<\\s][^<]*)?(<[\\w\\W]+>)([^>]*[^>\\s])?\\s*$/, function( all, before, middle, after) {\n\t\t\tfrag = jQuery( middle ).get();\n\n\t\t\tstoreTmplItems( frag );\n\t\t\tif ( before ) {\n\t\t\t\tfrag = unencode( before ).concat(frag);\n\t\t\t}\n\t\t\tif ( after ) {\n\t\t\t\tfrag = frag.concat(unencode( after ));\n\t\t\t}\n\t\t});\n\t\treturn frag ? frag : unencode( ret );\n\t}\n\n\tfunction unencode( text ) {\n\t\t// Use createElement, since createTextNode will not render HTML entities correctly\n\t\tvar el = document.createElement( \"div\" );\n\t\tel.innerHTML = text;\n\t\treturn jQuery.makeArray(el.childNodes);\n\t}\n\n\t// Generate a reusable function that will serve to render a template against data\n\tfunction buildTmplFn( markup ) {\n\t\treturn new Function(\"jQuery\",\"$item\",\n\t\t\t\"var $=jQuery,call,_=[],$data=$item.data;\" +\n\n\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\"with($data){_.push('\" +\n\n\t\t\t// Convert the template into pure JavaScript\n\t\t\tjQuery.trim(markup)\n\t\t\t\t.replace( /([\\\\'])/g, \"\\\\$1\" )\n\t\t\t\t.replace( /[\\r\\t\\n]/g, \" \" )\n\t\t\t\t.replace( /\\$\\{([^\\}]*)\\}/g, \"{{= $1}}\" )\n\t\t\t\t.replace( /\\{\\{(\\/?)(\\w+|.)(?:\\(((?:[^\\}]|\\}(?!\\}))*?)?\\))?(?:\\s+(.*?)?)?(\\(((?:[^\\}]|\\}(?!\\}))*?)\\))?\\s*\\}\\}/g,\n\t\t\t\tfunction( all, slash, type, fnargs, target, parens, args ) {\n\t\t\t\t\tvar tag = jQuery.tmpl.tag[ type ], def, expr, exprAutoFnDetect;\n\t\t\t\t\tif ( !tag ) {\n\t\t\t\t\t\tthrow \"Template command not found: \" + type;\n\t\t\t\t\t}\n\t\t\t\t\tdef = tag._default || [];\n\t\t\t\t\tif ( parens && !/\\w$/.test(target)) {\n\t\t\t\t\t\ttarget += parens;\n\t\t\t\t\t\tparens = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tif ( target ) {\n\t\t\t\t\t\ttarget = unescape( target ); \n\t\t\t\t\t\targs = args ? (\",\" + unescape( args ) + \")\") : (parens ? \")\" : \"\");\n\t\t\t\t\t\t// Support for target being things like a.toLowerCase();\n\t\t\t\t\t\t// In that case don't call with template item as 'this' pointer. Just evaluate...\n\t\t\t\t\t\texpr = parens ? (target.indexOf(\".\") > -1 ? target + parens : (\"(\" + target + \").call($item\" + args)) : target;\n\t\t\t\t\t\texprAutoFnDetect = parens ? expr : \"(typeof(\" + target + \")==='function'?(\" + target + \").call($item):(\" + target + \"))\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\texprAutoFnDetect = expr = def.$1 || \"null\";\n\t\t\t\t\t}\n\t\t\t\t\tfnargs = unescape( fnargs );\n\t\t\t\t\treturn \"');\" + \n\t\t\t\t\t\ttag[ slash ? \"close\" : \"open\" ]\n\t\t\t\t\t\t\t.split( \"$notnull_1\" ).join( target ? \"typeof(\" + target + \")!=='undefined' && (\" + target + \")!=null\" : \"true\" )\n\t\t\t\t\t\t\t.split( \"$1a\" ).join( exprAutoFnDetect )\n\t\t\t\t\t\t\t.split( \"$1\" ).join( expr )\n\t\t\t\t\t\t\t.split( \"$2\" ).join( fnargs ?\n\t\t\t\t\t\t\t\tfnargs.replace( /\\s*([^\\(]+)\\s*(\\((.*?)\\))?/g, function( all, name, parens, params ) {\n\t\t\t\t\t\t\t\t\tparams = params ? (\",\" + params + \")\") : (parens ? \")\" : \"\");\n\t\t\t\t\t\t\t\t\treturn params ? (\"(\" + name + \").call($item\" + params) : all;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t: (def.$2||\"\")\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\"_.push('\";\n\t\t\t\t}) +\n\t\t\t\"');}return _;\"\n\t\t);\n\t}\n\tfunction updateWrapped( options, wrapped ) {\n\t\t// Build the wrapped content. \n\t\toptions._wrap = build( options, true, \n\t\t\t// Suport imperative scenario in which options.wrapped can be set to a selector or an HTML string.\n\t\t\tjQuery.isArray( wrapped ) ? wrapped : [htmlExpr.test( wrapped ) ? wrapped : jQuery( wrapped ).html()]\n\t\t).join(\"\");\n\t}\n\n\tfunction unescape( args ) {\n\t\treturn args ? args.replace( /\\\\'/g, \"'\").replace(/\\\\\\\\/g, \"\\\\\" ) : null;\n\t}\n\tfunction outerHtml( elem ) {\n\t\tvar div = document.createElement(\"div\");\n\t\tdiv.appendChild( elem.cloneNode(true) );\n\t\treturn div.innerHTML;\n\t}\n\n\t// Store template items in jQuery.data(), ensuring a unique tmplItem data data structure for each rendered template instance.\n\tfunction storeTmplItems( content ) {\n\t\tvar keySuffix = \"_\" + cloneIndex, elem, elems, newClonedItems = {}, i, l, m;\n\t\tfor ( i = 0, l = content.length; i < l; i++ ) {\n\t\t\tif ( (elem = content[i]).nodeType !== 1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telems = elem.getElementsByTagName(\"*\");\n\t\t\tfor ( m = elems.length - 1; m >= 0; m-- ) {\n\t\t\t\tprocessItemKey( elems[m] );\n\t\t\t}\n\t\t\tprocessItemKey( elem );\n\t\t}\n\t\tfunction processItemKey( el ) {\n\t\t\tvar pntKey, pntNode = el, pntItem, tmplItem, key;\n\t\t\t// Ensure that each rendered template inserted into the DOM has its own template item,\n\t\t\tif ( (key = el.getAttribute( tmplItmAtt ))) {\n\t\t\t\twhile ( pntNode.parentNode && (pntNode = pntNode.parentNode).nodeType === 1 && !(pntKey = pntNode.getAttribute( tmplItmAtt ))) { }\n\t\t\t\tif ( pntKey !== key ) {\n\t\t\t\t\t// The next ancestor with a _tmplitem expando is on a different key than this one.\n\t\t\t\t\t// So this is a top-level element within this template item\n\t\t\t\t\t// Set pntNode to the key of the parentNode, or to 0 if pntNode.parentNode is null, or pntNode is a fragment.\n\t\t\t\t\tpntNode = pntNode.parentNode ? (pntNode.nodeType === 11 ? 0 : (pntNode.getAttribute( tmplItmAtt ) || 0)) : 0;\n\t\t\t\t\tif ( !(tmplItem = newTmplItems[key]) ) {\n\t\t\t\t\t\t// The item is for wrapped content, and was copied from the temporary parent wrappedItem.\n\t\t\t\t\t\ttmplItem = wrappedItems[key];\n\t\t\t\t\t\ttmplItem = newTmplItem( tmplItem, newTmplItems[pntNode]||wrappedItems[pntNode], null, true );\n\t\t\t\t\t\ttmplItem.key = ++itemKey;\n\t\t\t\t\t\tnewTmplItems[itemKey] = tmplItem;\n\t\t\t\t\t}\n\t\t\t\t\tif ( cloneIndex ) {\n\t\t\t\t\t\tcloneTmplItem( key );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tel.removeAttribute( tmplItmAtt );\n\t\t\t} else if ( cloneIndex && (tmplItem = jQuery.data( el, \"tmplItem\" )) ) {\n\t\t\t\t// This was a rendered element, cloned during append or appendTo etc.\n\t\t\t\t// TmplItem stored in jQuery data has already been cloned in cloneCopyEvent. We must replace it with a fresh cloned tmplItem.\n\t\t\t\tcloneTmplItem( tmplItem.key );\n\t\t\t\tnewTmplItems[tmplItem.key] = tmplItem;\n\t\t\t\tpntNode = jQuery.data( el.parentNode, \"tmplItem\" );\n\t\t\t\tpntNode = pntNode ? pntNode.key : 0;\n\t\t\t}\n\t\t\tif ( tmplItem ) {\n\t\t\t\tpntItem = tmplItem;\n\t\t\t\t// Find the template item of the parent element. \n\t\t\t\t// (Using !=, not !==, since pntItem.key is number, and pntNode may be a string)\n\t\t\t\twhile ( pntItem && pntItem.key != pntNode ) { \n\t\t\t\t\t// Add this element as a top-level node for this rendered template item, as well as for any\n\t\t\t\t\t// ancestor items between this item and the item of its parent element\n\t\t\t\t\tpntItem.nodes.push( el );\n\t\t\t\t\tpntItem = pntItem.parent;\n\t\t\t\t}\n\t\t\t\t// Delete content built during rendering - reduce API surface area and memory use, and avoid exposing of stale data after rendering...\n\t\t\t\tdelete tmplItem._ctnt;\n\t\t\t\tdelete tmplItem._wrap;\n\t\t\t\t// Store template item as jQuery data on the element\n\t\t\t\tjQuery.data( el, \"tmplItem\", tmplItem );\n\t\t\t}\n\t\t\tfunction cloneTmplItem( key ) {\n\t\t\t\tkey = key + keySuffix;\n\t\t\t\ttmplItem = newClonedItems[key] = \n\t\t\t\t\t(newClonedItems[key] || newTmplItem( tmplItem, newTmplItems[tmplItem.parent.key + keySuffix] || tmplItem.parent, null, true ));\n\t\t\t}\n\t\t}\n\t}\n\n\t//---- Helper functions for template item ----\n\n\tfunction tiCalls( content, tmpl, data, options ) {\n\t\tif ( !content ) {\n\t\t\treturn stack.pop();\n\t\t}\n\t\tstack.push({ _: content, tmpl: tmpl, item:this, data: data, options: options });\n\t}\n\n\tfunction tiNest( tmpl, data, options ) {\n\t\t// nested template, using {{tmpl}} tag\n\t\treturn jQuery.tmpl( jQuery.template( tmpl ), data, options, this );\n\t}\n\n\tfunction tiWrap( call, wrapped ) {\n\t\t// nested template, using {{wrap}} tag\n\t\tvar options = call.options || {};\n\t\toptions.wrapped = wrapped;\n\t\t// Apply the template, which may incorporate wrapped content, \n\t\treturn jQuery.tmpl( jQuery.template( call.tmpl ), call.data, options, call.item );\n\t}\n\n\tfunction tiHtml( filter, textOnly ) {\n\t\tvar wrapped = this._wrap;\n\t\treturn jQuery.map(\n\t\t\tjQuery( jQuery.isArray( wrapped ) ? wrapped.join(\"\") : wrapped ).filter( filter || \"*\" ),\n\t\t\tfunction(e) {\n\t\t\t\treturn textOnly ?\n\t\t\t\t\te.innerText || e.textContent :\n\t\t\t\t\te.outerHTML || outerHtml(e);\n\t\t\t});\n\t}\n\n\tfunction tiUpdate() {\n\t\tvar coll = this.nodes;\n\t\tjQuery.tmpl( null, null, null, this).insertBefore( coll[0] );\n\t\tjQuery( coll ).remove();\n\t}\n})( jQuery );\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = jQuery.tmpl;\n\n\n//# sourceURL=webpack:///./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tmpl.js?");

/***/ }),

/***/ "./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.dateinput.js":
/*!***************************************************************************************************!*\
  !*** ./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.dateinput.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar jQuery = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\nvar $ = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\n\n!function($,undefined){function dayAm(year,month){return new Date(year,month+1,0).getDate()}function zeropad(val,len){for(val=\"\"+val,len=len||2;val.length<len;)val=\"0\"+val;return val}function format(formatter,date,text,lang){var d=date.getDate(),D=date.getDay(),m=date.getMonth(),y=date.getFullYear(),flags={d:d,dd:zeropad(d),ddd:LABELS[lang].shortDays[D],dddd:LABELS[lang].days[D],m:m+1,mm:zeropad(m+1),mmm:LABELS[lang].shortMonths[m],mmmm:LABELS[lang].months[m],yy:String(y).slice(2),yyyy:y},ret=formatters[formatter](text,date,flags,lang);return tmpTag.html(ret).html()}function integer(val){return parseInt(val,10)}function isSameDay(d1,d2){return d1.getFullYear()===d2.getFullYear()&&d1.getMonth()==d2.getMonth()&&d1.getDate()==d2.getDate()}function parseDate(val){if(val!==undefined){if(val.constructor==Date)return val;if(\"string\"==typeof val){var els=val.split(\"-\");if(3==els.length)return new Date(integer(els[0]),integer(els[1])-1,integer(els[2]));if(!/^-?\\d+$/.test(val))return;val=integer(val)}var date=new Date;return date.setDate(date.getDate()+val),date}}function Dateinput(input,conf){function select(date,conf,e){return input.attr(\"readonly\")?void self.hide(e):(value=date,currYear=date.getFullYear(),currMonth=date.getMonth(),currDay=date.getDate(),e||(e=$.Event(\"api\")),\"click\"!=e.type||/msie/.test(navigator.userAgent.toLowerCase())||input.focus(),e.type=\"beforeChange\",fire.trigger(e,[date]),void(e.isDefaultPrevented()||(input.val(format(conf.formatter,date,conf.format,conf.lang)),e.type=\"change\",e.target=input[0],fire.trigger(e),input.data(\"date\",date),self.hide(e))))}function onShow(ev){ev.type=\"onShow\",fire.trigger(ev),$(document).on(\"keydown.d\",function(e){if(e.ctrlKey)return!0;var key=e.keyCode;if(8==key||46==key)return input.val(\"\"),self.hide(e);if(27==key||9==key)return self.hide(e);if($(KEYS).index(key)>=0){if(!opened)return self.show(e),e.preventDefault();var days=$(\"#\"+css.weeks+\" a\"),el=$(\".\"+css.focus),index=days.index(el);return el.removeClass(css.focus),74==key||40==key?index+=7:75==key||38==key?index-=7:76==key||39==key?index+=1:(72==key||37==key)&&(index-=1),index>41?(self.addMonth(),el=$(\"#\"+css.weeks+\" a:eq(\"+(index-42)+\")\")):0>index?(self.addMonth(-1),el=$(\"#\"+css.weeks+\" a:eq(\"+(index+42)+\")\")):el=days.eq(index),el.addClass(css.focus),e.preventDefault()}return 34==key?self.addMonth():33==key?self.addMonth(-1):36==key?self.today():(13==key&&($(e.target).is(\"select\")||$(\".\"+css.focus).click()),$([16,17,18,9]).index(key)>=0)}),$(document).on(\"click.d\",function(e){var el=e.target;el.id==css.root||$(el).parents(\"#\"+css.root).length||el==input[0]||trigger&&el==trigger[0]||self.hide(e)})}var trigger,pm,nm,currYear,currMonth,currDay,opened,original,self=this,now=new Date,yearNow=now.getFullYear(),css=conf.css,labels=LABELS[conf.lang],root=$(\"#\"+css.root),title=root.find(\"#\"+css.title),value=input.attr(\"data-value\")||conf.value||input.val(),min=input.attr(\"min\")||conf.min,max=input.attr(\"max\")||conf.max;if(0===min&&(min=\"0\"),value=parseDate(value)||now,min=parseDate(min||new Date(yearNow+conf.yearRange[0],1,1)),max=parseDate(max||new Date(yearNow+conf.yearRange[1]+1,1,-1)),!labels)throw\"Dateinput: invalid language: \"+conf.lang;if(\"date\"==input.attr(\"type\")){var original=input.clone(),def=original.wrap(\"<div/>\").parent().html(),clone=$(def.replace(/type/i,\"type=text data-orig-type\"));conf.value&&clone.val(conf.value),input.replaceWith(clone),input=clone}input.addClass(css.input);var fire=input.add(self);if(!root.length){if(root=$(\"<div><div><a/><div/><a/></div><div><div/><div/></div></div>\").hide().css({position:\"absolute\"}).attr(\"id\",css.root),root.children().eq(0).attr(\"id\",css.head).end().eq(1).attr(\"id\",css.body).children().eq(0).attr(\"id\",css.days).end().eq(1).attr(\"id\",css.weeks).end().end().end().find(\"a\").eq(0).attr(\"id\",css.prev).end().eq(1).attr(\"id\",css.next),title=root.find(\"#\"+css.head).find(\"div\").attr(\"id\",css.title),conf.selectors){var monthSelector=$(\"<select/>\").attr(\"id\",css.month),yearSelector=$(\"<select/>\").attr(\"id\",css.year);title.html(monthSelector.add(yearSelector))}for(var days=root.find(\"#\"+css.days),d=0;7>d;d++)days.append($(\"<span/>\").text(labels.shortDays[(d+conf.firstDay)%7]));$(\"body\").append(root)}conf.trigger&&(trigger=$(\"<a/>\").attr(\"href\",\"#\").addClass(css.trigger).click(function(e){return conf.toggle?self.toggle():self.show(),e.preventDefault()}).insertAfter(input));var weeks=root.find(\"#\"+css.weeks);yearSelector=root.find(\"#\"+css.year),monthSelector=root.find(\"#\"+css.month),$.extend(self,{show:function(e){if(!input.attr(\"disabled\")&&!opened&&(e=e||$.Event(),e.type=\"onBeforeShow\",fire.trigger(e),!e.isDefaultPrevented())){$.each(instances,function(){this.hide()}),opened=!0,monthSelector.off(\"change\").change(function(){self.setValue(integer(yearSelector.val()),integer($(this).val()))}),yearSelector.off(\"change\").change(function(){self.setValue(integer($(this).val()),integer(monthSelector.val()))}),pm=root.find(\"#\"+css.prev).off(\"click\").click(function(){return pm.hasClass(css.disabled)||self.addMonth(-1),!1}),nm=root.find(\"#\"+css.next).off(\"click\").click(function(){return nm.hasClass(css.disabled)||self.addMonth(),!1}),self.setValue(value);var pos=input.offset();return/iPad/i.test(navigator.userAgent)&&(pos.top-=$(window).scrollTop()),root.css({top:pos.top+input.outerHeight(!0)+conf.offset[0],left:pos.left+conf.offset[1]}),conf.speed?root.show(conf.speed,function(){onShow(e)}):(root.show(),onShow(e)),self}},setValue:function(year,month,day){var date=integer(month)>=-1?new Date(integer(year),integer(month),integer(day==undefined||isNaN(day)?1:day)):year||value;if(min>date?date=min:date>max&&(date=max),\"string\"==typeof year&&(date=parseDate(year)),year=date.getFullYear(),month=date.getMonth(),day=date.getDate(),-1==month?(month=11,year--):12==month&&(month=0,year++),!opened)return select(date,conf),self;currMonth=month,currYear=year,currDay=day;var week,tmp=new Date(year,month,1-conf.firstDay),begin=tmp.getDay(),days=dayAm(year,month),prevDays=dayAm(year,month-1);if(conf.selectors){monthSelector.empty(),$.each(labels.months,function(i,m){min<new Date(year,i+1,1)&&max>new Date(year,i,0)&&monthSelector.append($(\"<option/>\").html(m).attr(\"value\",i))}),yearSelector.empty();for(var yearNow=now.getFullYear(),i=yearNow+conf.yearRange[0];i<yearNow+conf.yearRange[1];i++)min<new Date(i+1,0,1)&&max>new Date(i,0,0)&&yearSelector.append($(\"<option/>\").text(i));monthSelector.val(month),yearSelector.val(year)}else title.html(labels.months[month]+\" \"+year);weeks.empty(),pm.add(nm).removeClass(css.disabled);for(var a,num,j=begin?0:-7;(begin?42:35)>j;j++)a=$(\"<a/>\"),j%7===0&&(week=$(\"<div/>\").addClass(css.week),weeks.append(week)),begin>j?(a.addClass(css.off),num=prevDays-begin+j+1,date=new Date(year,month-1,num)):j>=begin+days?(a.addClass(css.off),num=j-days-begin+1,date=new Date(year,month+1,num)):(num=j-begin+1,date=new Date(year,month,num),isSameDay(value,date)?a.attr(\"id\",css.current).addClass(css.focus):isSameDay(now,date)&&a.attr(\"id\",css.today)),min&&min>date&&a.add(pm).addClass(css.disabled),max&&date>max&&a.add(nm).addClass(css.disabled),a.attr(\"href\",\"#\"+num).text(num).data(\"date\",date),week.append(a);return weeks.find(\"a\").click(function(e){var el=$(this);return el.hasClass(css.disabled)||($(\"#\"+css.current).removeAttr(\"id\"),el.attr(\"id\",css.current),select(el.data(\"date\"),conf,e)),!1}),css.sunday&&weeks.find(\".\"+css.week).each(function(){var beg=conf.firstDay?7-conf.firstDay:0;$(this).children().slice(beg,beg+1).addClass(css.sunday)}),self},setMin:function(val,fit){return min=parseDate(val),fit&&min>value&&self.setValue(min),self},setMax:function(val,fit){return max=parseDate(val),fit&&value>max&&self.setValue(max),self},today:function(){return self.setValue(now)},addDay:function(amount){return this.setValue(currYear,currMonth,currDay+(amount||1))},addMonth:function(amount){var targetMonth=currMonth+(amount||1),daysInTargetMonth=dayAm(currYear,targetMonth),targetDay=daysInTargetMonth>=currDay?currDay:daysInTargetMonth;return this.setValue(currYear,targetMonth,targetDay)},addYear:function(amount){return this.setValue(currYear+(amount||1),currMonth,currDay)},destroy:function(){input.add(document).off(\"click.d keydown.d\"),root.add(trigger).remove(),input.removeData(\"dateinput\").removeClass(css.input),original&&input.replaceWith(original)},hide:function(e){if(opened){if(e=$.Event(),e.type=\"onHide\",fire.trigger(e),e.isDefaultPrevented())return;$(document).off(\"click.d keydown.d\"),root.hide(),opened=!1}return self},toggle:function(){return self.isOpen()?self.hide():self.show()},getConf:function(){return conf},getInput:function(){return input},getCalendar:function(){return root},getValue:function(dateFormat){return dateFormat?format(conf.formatter,value,dateFormat,conf.lang):value},isOpen:function(){return opened}}),$.each([\"onBeforeShow\",\"onShow\",\"change\",\"onHide\"],function(i,name){$.isFunction(conf[name])&&$(self).on(name,conf[name]),self[name]=function(fn){return fn&&$(self).on(name,fn),self}}),conf.editable||input.on(\"focus.d click.d\",self.show).keydown(function(e){var key=e.keyCode;return!opened&&$(KEYS).index(key)>=0?(self.show(e),e.preventDefault()):((8==key||46==key)&&input.val(\"\"),e.shiftKey||e.ctrlKey||e.altKey||9==key?!0:e.preventDefault())}),parseDate(input.val())&&select(value,conf)}$.tools=$.tools||{version:\"@VERSION\"};var tool,instances=[],formatters={},KEYS=[75,76,38,39,74,72,40,37],LABELS={};tool=$.tools.dateinput={conf:{format:\"mm/dd/yy\",formatter:\"default\",selectors:!1,yearRange:[-5,5],lang:\"en\",offset:[0,0],speed:0,firstDay:0,min:undefined,max:undefined,trigger:0,toggle:0,editable:0,css:{prefix:\"cal\",input:\"date\",root:0,head:0,title:0,prev:0,next:0,month:0,year:0,days:0,body:0,weeks:0,today:0,current:0,week:0,off:0,sunday:0,focus:0,disabled:0,trigger:0}},addFormatter:function(name,fn){formatters[name]=fn},localize:function(language,labels){$.each(labels,function(key,val){labels[key]=val.split(\",\")}),LABELS[language]=labels}},tool.localize(\"en\",{months:\"January,February,March,April,May,June,July,August,September,October,November,December\",shortMonths:\"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec\",days:\"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\",shortDays:\"Sun,Mon,Tue,Wed,Thu,Fri,Sat\"});var tmpTag=$(\"<a/>\");tool.addFormatter(\"default\",function(text,date,flags){return text.replace(/d{1,4}|m{1,4}|yy(?:yy)?|\"[^\"]*\"|'[^']*'/g,function($0){return $0 in flags?flags[$0]:$0})}),tool.addFormatter(\"prefixed\",function(text,date,flags){return text.replace(/%(d{1,4}|m{1,4}|yy(?:yy)?|\"[^\"]*\"|'[^']*')/g,function($0,$1){return $1 in flags?flags[$1]:$0})}),$.expr[\":\"].date=function(el){var type=el.getAttribute(\"type\");return type&&\"date\"==type||!!$(el).data(\"dateinput\")},$.fn.dateinput=function(conf){if(this.data(\"dateinput\"))return this;conf=$.extend(!0,{},tool.conf,conf),$.each(conf.css,function(key,val){val||\"prefix\"==key||(conf.css[key]=(conf.css.prefix||\"\")+(val||key))});var els;return this.each(function(){var el=new Dateinput($(this),conf);instances.push(el);var input=el.getInput().data(\"dateinput\",el);els=els?els.add(input):input}),els?els:this}}(jQuery);\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = $.tabs;\n\n\n//# sourceURL=webpack:///./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.dateinput.js?");

/***/ }),

/***/ "./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.overlay.js":
/*!*************************************************************************************************!*\
  !*** ./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.overlay.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar jQuery = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\nvar $ = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\n\n/**\n * @license \n * jQuery Tools @VERSION Overlay - Overlay base. Extend it.\n * \n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n * \n * http://flowplayer.org/tools/overlay/\n *\n * Since: March 2008\n * Date: @DATE \n */\n(function($) { \n\n\t// static constructs\n\t$.tools = $.tools || {version: '@VERSION'};\n\t\n\t$.tools.overlay = {\n\t\t\n\t\taddEffect: function(name, loadFn, closeFn) {\n\t\t\teffects[name] = [loadFn, closeFn];\t\n\t\t},\n\t\n\t\tconf: {  \n\t\t\tclose: null,\t\n\t\t\tcloseOnClick: true,\n\t\t\tcloseOnEsc: true,\t\t\t\n\t\t\tcloseSpeed: 'fast',\n\t\t\teffect: 'default',\n\t\t\t\n\t\t\t// since 1.2. fixed positioning not supported by IE6\n\t\t\tfixed: !/msie/.test(navigator.userAgent.toLowerCase()) || navigator.appVersion > 6, \n\t\t\t\n\t\t\tleft: 'center',\t\t\n\t\t\tload: false, // 1.2\n\t\t\tmask: null,  \n\t\t\toneInstance: true,\n\t\t\tspeed: 'normal',\n\t\t\ttarget: null, // target element to be overlayed. by default taken from [rel]\n\t\t\ttop: '10%'\n\t\t}\n\t};\n\n\t\n\tvar instances = [], effects = {};\n\t\t\n\t// the default effect. nice and easy!\n\t$.tools.overlay.addEffect('default', \n\t\t\n\t\t/* \n\t\t\tonLoad/onClose functions must be called otherwise none of the \n\t\t\tuser supplied callback methods won't be called\n\t\t*/\n\t\tfunction(pos, onLoad) {\n\t\t\t\n\t\t\tvar conf = this.getConf(),\n\t\t\t\t w = $(window);\t\t\t\t \n\t\t\t\t\n\t\t\tif (!conf.fixed)  {\n\t\t\t\tpos.top += w.scrollTop();\n\t\t\t\tpos.left += w.scrollLeft();\n\t\t\t} \n\t\t\t\t\n\t\t\tpos.position = conf.fixed ? 'fixed' : 'absolute';\n\t\t\tthis.getOverlay().css(pos).fadeIn(conf.speed, onLoad); \n\t\t\t\n\t\t}, function(onClose) {\n\t\t\tthis.getOverlay().fadeOut(this.getConf().closeSpeed, onClose); \t\t\t\n\t\t}\t\t\n\t);\t\t\n\n\t\n\tfunction Overlay(trigger, conf) {\t\t\n\t\t\n\t\t// private variables\n\t\tvar self = this,\n\t\t\t fire = trigger.add(self),\n\t\t\t w = $(window), \n\t\t\t closers,            \n\t\t\t overlay,\n\t\t\t opened,\n\t\t\t maskConf = $.tools.expose && (conf.mask || conf.expose),\n\t\t\t uid = Math.random().toString().slice(10);\t\t\n\t\t\n\t\t\t \n\t\t// mask configuration\n\t\tif (maskConf) {\t\t\t\n\t\t\tif (typeof maskConf == 'string') { maskConf = {color: maskConf}; }\n\t\t\tmaskConf.closeOnClick = maskConf.closeOnEsc = false;\n\t\t}\t\t\t \n\t\t \n\t\t// get overlay and trigger\n\t\tvar jq = conf.target || trigger.attr(\"rel\");\n\t\toverlay = jq ? $(jq) :  false || trigger;\t\n\t\t\n\t\t// overlay not found. cannot continue\n\t\tif (!overlay.length) { throw \"Could not find Overlay: \" + jq; }\n\t\t\n\t\t// trigger's click event\n\t\tif (trigger && trigger.index(overlay) == -1) {\n\t\t\ttrigger.click(function(e) {\t\t\t\t\n\t\t\t\tself.load(e);\n\t\t\t\treturn e.preventDefault();\n\t\t\t});\n\t\t}   \t\t\t\n\t\t\n\t\t// API methods  \n\t\t$.extend(self, {\n\n\t\t\tload: function(e) {\n\t\t\t\t\n\t\t\t\t// can be opened only once\n\t\t\t\tif (self.isOpened()) { return self; }\n\t\t\t\t\n\t\t\t\t// find the effect\n\t\t \t\tvar eff = effects[conf.effect];\n\t\t \t\tif (!eff) { throw \"Overlay: cannot find effect : \\\"\" + conf.effect + \"\\\"\"; }\n\t\t\t\t\n\t\t\t\t// close other instances?\n\t\t\t\tif (conf.oneInstance) {\n\t\t\t\t\t$.each(instances, function() {\n\t\t\t\t\t\tthis.close(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// onBeforeLoad\n\t\t\t\te = e || $.Event();\n\t\t\t\te.type = \"onBeforeLoad\";\n\t\t\t\tfire.trigger(e);\t\t\t\t\n\t\t\t\tif (e.isDefaultPrevented()) { return self; }\t\t\t\t\n\n\t\t\t\t// opened\n\t\t\t\topened = true;\n\t\t\t\t\n\t\t\t\t// possible mask effect\n\t\t\t\tif (maskConf) { $(overlay).expose(maskConf); }\t\t\t\t\n\t\t\t\t\n\t\t\t\t// position & dimensions \n\t\t\t\tvar top = conf.top,\t\t\t\t\t\n\t\t\t\t\t left = conf.left,\n\t\t\t\t\t oWidth = overlay.outerWidth(true),\n\t\t\t\t\t oHeight = overlay.outerHeight(true); \n\t\t\t\t\n\t\t\t\tif (typeof top == 'string')  {\n\t\t\t\t\ttop = top == 'center' ? Math.max((w.height() - oHeight) / 2, 0) : \n\t\t\t\t\t\tparseInt(top, 10) / 100 * w.height();\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t\tif (left == 'center') { left = Math.max((w.width() - oWidth) / 2, 0); }\n\n\t\t\t\t\n\t\t \t\t// load effect  \t\t \t\t\n\t\t\t\teff[0].call(self, {top: top, left: left}, function() {\t\t\t\t\t\n\t\t\t\t\tif (opened) {\n\t\t\t\t\t\te.type = \"onLoad\";\n\t\t\t\t\t\tfire.trigger(e);\n\t\t\t\t\t}\n\t\t\t\t}); \t\t\t\t\n\n\t\t\t\t// mask.click closes overlay\n\t\t\t\tif (maskConf && conf.closeOnClick) {\n\t\t\t\t\t$.mask.getMask().one(\"click\", self.close); \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// when window is clicked outside overlay, we close\n\t\t\t\tif (conf.closeOnClick) {\n\t\t\t\t\t$(document).on(\"click.\" + uid, function(e) { \n\t\t\t\t\t\tif (!$(e.target).parents(overlay).length) { \n\t\t\t\t\t\t\tself.close(e); \n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\n\t\t\t\t// keyboard::escape\n\t\t\t\tif (conf.closeOnEsc) { \n\n\t\t\t\t\t// one callback is enough if multiple instances are loaded simultaneously\n\t\t\t\t\t$(document).on(\"keydown.\" + uid, function(e) {\n\t\t\t\t\t\tif (e.keyCode == 27) { \n\t\t\t\t\t\t\tself.close(e);\t \n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\treturn self; \n\t\t\t}, \n\t\t\t\n\t\t\tclose: function(e) {\n\n\t\t\t\tif (!self.isOpened()) { return self; }\n\t\t\t\t\n\t\t\t\te = e || $.Event();\n\t\t\t\te.type = \"onBeforeClose\";\n\t\t\t\tfire.trigger(e);\t\t\t\t\n\t\t\t\tif (e.isDefaultPrevented()) { return; }\t\t\t\t\n\t\t\t\t\n\t\t\t\topened = false;\n\t\t\t\t\n\t\t\t\t// close effect\n\t\t\t\teffects[conf.effect][1].call(self, function() {\n\t\t\t\t\te.type = \"onClose\";\n\t\t\t\t\tfire.trigger(e); \n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// unbind the keyboard / clicking actions\n\t\t\t\t$(document).off(\"click.\" + uid + \" keydown.\" + uid);\t\t  \n\t\t\t\t\n\t\t\t\tif (maskConf) {\n\t\t\t\t\t$.mask.close();\t\t\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\treturn self;\n\t\t\t}, \n\t\t\t\n\t\t\tgetOverlay: function() {\n\t\t\t\treturn overlay;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetTrigger: function() {\n\t\t\t\treturn trigger;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetClosers: function() {\n\t\t\t\treturn closers;\t\n\t\t\t},\t\t\t\n\n\t\t\tisOpened: function()  {\n\t\t\t\treturn opened;\n\t\t\t},\n\t\t\t\n\t\t\t// manipulate start, finish and speeds\n\t\t\tgetConf: function() {\n\t\t\t\treturn conf;\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t});\n\t\t\n\t\t// callbacks\t\n\t\t$.each(\"onBeforeLoad,onStart,onLoad,onBeforeClose,onClose\".split(\",\"), function(i, name) {\n\t\t\t\t\n\t\t\t// configuration\n\t\t\tif ($.isFunction(conf[name])) { \n\t\t\t\t$(self).on(name, conf[name]); \n\t\t\t}\n\n\t\t\t// API\n\t\t\tself[name] = function(fn) {\n\t\t\t\tif (fn) { $(self).on(name, fn); }\n\t\t\t\treturn self;\n\t\t\t};\n\t\t});\n\t\t\n\t\t// close button\n\t\tclosers = overlay.find(conf.close || \".close\");\t\t\n\t\t\n\t\tif (!closers.length && !conf.close) {\n\t\t\tclosers = $('<a class=\"close\"></a>');\n\t\t\toverlay.prepend(closers);\t\n\t\t}\t\t\n\t\t\n\t\tclosers.click(function(e) { \n\t\t\tself.close(e);  \n\t\t});\t\n\t\t\n\t\t// autoload\n\t\tif (conf.load) { self.load(); }\n\t\t\n\t}\n\t\n\t// jQuery plugin initialization\n\t$.fn.overlay = function(conf) {   \n\t\t\n\t\t// already constructed --> return API\n\t\tvar el = this.data(\"overlay\");\n\t\tif (el) { return el; }\t  \t\t \n\t\t\n\t\tif ($.isFunction(conf)) {\n\t\t\tconf = {onBeforeLoad: conf};\t\n\t\t}\n\n\t\tconf = $.extend(true, {}, $.tools.overlay.conf, conf);\n\t\t\n\t\tthis.each(function() {\t\t\n\t\t\tel = new Overlay($(this), conf);\n\t\t\tinstances.push(el);\n\t\t\t$(this).data(\"overlay\", el);\t\n\t\t});\n\t\t\n\t\treturn conf.api ? el: this;\t\t\n\t}; \n\t\n})(jQuery);\n\n\n\n/**\n * @license \n * jQuery Tools @VERSION Scrollable - New wave UI design\n * \n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n * \n * http://flowplayer.org/tools/scrollable.html\n *\n * Since: March 2008\n * Date: @DATE \n */\n(function($) { \n\n\t// static constructs\n\t$.tools = $.tools || {version: '@VERSION'};\n\t\n\t$.tools.scrollable = {\n\t\t\n\t\tconf: {\t\n\t\t\tactiveClass: 'active',\n\t\t\tcircular: false,\n\t\t\tclonedClass: 'cloned',\n\t\t\tdisabledClass: 'disabled',\n\t\t\teasing: 'swing',\n\t\t\tinitialIndex: 0,\n\t\t\titem: '> *',\n\t\t\titems: '.items',\n\t\t\tkeyboard: true,\n\t\t\tmousewheel: false,\n\t\t\tnext: '.next',   \n\t\t\tprev: '.prev', \n\t\t\tsize: 1,\n\t\t\tspeed: 400,\n\t\t\tvertical: false,\n\t\t\ttouch: true,\n\t\t\twheelSpeed: 0\n\t\t} \n\t};\n\t\t\t\t\t\n\t// get hidden element's width or height even though it's hidden\n\tfunction dim(el, key) {\n\t\tvar v = parseInt(el.css(key), 10);\n\t\tif (v) { return v; }\n\t\tvar s = el[0].currentStyle; \n\t\treturn s && s.width && parseInt(s.width, 10);\t\n\t}\n\n\tfunction find(root, query) { \n\t\tvar el = $(query);\n\t\treturn el.length < 2 ? el : root.parent().find(query);\n\t}\n\t\n\tvar current;\t\t\n\t\n\t// constructor\n\tfunction Scrollable(root, conf) {   \n\t\t\n\t\t// current instance\n\t\tvar self = this, \n\t\t\t fire = root.add(self),\n\t\t\t itemWrap = root.children(),\n\t\t\t index = 0,\n\t\t\t vertical = conf.vertical;\n\t\t\t\t\n\t\tif (!current) { current = self; } \n\t\tif (itemWrap.length > 1) { itemWrap = $(conf.items, root); }\n\t\t\n\t\t\n\t\t// in this version circular not supported when size > 1\n\t\tif (conf.size > 1) { conf.circular = false; } \n\t\t\n\t\t// methods\n\t\t$.extend(self, {\n\t\t\t\t\n\t\t\tgetConf: function() {\n\t\t\t\treturn conf;\t\n\t\t\t},\t\t\t\n\t\t\t\n\t\t\tgetIndex: function() {\n\t\t\t\treturn index;\t\n\t\t\t}, \n\n\t\t\tgetSize: function() {\n\t\t\t\treturn self.getItems().size();\t\n\t\t\t},\n\n\t\t\tgetNaviButtons: function() {\n\t\t\t\treturn prev.add(next);\t\n\t\t\t},\n\t\t\t\n\t\t\tgetRoot: function() {\n\t\t\t\treturn root;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetItemWrap: function() {\n\t\t\t\treturn itemWrap;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetItems: function() {\n\t\t\t\treturn itemWrap.find(conf.item).not(\".\" + conf.clonedClass);\t\n\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\tmove: function(offset, time) {\n\t\t\t\treturn self.seekTo(index + offset, time);\n\t\t\t},\n\t\t\t\n\t\t\tnext: function(time) {\n\t\t\t\treturn self.move(conf.size, time);\t\n\t\t\t},\n\t\t\t\n\t\t\tprev: function(time) {\n\t\t\t\treturn self.move(-conf.size, time);\t\n\t\t\t},\n\t\t\t\n\t\t\tbegin: function(time) {\n\t\t\t\treturn self.seekTo(0, time);\t\n\t\t\t},\n\t\t\t\n\t\t\tend: function(time) {\n\t\t\t\treturn self.seekTo(self.getSize() -1, time);\t\n\t\t\t},\t\n\t\t\t\n\t\t\tfocus: function() {\n\t\t\t\tcurrent = self;\n\t\t\t\treturn self;\n\t\t\t},\n\t\t\t\n\t\t\taddItem: function(item) {\n\t\t\t\titem = $(item);\n\t\t\t\t\n\t\t\t\tif (!conf.circular)  {\n\t\t\t\t\titemWrap.append(item);\n\t\t\t\t\tnext.removeClass(\"disabled\");\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\titemWrap.children().last().before(item);\n\t\t\t\t\titemWrap.children().first().replaceWith(item.clone().addClass(conf.clonedClass)); \t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfire.trigger(\"onAddItem\", [item]);\n\t\t\t\treturn self;\n\t\t\t},\n\t\t\t\n\t\t\t\n\t\t\t/* all seeking functions depend on this */\t\t\n\t\t\tseekTo: function(i, time, fn) {\t\n\t\t\t\t\n\t\t\t\t// ensure numeric index\n\t\t\t\tif (!i.jquery) { i *= 1; }\n\t\t\t\t\n\t\t\t\t// avoid seeking from end clone to the beginning\n\t\t\t\tif (conf.circular && i === 0 && index == -1 && time !== 0) { return self; }\n\t\t\t\t\n\t\t\t\t// check that index is sane\t\t\t\t\n\t\t\t\tif (!conf.circular && i < 0 || i > self.getSize() || i < -1) { return self; }\n\t\t\t\t\n\t\t\t\tvar item = i;\n\t\t\t\n\t\t\t\tif (i.jquery) {\n\t\t\t\t\ti = self.getItems().index(i);\t\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\titem = self.getItems().eq(i);\n\t\t\t\t}  \n\t\t\t\t\n\t\t\t\t// onBeforeSeek\n\t\t\t\tvar e = $.Event(\"onBeforeSeek\"); \n\t\t\t\tif (!fn) {\n\t\t\t\t\tfire.trigger(e, [i, time]);\t\t\t\t\n\t\t\t\t\tif (e.isDefaultPrevented() || !item.length) { return self; }\t\t\t\n\t\t\t\t}  \n\t\n\t\t\t\tvar props = vertical ? {top: -item.position().top} : {left: -item.position().left};  \n\t\t\t\t\n\t\t\t\tindex = i;\n\t\t\t\tcurrent = self;  \n\t\t\t\tif (time === undefined) { time = conf.speed; }   \n\t\t\t\t\n\t\t\t\titemWrap.animate(props, time, conf.easing, fn || function() { \n\t\t\t\t\tfire.trigger(\"onSeek\", [i]);\t\t\n\t\t\t\t});\t \n\t\t\t\t\n\t\t\t\treturn self; \n\t\t\t}\t\t\t\t\t\n\t\t\t\n\t\t});\n\t\t\t\t\n\t\t// callbacks\t\n\t\t$.each(['onBeforeSeek', 'onSeek', 'onAddItem'], function(i, name) {\n\t\t\t\t\n\t\t\t// configuration\n\t\t\tif ($.isFunction(conf[name])) { \n\t\t\t\t$(self).on(name, conf[name]); \n\t\t\t}\n\t\t\t\n\t\t\tself[name] = function(fn) {\n\t\t\t\tif (fn) { $(self).on(name, fn); }\n\t\t\t\treturn self;\n\t\t\t};\n\t\t});  \n\t\t\n\t\t// circular loop\n\t\tif (conf.circular) {\n\t\t\t\n\t\t\tvar cloned1 = self.getItems().slice(-1).clone().prependTo(itemWrap),\n\t\t\t\t cloned2 = self.getItems().eq(1).clone().appendTo(itemWrap);\n\n\t\t\tcloned1.add(cloned2).addClass(conf.clonedClass);\n\t\t\t\n\t\t\tself.onBeforeSeek(function(e, i, time) {\n\t\t\t\t\n\t\t\t\tif (e.isDefaultPrevented()) { return; }\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t\t1. animate to the clone without event triggering\n\t\t\t\t\t2. seek to correct position with 0 speed\n\t\t\t\t*/\n\t\t\t\tif (i == -1) {\n\t\t\t\t\tself.seekTo(cloned1, time, function()  {\n\t\t\t\t\t\tself.end(0);\t\t\n\t\t\t\t\t});          \n\t\t\t\t\treturn e.preventDefault();\n\t\t\t\t\t\n\t\t\t\t} else if (i == self.getSize()) {\n\t\t\t\t\tself.seekTo(cloned2, time, function()  {\n\t\t\t\t\t\tself.begin(0);\t\t\n\t\t\t\t\t});\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\n\t\t\t// seek over the cloned item\n\n\t\t\t// if the scrollable is hidden the calculations for seekTo position\n\t\t\t// will be incorrect (eg, if the scrollable is inside an overlay).\n\t\t\t// ensure the elements are shown, calculate the correct position,\n\t\t\t// then re-hide the elements. This must be done synchronously to\n\t\t\t// prevent the hidden elements being shown to the user.\n\n\t\t\t// See: https://github.com/jquerytools/jquerytools/issues#issue/87\n\n\t\t\tvar hidden_parents = root.parents().add(root).filter(function () {\n\t\t\t\tif ($(this).css('display') === 'none') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (hidden_parents.length) {\n\t\t\t\thidden_parents.show();\n\t\t\t\tself.seekTo(0, 0, function() {});\n\t\t\t\thidden_parents.hide();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tself.seekTo(0, 0, function() {});\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t// next/prev buttons\n\t\tvar prev = find(root, conf.prev).click(function(e) { e.stopPropagation(); self.prev(); }),\n\t\t\t next = find(root, conf.next).click(function(e) { e.stopPropagation(); self.next(); }); \n\t\t\n\t\tif (!conf.circular) {\n\t\t\tself.onBeforeSeek(function(e, i) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif (!e.isDefaultPrevented()) {\n\t\t\t\t\t\tprev.toggleClass(conf.disabledClass, i <= 0);\n\t\t\t\t\t\tnext.toggleClass(conf.disabledClass, i >= self.getSize() -1);\n\t\t\t\t\t}\n\t\t\t\t}, 1);\n\t\t\t});\n\t\t\t\n\t\t\tif (!conf.initialIndex) {\n\t\t\t\tprev.addClass(conf.disabledClass);\t\n\t\t\t}\t\t\t\n\t\t}\n\t\t\t\n\t\tif (self.getSize() < 2) {\n\t\t\tprev.add(next).addClass(conf.disabledClass);\t\n\t\t}\n\t\t\t\n\t\t// mousewheel support\n\t\tif (conf.mousewheel && $.fn.mousewheel) {\n\t\t\troot.mousewheel(function(e, delta)  {\n\t\t\t\tif (conf.mousewheel) {\n\t\t\t\t\tself.move(delta < 0 ? 1 : -1, conf.wheelSpeed || 50);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\t\t\t\n\t\t}\n\t\t\n\t\t// touch event\n\t\tif (conf.touch) {\n\t\t\tvar touch = {};\n\t\t\t\n\t\t\titemWrap[0].ontouchstart = function(e) {\n\t\t\t\tvar t = e.touches[0];\n\t\t\t\ttouch.x = t.clientX;\n\t\t\t\ttouch.y = t.clientY;\n\t\t\t};\n\t\t\t\n\t\t\titemWrap[0].ontouchmove = function(e) {\n\t\t\t\t\n\t\t\t\t// only deal with one finger\n\t\t\t\tif (e.touches.length == 1 && !itemWrap.is(\":animated\")) {\t\t\t\n\t\t\t\t\tvar t = e.touches[0],\n\t\t\t\t\t\t deltaX = touch.x - t.clientX,\n\t\t\t\t\t\t deltaY = touch.y - t.clientY;\n\t\n\t\t\t\t\tself[vertical && deltaY > 0 || !vertical && deltaX > 0 ? 'next' : 'prev']();\t\t\t\t\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (conf.keyboard)  {\n\t\t\t\n\t\t\t$(document).on(\"keydown.scrollable\", function(evt) {\n\n\t\t\t\t// skip certain conditions\n\t\t\t\tif (!conf.keyboard || evt.altKey || evt.ctrlKey || evt.metaKey || $(evt.target).is(\":input\")) { \n\t\t\t\t\treturn; \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// does this instance have focus?\n\t\t\t\tif (conf.keyboard != 'static' && current != self) { return; }\n\t\t\t\t\t\n\t\t\t\tvar key = evt.keyCode;\n\t\t\t\n\t\t\t\tif (vertical && (key == 38 || key == 40)) {\n\t\t\t\t\tself.move(key == 38 ? -1 : 1);\n\t\t\t\t\treturn evt.preventDefault();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!vertical && (key == 37 || key == 39)) {\t\t\t\t\t\n\t\t\t\t\tself.move(key == 37 ? -1 : 1);\n\t\t\t\t\treturn evt.preventDefault();\n\t\t\t\t}\t  \n\t\t\t\t\n\t\t\t});  \n\t\t}\n\t\t\n\t\t// initial index\n\t\tif (conf.initialIndex) {\n\t\t\tself.seekTo(conf.initialIndex, 0, function() {});\n\t\t}\n\t} \n\n\t\t\n\t// jQuery plugin implementation\n\t$.fn.scrollable = function(conf) { \n\t\t\t\n\t\t// already constructed --> return API\n\t\tvar el = this.data(\"scrollable\");\n\t\tif (el) { return el; }\t\t \n\n\t\tconf = $.extend({}, $.tools.scrollable.conf, conf); \n\t\t\n\t\tthis.each(function() {\t\t\t\n\t\t\tel = new Scrollable($(this), conf);\n\t\t\t$(this).data(\"scrollable\", el);\t\n\t\t});\n\t\t\n\t\treturn conf.api ? el: this; \n\t\t\n\t};\n\t\t\t\n\t\n})(jQuery);\n\n\n/**\n * @license \n * jQuery Tools @VERSION Tabs- The basics of UI design.\n * \n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n * \n * http://flowplayer.org/tools/tabs/\n *\n * Since: November 2008\n * Date: @DATE \n */  \n(function($) {\n\t\t\n\t// static constructs\n\t$.tools = $.tools || {version: '@VERSION'};\n\t\n\t$.tools.tabs = {\n\t\t\n\t\tconf: {\n\t\t\ttabs: 'a',\n\t\t\tcurrent: 'current',\n\t\t\tonBeforeClick: null,\n\t\t\tonClick: null, \n\t\t\teffect: 'default',\n\t\t\tinitialEffect: false,   // whether or not to show effect in first init of tabs\n\t\t\tinitialIndex: 0,\t\t\t\n\t\t\tevent: 'click',\n\t\t\trotate: false,\n\t\t\t\n      // slide effect\n      slideUpSpeed: 400,\n      slideDownSpeed: 400,\n\t\t\t\n\t\t\t// 1.2\n\t\t\thistory: false\n\t\t},\n\t\t\n\t\taddEffect: function(name, fn) {\n\t\t\teffects[name] = fn;\n\t\t}\n\t\t\n\t};\n\t\n\tvar effects = {\n\t\t\n\t\t// simple \"toggle\" effect\n\t\t'default': function(i, done) { \n\t\t\tthis.getPanes().hide().eq(i).show();\n\t\t\tdone.call();\n\t\t}, \n\t\t\n\t\t/*\n\t\t\tconfiguration:\n\t\t\t\t- fadeOutSpeed (positive value does \"crossfading\")\n\t\t\t\t- fadeInSpeed\n\t\t*/\n\t\tfade: function(i, done) {\t\t\n\t\t\t\n\t\t\tvar conf = this.getConf(),\n\t\t\t\t speed = conf.fadeOutSpeed,\n\t\t\t\t panes = this.getPanes();\n\t\t\t\n\t\t\tif (speed) {\n\t\t\t\tpanes.fadeOut(speed);\t\n\t\t\t} else {\n\t\t\t\tpanes.hide();\t\n\t\t\t}\n\n\t\t\tpanes.eq(i).fadeIn(conf.fadeInSpeed, done);\t\n\t\t},\n\t\t\n\t\t// for basic accordions\n\t\tslide: function(i, done) {\n\t\t  var conf = this.getConf();\n\t\t  \n\t\t\tthis.getPanes().slideUp(conf.slideUpSpeed);\n\t\t\tthis.getPanes().eq(i).slideDown(conf.slideDownSpeed, done);\t\t\t \n\t\t}, \n\n\t\t/**\n\t\t * AJAX effect\n\t\t */\n\t\tajax: function(i, done)  {\t\t\t\n\t\t\tthis.getPanes().eq(0).load(this.getTabs().eq(i).attr(\"href\"), done);\t\n\t\t}\t\t\n\t};   \t\n\t\n\t/**\n\t * Horizontal accordion\n\t * \n\t * @deprecated will be replaced with a more robust implementation\n\t*/\n\t\n\tvar\n\t  /**\n\t  *   @type {Boolean}\n\t  *\n\t  *   Mutex to control horizontal animation\n\t  *   Disables clicking of tabs while animating\n\t  *   They mess up otherwise as currentPane gets set *after* animation is done\n\t  */\n\t  animating,\n\t  /**\n\t  *   @type {Number}\n\t  *   \n\t  *   Initial width of tab panes\n\t  */\n\t  w;\n\t \n\t$.tools.tabs.addEffect(\"horizontal\", function(i, done) {\n\t  if (animating) return;    // don't allow other animations\n\t  \n\t  var nextPane = this.getPanes().eq(i),\n\t      currentPane = this.getCurrentPane();\n\t      \n\t\t// store original width of a pane into memory\n\t\tw || ( w = this.getPanes().eq(0).width() );\n\t\tanimating = true;\n\t\t\n\t\tnextPane.show(); // hidden by default\n\t\t\n\t\t// animate current pane's width to zero\n    // animate next pane's width at the same time for smooth animation\n    currentPane.animate({width: 0}, {\n      step: function(now){\n        nextPane.css(\"width\", w-now);\n      },\n      complete: function(){\n        $(this).hide();\n        done.call();\n        animating = false;\n     }\n    });\n    // Dirty hack...  onLoad, currentPant will be empty and nextPane will be the first pane\n    // If this is the case, manually run callback since the animation never occured, and reset animating\n    if (!currentPane.length){ \n      done.call(); \n      animating = false;\n    }\n\t});\t\n\n\t\n\tfunction Tabs(root, paneSelector, conf) {\n\t\t\n\t\tvar self = this,\n        trigger = root.add(this),\n        tabs = root.find(conf.tabs),\n        panes = paneSelector.jquery ? paneSelector : root.children(paneSelector),\n        current;\n\t\t\t \n\t\t\n\t\t// make sure tabs and panes are found\n\t\tif (!tabs.length)  { tabs = root.children(); }\n\t\tif (!panes.length) { panes = root.parent().find(paneSelector); }\n\t\tif (!panes.length) { panes = $(paneSelector); }\n\t\t\n\t\t\n\t\t// public methods\n\t\t$.extend(this, {\t\t\t\t\n\t\t\tclick: function(i, e) {\n\t\t\t  \n\t\t\t\tvar tab = tabs.eq(i),\n\t\t\t\t    firstRender = !root.data('tabs');\n\t\t\t\t\n\t\t\t\tif (typeof i == 'string' && i.replace(\"#\", \"\")) {\n\t\t\t\t\ttab = tabs.filter(\"[href*=\\\"\" + i.replace(\"#\", \"\") + \"\\\"]\");\n\t\t\t\t\ti = Math.max(tabs.index(tab), 0);\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tif (conf.rotate) {\n\t\t\t\t\tvar last = tabs.length -1; \n\t\t\t\t\tif (i < 0) { return self.click(last, e); }\n\t\t\t\t\tif (i > last) { return self.click(0, e); }\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!tab.length) {\n\t\t\t\t\tif (current >= 0) { return self; }\n\t\t\t\t\ti = conf.initialIndex;\n\t\t\t\t\ttab = tabs.eq(i);\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t\t// current tab is being clicked\n\t\t\t\tif (i === current) { return self; }\n\t\t\t\t\n\t\t\t\t// possibility to cancel click action\t\t\t\t\n\t\t\t\te = e || $.Event();\n\t\t\t\te.type = \"onBeforeClick\";\n\t\t\t\ttrigger.trigger(e, [i]);\t\t\t\t\n\t\t\t\tif (e.isDefaultPrevented()) { return; }\n\t\t\t\t\n        // if firstRender, only run effect if initialEffect is set, otherwise default\n\t\t\t\tvar effect = firstRender ? conf.initialEffect && conf.effect || 'default' : conf.effect;\n\n\t\t\t\t// call the effect\n\t\t\t\teffects[effect].call(self, i, function() {\n\t\t\t\t\tcurrent = i;\n\t\t\t\t\t// onClick callback\n\t\t\t\t\te.type = \"onClick\";\n\t\t\t\t\ttrigger.trigger(e, [i]);\n\t\t\t\t});\t\t\t\n\t\t\t\t\n\t\t\t\t// default behaviour\n\t\t\t\ttabs.removeClass(conf.current);\t\n\t\t\t\ttab.addClass(conf.current);\t\t\t\t\n\t\t\t\t\n\t\t\t\treturn self;\n\t\t\t},\n\t\t\t\n\t\t\tgetConf: function() {\n\t\t\t\treturn conf;\t\n\t\t\t},\n\n\t\t\tgetTabs: function() {\n\t\t\t\treturn tabs;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetPanes: function() {\n\t\t\t\treturn panes;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetCurrentPane: function() {\n\t\t\t\treturn panes.eq(current);\t\n\t\t\t},\n\t\t\t\n\t\t\tgetCurrentTab: function() {\n\t\t\t\treturn tabs.eq(current);\t\n\t\t\t},\n\t\t\t\n\t\t\tgetIndex: function() {\n\t\t\t\treturn current;\t\n\t\t\t}, \n\t\t\t\n\t\t\tnext: function() {\n\t\t\t\treturn self.click(current + 1);\n\t\t\t},\n\t\t\t\n\t\t\tprev: function() {\n\t\t\t\treturn self.click(current - 1);\t\n\t\t\t},\n\t\t\t\n\t\t\tdestroy: function() {\n\t\t\t\ttabs.off(conf.event).removeClass(conf.current);\n\t\t\t\tpanes.find(\"a[href^=\\\"#\\\"]\").off(\"click.T\"); \n\t\t\t\treturn self;\n\t\t\t}\n\t\t\n\t\t});\n\n\t\t// callbacks\t\n\t\t$.each(\"onBeforeClick,onClick\".split(\",\"), function(i, name) {\n\t\t\t\t\n\t\t\t// configuration\n\t\t\tif ($.isFunction(conf[name])) {\n\t\t\t\t$(self).on(name, conf[name]); \n\t\t\t}\n\n\t\t\t// API\n\t\t\tself[name] = function(fn) {\n\t\t\t\tif (fn) { $(self).on(name, fn); }\n\t\t\t\treturn self;\t\n\t\t\t};\n\t\t});\n\t\n\t\t\n\t\tif (conf.history && $.fn.history) {\n\t\t\t$.tools.history.init(tabs);\n\t\t\tconf.event = 'history';\n\t\t}\t\n\t\t\n\t\t// setup click actions for each tab\n\t\ttabs.each(function(i) { \t\t\t\t\n\t\t\t$(this).on(conf.event, function(e) {\n\t\t\t\tself.click(i, e);\n\t\t\t\treturn e.preventDefault();\n\t\t\t});\t\t\t\n\t\t});\n\t\t\n\t\t// cross tab anchor link\n\t\tpanes.find(\"a[href^=\\\"#\\\"]\").on(\"click.T\", function(e) {\n\t\t\tself.click($(this).attr(\"href\"), e);\t\t\n\t\t}); \n\t\t\n\t\t// open initial tab\n\t\tif (location.hash && conf.tabs == \"a\" && root.find(\"[href=\\\"\" +location.hash+ \"\\\"]\").length) {\n\t\t\tself.click(location.hash);\n\n\t\t} else {\n\t\t\tif (conf.initialIndex === 0 || conf.initialIndex > 0) {\n\t\t\t\tself.click(conf.initialIndex);\n\t\t\t}\n\t\t}\t\t\t\t\n\t\t\n\t}\n\t\n\t\n\t// jQuery plugin implementation\n\t$.fn.tabs = function(paneSelector, conf) {\n\t\t\n\t\t// return existing instance\n\t\tvar el = this.data(\"tabs\");\n\t\tif (el) { \n\t\t\tel.destroy();\t\n\t\t\tthis.removeData(\"tabs\");\n\t\t}\n\n\t\tif ($.isFunction(conf)) {\n\t\t\tconf = {onBeforeClick: conf};\n\t\t}\n\t\t\n\t\t// setup conf\n\t\tconf = $.extend({}, $.tools.tabs.conf, conf);\t\t\n\t\t\n\t\t\n\t\tthis.each(function() {\t\t\t\t\n\t\t\tel = new Tabs($(this), paneSelector, conf);\n\t\t\t$(this).data(\"tabs\", el); \n\t\t});\t\t\n\t\t\n\t\treturn conf.api ? el: this;\t\t\n\t};\t\t\n\t\t\n}) (jQuery); \n\n\n\n\n/**\n * @license \n * jQuery Tools @VERSION History \"Back button for AJAX apps\"\n * \n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n * \n * http://flowplayer.org/tools/toolbox/history.html\n * \n * Since: Mar 2010\n * Date: @DATE \n */\n(function($) {\n\t\t\n\tvar hash, iframe, links, inited;\t\t\n\t\n\t$.tools = $.tools || {version: '@VERSION'};\n\t\n\t$.tools.history = {\n\t\n\t\tinit: function(els) {\n\t\t\t\n\t\t\tif (inited) { return; }\n\t\t\t\n\t\t\t// IE\n\t\t\tif ($.browser.msie && $.browser.version < '8') {\n\t\t\t\t\n\t\t\t\t// create iframe that is constantly checked for hash changes\n\t\t\t\tif (!iframe) {\n\t\t\t\t\tiframe = $(\"<iframe/>\").attr(\"src\", \"javascript:false;\").hide().get(0);\n\t\t\t\t\t$(\"body\").append(iframe);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tsetInterval(function() {\n\t\t\t\t\t\tvar idoc = iframe.contentWindow.document, \n\t\t\t\t\t\t\t h = idoc.location.hash;\n\t\t\t\t\t\n\t\t\t\t\t\tif (hash !== h) {\t\t\t\t\t\t\n\t\t\t\t\t\t\t$(window).trigger(\"hash\", h);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 100);\n\t\t\t\t\t\n\t\t\t\t\tsetIframeLocation(location.hash || '#');\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t// other browsers scans for location.hash changes directly without iframe hack\n\t\t\t} else { \n\t\t\t\tsetInterval(function() {\n\t\t\t\t\tvar h = location.hash;\n\t\t\t\t\tif (h !== hash) {\n\t\t\t\t\t\t$(window).trigger(\"hash\", h);\n\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t}, 100);\n\t\t\t}\n\n\t\t\tlinks = !links ? els : links.add(els);\n\t\t\t\n\t\t\tels.click(function(e) {\n\t\t\t\tvar href = $(this).attr(\"href\");\n\t\t\t\tif (iframe) { setIframeLocation(href); }\n\t\t\t\t\n\t\t\t\t// handle non-anchor links\n\t\t\t\tif (href.slice(0, 1) != \"#\") {\n\t\t\t\t\tlocation.href = \"#\" + href;\n\t\t\t\t\treturn e.preventDefault();\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}); \n\t\t\t\n\t\t\tinited = true;\n\t\t}\t\n\t};  \n\t\n\n\tfunction setIframeLocation(h) {\n\t\tif (h) {\n\t\t\tvar doc = iframe.contentWindow.document;\n\t\t\tdoc.open().close();\t\n\t\t\tdoc.location.hash = h;\n\t\t}\n\t} \n\t\t \n\t// global histroy change listener\n\t$(window).on(\"hash\", function(e, h)  { \n\t\tif (h) {\n\t\t\tlinks.filter(function() {\n\t\t\t  var href = $(this).attr(\"href\");\n\t\t\t  return href == h || href == h.replace(\"#\", \"\"); \n\t\t\t}).trigger(\"history\", [h]);\t\n\t\t} else {\n\t\t\tlinks.eq(0).trigger(\"history\", [h]);\t\n\t\t}\n\n\t\thash = h;\n\n\t});\n\t\t\n\t\n\t// jQuery plugin implementation\n\t$.fn.history = function(fn) {\n\t\t\t\n\t\t$.tools.history.init(this);\n\n\t\t// return jQuery\n\t\treturn this.on(\"history\", fn);\t\t\n\t};\t\n\t\t\n})(jQuery); \n\n\n\n/**\n * @license \n * jQuery Tools @VERSION / Expose - Dim the lights\n * \n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n * \n * http://flowplayer.org/tools/toolbox/expose.html\n *\n * Since: Mar 2010\n * Date: @DATE \n */\n(function($) { \t\n\n\t// static constructs\n\t$.tools = $.tools || {version: '@VERSION'};\n\t\n\tvar tool;\n\t\n\ttool = $.tools.expose = {\n\t\t\n\t\tconf: {\t\n\t\t\tmaskId: 'exposeMask',\n\t\t\tloadSpeed: 'slow',\n\t\t\tcloseSpeed: 'fast',\n\t\t\tcloseOnClick: true,\n\t\t\tcloseOnEsc: true,\n\t\t\t\n\t\t\t// css settings\n\t\t\tzIndex: 9998,\n\t\t\topacity: 0.8,\n\t\t\tstartOpacity: 0,\n\t\t\tcolor: '#fff',\n\t\t\t\n\t\t\t// callbacks\n\t\t\tonLoad: null,\n\t\t\tonClose: null\n\t\t}\n\t};\n\n\t/* one of the greatest headaches in the tool. finally made it */\n\tfunction viewport() {\n\t\t\t\t\n\t\t// the horror case\n\t\tif (/msie/.test(navigator.userAgent.toLowerCase())) {\n\t\t\t\n\t\t\t// if there are no scrollbars then use window.height\n\t\t\tvar d = $(document).height(), w = $(window).height();\n\t\t\t\n\t\t\treturn [\n\t\t\t\twindow.innerWidth || \t\t\t\t\t\t\t// ie7+\n\t\t\t\tdocument.documentElement.clientWidth || \t// ie6  \n\t\t\t\tdocument.body.clientWidth, \t\t\t\t\t// ie6 quirks mode\n\t\t\t\td - w < 20 ? w : d\n\t\t\t];\n\t\t} \n\t\t\n\t\t// other well behaving browsers\n\t\treturn [$(document).width(), $(document).height()]; \n\t} \n\t\n\tfunction call(fn) {\n\t\tif (fn) { return fn.call($.mask); }\n\t}\n\t\n\tvar mask, exposed, loaded, config, overlayIndex;\t\t\n\t\n\t\n\t$.mask = {\n\t\t\n\t\tload: function(conf, els) {\n\t\t\t\n\t\t\t// already loaded ?\n\t\t\tif (loaded) { return this; }\t\t\t\n\t\t\t\n\t\t\t// configuration\n\t\t\tif (typeof conf == 'string') {\n\t\t\t\tconf = {color: conf};\t\n\t\t\t}\n\t\t\t\n\t\t\t// use latest config\n\t\t\tconf = conf || config;\n\t\t\t\n\t\t\tconfig = conf = $.extend($.extend({}, tool.conf), conf);\n\n\t\t\t// get the mask\n\t\t\tmask = $(\"#\" + conf.maskId);\n\t\t\t\t\n\t\t\t// or create it\n\t\t\tif (!mask.length) {\n\t\t\t\tmask = $('<div/>').attr(\"id\", conf.maskId);\n\t\t\t\t$(\"body\").append(mask);\n\t\t\t}\n\t\t\t\n\t\t\t// set position and dimensions \t\t\t\n\t\t\tvar size = viewport();\n\t\t\t\t\n\t\t\tmask.css({\t\t\t\t\n\t\t\t\tposition:'absolute', \n\t\t\t\ttop: 0, \n\t\t\t\tleft: 0,\n\t\t\t\twidth: size[0],\n\t\t\t\theight: size[1],\n\t\t\t\tdisplay: 'none',\n\t\t\t\topacity: conf.startOpacity,\t\t\t\t\t \t\t\n\t\t\t\tzIndex: conf.zIndex \n\t\t\t});\n\t\t\t\n\t\t\tif (conf.color) {\n\t\t\t\tmask.css(\"backgroundColor\", conf.color);\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\t// onBeforeLoad\n\t\t\tif (call(conf.onBeforeLoad) === false) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\t\n\t\t\t// esc button\n\t\t\tif (conf.closeOnEsc) {\t\t\t\t\t\t\n\t\t\t\t$(document).on(\"keydown.mask\", function(e) {\t\t\t\t\t\t\t\n\t\t\t\t\tif (e.keyCode == 27) {\n\t\t\t\t\t\t$.mask.close(e);\t\n\t\t\t\t\t}\t\t\n\t\t\t\t});\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// mask click closes\n\t\t\tif (conf.closeOnClick) {\n\t\t\t\tmask.on(\"click.mask\", function(e)  {\n\t\t\t\t\t$.mask.close(e);\t\t\n\t\t\t\t});\t\t\t\t\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\t// resize mask when window is resized\n\t\t\t$(window).on(\"resize.mask\", function() {\n\t\t\t\t$.mask.fit();\n\t\t\t});\n\t\t\t\n\t\t\t// exposed elements\n\t\t\tif (els && els.length) {\n\t\t\t\t\n\t\t\t\toverlayIndex = els.eq(0).css(\"zIndex\");\n\n\t\t\t\t// make sure element is positioned absolutely or relatively\n\t\t\t\t$.each(els, function() {\n\t\t\t\t\tvar el = $(this);\n\t\t\t\t\tif (!/relative|absolute|fixed/i.test(el.css(\"position\"))) {\n\t\t\t\t\t\tel.css(\"position\", \"relative\");\t\t\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t});\n\t\t\t \n\t\t\t\t// make elements sit on top of the mask\n\t\t\t\texposed = els.css({ zIndex: Math.max(conf.zIndex + 1, overlayIndex == 'auto' ? 0 : overlayIndex)});\t\t\t\n\t\t\t}\t\n\t\t\t\n\t\t\t// reveal mask\n\t\t\tmask.css({display: 'block'}).fadeTo(conf.loadSpeed, conf.opacity, function() {\n\t\t\t\t$.mask.fit(); \n\t\t\t\tcall(conf.onLoad);\n\t\t\t\tloaded = \"full\";\n\t\t\t});\n\t\t\t\n\t\t\tloaded = true;\t\t\t\n\t\t\treturn this;\t\t\t\t\n\t\t},\n\t\t\n\t\tclose: function() {\n\t\t\tif (loaded) {\n\t\t\t\t\n\t\t\t\t// onBeforeClose\n\t\t\t\tif (call(config.onBeforeClose) === false) { return this; }\n\t\t\t\t\t\n\t\t\t\tmask.fadeOut(config.closeSpeed, function()  {\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tif (exposed) {\n\t\t\t\t\t\texposed.css({zIndex: overlayIndex});\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\tloaded = false;\n\t\t\t\t\tcall(config.onClose);\n\t\t\t\t});\t\t\t\t\n\t\t\t\t\n\t\t\t\t// unbind various event listeners\n\t\t\t\t$(document).off(\"keydown.mask\");\n\t\t\t\tmask.off(\"click.mask\");\n\t\t\t\t$(window).off(\"resize.mask\");  \n\t\t\t}\n\t\t\t\n\t\t\treturn this; \n\t\t},\n\t\t\n\t\tfit: function() {\n\t\t\tif (loaded) {\n\t\t\t\tvar size = viewport();\t\t\t\t\n\t\t\t\tmask.css({width: size[0], height: size[1]});\n\t\t\t}\t\t\t\t\n\t\t},\n\t\t\n\t\tgetMask: function() {\n\t\t\treturn mask;\t\n\t\t},\n\t\t\n\t\tisLoaded: function(fully) {\n\t\t\treturn fully ? loaded == 'full' : loaded;\t\n\t\t}, \n\t\t\n\t\tgetConf: function() {\n\t\t\treturn config;\t\n\t\t},\n\t\t\n\t\tgetExposed: function() {\n\t\t\treturn exposed;\t\n\t\t}\t\t\n\t};\n\t\n\t$.fn.mask = function(conf) {\n\t\t$.mask.load(conf);\n\t\treturn this;\t\t\n\t};\t\t\t\n\t\n\t$.fn.expose = function(conf) {\n\t\t$.mask.load(conf, this);\n\t\treturn this;\t\t\t\n\t};\n\n\n})(jQuery);\n\n\n/**\n * @license \n * jQuery Tools @VERSION Tooltip - UI essentials\n * \n * NO COPYRIGHTS OR LICENSES. DO WHAT YOU LIKE.\n * \n * http://flowplayer.org/tools/tooltip/\n *\n * Since: November 2008\n * Date: @DATE \n */\n(function($) { \t\n\t// static constructs\n\t$.tools = $.tools || {version: '@VERSION'};\n\t\n\t$.tools.tooltip = {\n\t\t\n\t\tconf: { \n\t\t\t\n\t\t\t// default effect variables\n\t\t\teffect: 'toggle',\t\t\t\n\t\t\tfadeOutSpeed: \"fast\",\n\t\t\tpredelay: 0,\n\t\t\tdelay: 30,\n\t\t\topacity: 1,\t\t\t\n\t\t\ttip: 0,\n            fadeIE: false, // enables fade effect in IE\n\t\t\t\n\t\t\t// 'top', 'bottom', 'right', 'left', 'center'\n\t\t\tposition: ['top', 'center'], \n\t\t\toffset: [0, 0],\n\t\t\trelative: false,\n\t\t\tcancelDefault: true,\n\t\t\t\n\t\t\t// type to event mapping \n\t\t\tevents: {\n\t\t\t\tdef: \t\t\t\"mouseenter,mouseleave\",\n\t\t\t\tinput: \t\t\"focus,blur\",\n\t\t\t\twidget:\t\t\"focus mouseenter,blur mouseleave\",\n\t\t\t\ttooltip:\t\t\"mouseenter,mouseleave\"\n\t\t\t},\n\t\t\t\n\t\t\t// 1.2\n\t\t\tlayout: '<div/>',\n\t\t\ttipClass: 'tooltip'\n\t\t},\n\t\t\n\t\taddEffect: function(name, loadFn, hideFn) {\n\t\t\teffects[name] = [loadFn, hideFn];\t\n\t\t} \n\t};\n\t\n\t\n\tvar effects = { \n\t\ttoggle: [ \n\t\t\tfunction(done) { \n\t\t\t\tvar conf = this.getConf(), tip = this.getTip(), o = conf.opacity;\n\t\t\t\tif (o < 1) { tip.css({opacity: o}); }\n\t\t\t\ttip.show();\n\t\t\t\tdone.call();\n\t\t\t},\n\t\t\t\n\t\t\tfunction(done) { \n\t\t\t\tthis.getTip().hide();\n\t\t\t\tdone.call();\n\t\t\t} \n\t\t],\n\t\t\n\t\tfade: [\n\t\t\tfunction(done) {\n\t\t\t\tvar conf = this.getConf();\n\t\t\t\tif (!/msie/.test(navigator.userAgent.toLowerCase()) || conf.fadeIE) {\n\t\t\t\t\tthis.getTip().fadeTo(conf.fadeInSpeed, conf.opacity, done);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.getTip().show();\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction(done) {\n\t\t\t\tvar conf = this.getConf();\n\t\t\t\tif (!/msie/.test(navigator.userAgent.toLowerCase()) || conf.fadeIE) {\n\t\t\t\t\tthis.getTip().fadeOut(conf.fadeOutSpeed, done);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.getTip().hide();\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}\n\t\t]\t\t\n\t};   \n\n\t\t\n\t/* calculate tip position relative to the trigger */  \t\n\tfunction getPosition(trigger, tip, conf) {\t\n\n\t\t\n\t\t// get origin top/left position \n\t\tvar top = conf.relative ? trigger.position().top : trigger.offset().top, \n\t\t\t left = conf.relative ? trigger.position().left : trigger.offset().left,\n\t\t\t pos = conf.position[0];\n\n\t\ttop  -= tip.outerHeight() - conf.offset[0];\n\t\tleft += trigger.outerWidth() + conf.offset[1];\n\t\t\n\t\t// iPad position fix\n\t\tif (/iPad/i.test(navigator.userAgent)) {\n\t\t\ttop -= $(window).scrollTop();\n\t\t}\n\t\t\n\t\t// adjust Y\t\t\n\t\tvar height = tip.outerHeight() + trigger.outerHeight();\n\t\tif (pos == 'center') \t{ top += height / 2; }\n\t\tif (pos == 'bottom') \t{ top += height; }\n\t\t\n\t\t\n\t\t// adjust X\n\t\tpos = conf.position[1]; \t\n\t\tvar width = tip.outerWidth() + trigger.outerWidth();\n\t\tif (pos == 'center') \t{ left -= width / 2; }\n\t\tif (pos == 'left')   \t{ left -= width; }\t \n\t\t\n\t\treturn {top: top, left: left};\n\t}\t\t\n\n\t\n\t\n\tfunction Tooltip(trigger, conf) {\n\n\t\tvar self = this, \n\t\t\t fire = trigger.add(self),\n\t\t\t tip,\n\t\t\t timer = 0,\n\t\t\t pretimer = 0, \n\t\t\t title = trigger.attr(\"title\"),\n\t\t\t tipAttr = trigger.attr(\"data-tooltip\"),\n\t\t\t effect = effects[conf.effect],\n\t\t\t shown,\n\t\t\t\t \n\t\t\t // get show/hide configuration\n\t\t\t isInput = trigger.is(\":input\"), \n\t\t\t isWidget = isInput && trigger.is(\":checkbox, :radio, select, :button, :submit\"),\t\t\t\n\t\t\t type = trigger.attr(\"type\"),\n\t\t\t evt = conf.events[type] || conf.events[isInput ? (isWidget ? 'widget' : 'input') : 'def']; \n\t\t\n\t\t\n\t\t// check that configuration is sane\n\t\tif (!effect) { throw \"Nonexistent effect \\\"\" + conf.effect + \"\\\"\"; }\t\t\t\t\t\n\t\t\n\t\tevt = evt.split(/,\\s*/); \n\t\tif (evt.length != 2) { throw \"Tooltip: bad events configuration for \" + type; } \n\t\t\n\t\t\n\t\t// trigger --> show  \n\t\ttrigger.on(evt[0], function(e) {\n\n\t\t\tclearTimeout(timer);\n\t\t\tif (conf.predelay) {\n\t\t\t\tpretimer = setTimeout(function() { self.show(e); }, conf.predelay);\t\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tself.show(e);\t\n\t\t\t}\n\t\t\t\n\t\t// trigger --> hide\n\t\t}).on(evt[1], function(e)  {\n\t\t\tclearTimeout(pretimer);\n\t\t\tif (conf.delay)  {\n\t\t\t\ttimer = setTimeout(function() { self.hide(e); }, conf.delay);\t\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tself.hide(e);\t\t\n\t\t\t}\n\t\t\t\n\t\t}); \n\t\t\n\t\t\n\t\t// remove default title\n\t\tif (title && conf.cancelDefault) { \n\t\t\ttrigger.removeAttr(\"title\");\n\t\t\ttrigger.data(\"title\", title);\t\t\t\n\t\t}\t\t\n\t\t\n\t\t$.extend(self, {\n\t\t\t\t\n\t\t\tshow: function(e) {  \n\n\t\t\t\t// tip not initialized yet\n\t\t\t\tif (!tip) {\n\t\t\t\t\t\n\t\t\t\t\t// data-tooltip \n\t\t\t\t\tif (tipAttr) {\n\t\t\t\t\t\ttip = $(tipAttr);\n\n\t\t\t\t\t// single tip element for all\n\t\t\t\t\t} else if (conf.tip) { \n\t\t\t\t\t\ttip = $(conf.tip).eq(0);\n\t\t\t\t\t\t\n\t\t\t\t\t// autogenerated tooltip\n\t\t\t\t\t} else if (title) { \n\t\t\t\t\t\ttip = $(conf.layout).addClass(conf.tipClass).appendTo(document.body)\n\t\t\t\t\t\t\t.hide().append(title);\n\n\t\t\t\t\t// manual tooltip\n\t\t\t\t\t} else {\t\n\t\t\t\t\t\ttip = trigger.find('.' + conf.tipClass);\n\t\t\t\t\t\tif (!tip.length) { tip = trigger.next(); }\n\t\t\t\t\t\tif (!tip.length) { tip = trigger.parent().next(); } \t \n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!tip.length) { throw \"Cannot find tooltip for \" + trigger;\t}\n\t\t\t\t} \n\t\t\t \t\n\t\t\t \tif (self.isShown()) { return self; }  \n\t\t\t\t\n\t\t\t \t// stop previous animation\n\t\t\t \ttip.stop(true, true); \t\t\t \t\n\t\t\t \t\n\t\t\t\t// get position\n\t\t\t\tvar pos = getPosition(trigger, tip, conf);\t\t\t\n\t\t\n\t\t\t\t// restore title for single tooltip element\n\t\t\t\tif (conf.tip) {\n\t\t\t\t\ttip.html(trigger.data(\"title\"));\n\t\t\t\t}\n\n\t\t\t\t// onBeforeShow\n\t\t\t\te = $.Event();\n\t\t\t\te.type = \"onBeforeShow\";\n\t\t\t\tfire.trigger(e, [pos]);\t\t\t\t\n\t\t\t\tif (e.isDefaultPrevented()) { return self; }\n\t\t\n\t\t\t\t\n\t\t\t\t// onBeforeShow may have altered the configuration\n\t\t\t\tpos = getPosition(trigger, tip, conf);\n\t\t\t\t\n\t\t\t\t// set position\n\t\t\t\ttip.css({position:'absolute', top: pos.top, left: pos.left});\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tshown = true;\n\t\t\t\t\n\t\t\t\t// invoke effect \n\t\t\t\teffect[0].call(self, function() {\n\t\t\t\t\te.type = \"onShow\";\n\t\t\t\t\tshown = 'full';\n\t\t\t\t\tfire.trigger(e);\t\t \n\t\t\t\t});\t\t\t\t\t\n\n\t \t\n\t\t\t\t// tooltip events       \n\t\t\t\tvar event = conf.events.tooltip.split(/,\\s*/);\n\n\t\t\t\tif (!tip.data(\"__set\")) {\n\t\t\t\t\t\n\t\t\t\t\ttip.off(event[0]).on(event[0], function() { \n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tclearTimeout(pretimer);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (event[1] && !trigger.is(\"input:not(:checkbox, :radio), textarea\")) { \t\t\t\t\t\n\t\t\t\t\t\ttip.off(event[1]).on(event[1], function(e) {\n\t\n\t\t\t\t\t\t\t// being moved to the trigger element\n\t\t\t\t\t\t\tif (e.relatedTarget != trigger[0]) {\n\t\t\t\t\t\t\t\ttrigger.trigger(evt[1].split(\" \")[0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}); \n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t\t// bind agein for if same tip element\n\t\t\t\t\tif (!conf.tip) tip.data(\"__set\", true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn self;\n\t\t\t},\n\t\t\t\n\t\t\thide: function(e) {\n\n\t\t\t\tif (!tip || !self.isShown()) { return self; }\n\t\t\t\n\t\t\t\t// onBeforeHide\n\t\t\t\te = $.Event();\n\t\t\t\te.type = \"onBeforeHide\";\n\t\t\t\tfire.trigger(e);\t\t\t\t\n\t\t\t\tif (e.isDefaultPrevented()) { return; }\n\t\n\t\t\t\tshown = false;\n\t\t\t\t\n\t\t\t\teffects[conf.effect][1].call(self, function() {\n\t\t\t\t\te.type = \"onHide\";\n\t\t\t\t\tfire.trigger(e);\t\t \n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn self;\n\t\t\t},\n\t\t\t\n\t\t\tisShown: function(fully) {\n\t\t\t\treturn fully ? shown == 'full' : shown;\t\n\t\t\t},\n\t\t\t\t\n\t\t\tgetConf: function() {\n\t\t\t\treturn conf;\t\n\t\t\t},\n\t\t\t\t\n\t\t\tgetTip: function() {\n\t\t\t\treturn tip;\t\n\t\t\t},\n\t\t\t\n\t\t\tgetTrigger: function() {\n\t\t\t\treturn trigger;\t\n\t\t\t}\t\t\n\n\t\t});\t\t\n\n\t\t// callbacks\t\n\t\t$.each(\"onHide,onBeforeShow,onShow,onBeforeHide\".split(\",\"), function(i, name) {\n\t\t\t\t\n\t\t\t// configuration\n\t\t\tif ($.isFunction(conf[name])) { \n\t\t\t\t$(self).on(name, conf[name]); \n\t\t\t}\n\n\t\t\t// API\n\t\t\tself[name] = function(fn) {\n\t\t\t\tif (fn) { $(self).on(name, fn); }\n\t\t\t\treturn self;\n\t\t\t};\n\t\t});\n\t\t\n\t}\n\t\t\n\t\n\t// jQuery plugin implementation\n\t$.fn.tooltip = function(conf) {\n\t\t\n\t\t// return existing instance\n\t\tvar api = this.data(\"tooltip\");\n\t\tif (api) { return api; }\n\n\t\tconf = $.extend(true, {}, $.tools.tooltip.conf, conf);\n\t\t\n\t\t// position can also be given as string\n\t\tif (typeof conf.position == 'string') {\n\t\t\tconf.position = conf.position.split(/,?\\s/);\t\n\t\t}\n\t\t\n\t\t// install tooltip for each entry in jQuery object\n\t\tthis.each(function() {\n\t\t\tapi = new Tooltip($(this), conf); \n\t\t\t$(this).data(\"tooltip\", api); \n\t\t});\n\t\t\n\t\treturn conf.api ? api: this;\t\t \n\t};\n\t\t\n}) (jQuery);\n\n\t\t\n\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = $.tabs;\n\n\n//# sourceURL=webpack:///./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.overlay.js?");

/***/ }),

/***/ "./.plone/++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput.js":
/*!***************************************************************************************************!*\
  !*** ./.plone/++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar jQuery = __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\");\nvar tmpl = __webpack_require__(/*! jquery.tmpl */ \"./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tmpl.js\");\nvar _overlay = __webpack_require__(/*! resource-plone-app-jquerytools-js */ \"./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.overlay.js\");\nvar _dateinput = __webpack_require__(/*! resource-plone-app-jquerytools-dateinput-js */ \"./.plone/++plone++static/components/jquery.recurrenceinput.js/lib/jquery.tools.dateinput.js\");\n\n/*jslint regexp: false, continue: true, indent: 4 */\n/*global $, alert, jQuery */\n\"use strict\";\n\n(function ($) {\n    $.tools = $.tools || {version: '@VERSION'};\n\n    var tool;\n    var LABELS = {};\n\n    tool = $.tools.recurrenceinput = {\n        conf: {\n            lang: 'en',\n            readOnly: false,\n            firstDay: 0,\n\n            // \"REMOTE\" FIELD\n            startField: null,\n            startFieldYear: null,\n            startFieldMonth: null,\n            startFieldDay: null,\n            ajaxURL: null,\n            ajaxContentType: 'application/json; charset=utf8',\n            ributtonExtraClass: '',\n\n            // INPUT CONFIGURATION\n            hasRepeatForeverButton: true,\n\n            // FORM OVERLAY\n            formOverlay: {\n                speed: 'fast',\n                fixed: false\n            },\n\n            // JQUERY TEMPLATE NAMES\n            template: {\n                form: '#jquery-recurrenceinput-form-tmpl',\n                display: '#jquery-recurrenceinput-display-tmpl'\n            },\n\n            // RECURRENCE TEMPLATES\n            rtemplate: {\n                daily: {\n                    rrule: 'FREQ=DAILY',\n                    fields: [\n                        'ridailyinterval',\n                        'rirangeoptions'\n                    ]\n                },\n                mondayfriday: {\n                    rrule: 'FREQ=WEEKLY;BYDAY=MO,FR',\n                    fields: [\n                        'rirangeoptions'\n                    ]\n                },\n                weekdays: {\n                    rrule: 'FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR',\n                    fields: [\n                        'rirangeoptions'\n                    ]\n                },\n                weekly: {\n                    rrule: 'FREQ=WEEKLY',\n                    fields: [\n                        'riweeklyinterval',\n                        'riweeklyweekdays',\n                        'rirangeoptions'\n                    ]\n                },\n                monthly: {\n                    rrule: 'FREQ=MONTHLY',\n                    fields: [\n                        'rimonthlyinterval',\n                        'rimonthlyoptions',\n                        'rirangeoptions'\n                    ]\n                },\n                yearly: {\n                    rrule: 'FREQ=YEARLY',\n                    fields: [\n                        'riyearlyinterval',\n                        'riyearlyoptions',\n                        'rirangeoptions'\n                    ]\n                }\n            }\n        },\n\n        localize: function (language, labels) {\n            LABELS[language] = labels;\n        },\n\n        setTemplates: function (templates, titles) {\n            var lang, template;\n            tool.conf.rtemplate = templates;\n            for (lang in titles) {\n                if (titles.hasOwnProperty(lang)) {\n                    for (template in titles[lang]) {\n                        if (titles[lang].hasOwnProperty(template)) {\n                            LABELS[lang].rtemplate[template] = titles[lang][template];\n                        }\n                    }\n                }\n            }\n        }\n\n    };\n\n    tool.localize(\"en\", {\n        displayUnactivate: 'Does not repeat',\n        displayActivate: 'Repeats every',\n        add_rules: 'Add',\n        edit_rules: 'Edit',\n        delete_rules: 'Delete',\n        add:  'Add',\n        refresh: 'Refresh',\n\n        title: 'Repeat',\n        preview: 'Selected dates',\n        addDate: 'Add date',\n\n        recurrenceType: 'Repeats:',\n\n        dailyInterval1: 'Repeat every:',\n        dailyInterval2: 'days',\n\n        weeklyInterval1: 'Repeat every:',\n        weeklyInterval2: 'week(s)',\n        weeklyWeekdays: 'Repeat on:',\n        weeklyWeekdaysHuman: 'on:',\n\n        monthlyInterval1: 'Repeat every:',\n        monthlyInterval2: 'month(s)',\n        monthlyDayOfMonth1: 'Day',\n        monthlyDayOfMonth1Human: 'on day',\n        monthlyDayOfMonth2: 'of the month',\n        monthlyDayOfMonth3: 'month(s)',\n        monthlyWeekdayOfMonth1: 'The',\n        monthlyWeekdayOfMonth1Human: 'on the',\n        monthlyWeekdayOfMonth2: '',\n        monthlyWeekdayOfMonth3: 'of the month',\n        monthlyRepeatOn: 'Repeat on:',\n\n        yearlyInterval1: 'Repeat every:',\n        yearlyInterval2: 'year(s)',\n        yearlyDayOfMonth1: 'Every',\n        yearlyDayOfMonth1Human: 'on',\n        yearlyDayOfMonth2: '',\n        yearlyDayOfMonth3: '',\n        yearlyWeekdayOfMonth1: 'The',\n        yearlyWeekdayOfMonth1Human: 'on the',\n        yearlyWeekdayOfMonth2: '',\n        yearlyWeekdayOfMonth3: 'of',\n        yearlyWeekdayOfMonth4: '',\n        yearlyRepeatOn: 'Repeat on:',\n\n        range: 'End recurrence:',\n        rangeNoEnd: 'Never',\n        rangeByOccurrences1: 'After',\n        rangeByOccurrences1Human: 'ends after',\n        rangeByOccurrences2: 'occurrence(s)',\n        rangeByEndDate: 'On',\n        rangeByEndDateHuman: 'ends on',\n\n        including: ', and also',\n        except: ', except for',\n\n        cancel: 'Cancel',\n        save: 'Save',\n\n        recurrenceStart: 'Start of the recurrence',\n        additionalDate: 'Additional date',\n        include: 'Include',\n        exclude: 'Exclude',\n        remove: 'Remove',\n\n        orderIndexes: ['first', 'second', 'third', 'fourth', 'last'],\n        months: [\n            'January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        shortMonths: [\n            'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        weekdays: [\n            'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday',\n            'Friday', 'Saturday'],\n        shortWeekdays: [\n            'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n\n        longDateFormat: 'mmmm dd, yyyy',\n        shortDateFormat: 'mm/dd/yyyy',\n\n        unsupportedFeatures: 'Warning: This event uses recurrence features not ' +\n                              'supported by this widget. Saving the recurrence ' +\n                              'may change the recurrence in unintended ways:',\n        noTemplateMatch: 'No matching recurrence template',\n        multipleDayOfMonth: 'This widget does not support multiple days in monthly or yearly recurrence',\n        bysetpos: 'BYSETPOS is not supported',\n        noRule: 'No RRULE in RRULE data',\n        noRepeatEvery: 'Error: The \"Repeat every\"-field must be between 1 and 1000',\n        noEndDate: 'Error: End date is not set. Please set a correct value',\n        noRepeatOn: 'Error: \"Repeat on\"-value must be selected',\n        pastEndDate: 'Error: End date cannot be before start date',\n        noEndAfterNOccurrences: 'Error: The \"After N occurrences\"-field must be between 1 and 1000',\n        alreadyAdded: 'This date was already added',\n\n        rtemplate: {\n            daily: 'Daily',\n            mondayfriday: 'Monday and Friday',\n            weekdays: 'Weekday',\n            weekly: 'Weekly',\n            monthly: 'Monthly',\n            yearly: 'Yearly'\n        }\n    });\n\n\n    var OCCURRENCETMPL = ['<div class=\"rioccurrences\">',\n        '{{each occurrences}}',\n            '<div class=\"occurrence ${occurrences[$index].type}\">',\n                '<span>',\n                    '${occurrences[$index].formattedDate}',\n                    '{{if occurrences[$index].type === \"start\"}}',\n                        '<span class=\"rlabel\">${i18n.recurrenceStart}</span>',\n                    '{{/if}}',\n                    '{{if occurrences[$index].type === \"rdate\"}}',\n                        '<span class=\"rlabel\">${i18n.additionalDate}</span>',\n                    '{{/if}}',\n                '</span>',\n                '{{if !readOnly}}',\n                    '<span class=\"action\">',\n                        '{{if occurrences[$index].type === \"rrule\"}}',\n                            '<a date=\"${occurrences[$index].date}\" href=\"#\"',\n                               'class=\"${occurrences[$index].type}\" title=\"${i18n.exclude}\">',\n                                '${i18n.exclude}',\n                            '</a>',\n                        '{{/if}}',\n                        '{{if occurrences[$index].type === \"rdate\"}}',\n                            '<a date=\"${occurrences[$index].date}\" href=\"#\"',\n                               'class=\"${occurrences[$index].type}\" title=\"${i18n.remove}\" >',\n                                '${i18n.remove}',\n                            '</a>',\n                        '{{/if}}',\n                        '{{if occurrences[$index].type === \"exdate\"}}',\n                            '<a date=\"${occurrences[$index].date}\" href=\"#\"',\n                               'class=\"${occurrences[$index].type}\" title=\"${i18n.include}\">',\n                                '${i18n.include}',\n                            '</a>',\n                        '{{/if}}',\n                    '</span>',\n                '{{/if}}',\n            '</div>',\n        '{{/each}}',\n        '<div class=\"batching\">',\n            '{{each batch.batches}}',\n                '{{if $index === batch.currentBatch}}<span class=\"current\">{{/if}}',\n                    '<a href=\"#\" start=\"${batch.batches[$index][0]}\">[${batch.batches[$index][0]} - ${batch.batches[$index][1]}]</a>',\n                '{{if $index === batch.currentBatch}}</span>{{/if}}',\n            '{{/each}}',\n        '</div></div>'].join('\\n');\n\n    $.template('occurrenceTmpl', OCCURRENCETMPL);\n\n    var DISPLAYTMPL = ['<div class=\"ridisplay\">',\n        '<div class=\"rimain\">',\n            '{{if !readOnly}}',\n                '<button name=\"riedit\">${i18n.add_rules}</button>',\n                '<button name=\"ridelete\" style=\"display:none\">${i18n.delete_rules}</button>',\n            '{{/if}}',\n            '<label class=\"ridisplay\">${i18n.displayUnactivate}</label>',\n        '</div>',\n        '<div class=\"rioccurrences\" style=\"display:none\" /></div>'].join('\\n');\n\n    $.template('displayTmpl', DISPLAYTMPL);\n\n    var FORMTMPL = ['<div class=\"riform\">',\n            '<form>',\n                '<h1>${i18n.title}</h1>',\n                '<div id=\"messagearea\" style=\"display: none;\">',\n                '</div>',\n                '<div id=\"rirtemplate\">',\n                    '<label for=\"${name}rtemplate\" class=\"label\">',\n                        '${i18n.recurrenceType}',\n                    '</label>',\n                    '<select id=\"rirtemplate\" name=\"rirtemplate\" class=\"field\">',\n                        '{{each rtemplate}}',\n                            '<option value=\"${$index}\">${i18n.rtemplate[$index]}</value>',\n                        '{{/each}}',\n                    '</select>',\n                '<div>',\n                '<div id=\"riformfields\">',\n                    '<div id=\"ridailyinterval\" class=\"rifield\">',\n                        '<label for=\"${name}dailyinterval\" class=\"label\">',\n                            '${i18n.dailyInterval1}',\n                        '</label>',\n                        '<div class=\"field\">',\n                            '<input type=\"text\" size=\"2\"',\n                                'value=\"1\"',\n                                'name=\"ridailyinterval\"',\n                                'id=\"${name}dailyinterval\" />',\n                            '${i18n.dailyInterval2}',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"riweeklyinterval\" class=\"rifield\">',\n                        '<label for=\"${name}weeklyinterval\" class=\"label\">',\n                            '${i18n.weeklyInterval1}',\n                        '</label>',\n                        '<div class=\"field\">',\n                            '<input type=\"text\" size=\"2\"',\n                                'value=\"1\"',\n                                'name=\"riweeklyinterval\"',\n                                'id=\"${name}weeklyinterval\"/>',\n                            '${i18n.weeklyInterval2}',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"riweeklyweekdays\" class=\"rifield\">',\n                        '<label for=\"${name}weeklyinterval\" class=\"label\">${i18n.weeklyWeekdays}</label>',\n                        '<div class=\"field\">',\n                            '{{each orderedWeekdays}}',\n                                '<div class=\"riweeklyweekday\">',\n                                    '<input type=\"checkbox\"',\n                                        'name=\"riweeklyweekdays${weekdays[$value]}\"',\n                                        'id=\"${name}weeklyWeekdays${weekdays[$value]}\"',\n                                        'value=\"${weekdays[$value]}\" />',\n                                    '<label for=\"${name}weeklyWeekdays${weekdays[$value]}\">${i18n.shortWeekdays[$value]}</label>',\n                                '</div>',\n                            '{{/each}}',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"rimonthlyinterval\" class=\"rifield\">',\n                        '<label for=\"rimonthlyinterval\" class=\"label\">${i18n.monthlyInterval1}</label>',\n                        '<div class=\"field\">',\n                            '<input type=\"text\" size=\"2\"',\n                                'value=\"1\" ',\n                                'name=\"rimonthlyinterval\"/>',\n                            '${i18n.monthlyInterval2}',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"rimonthlyoptions\" class=\"rifield\">',\n                        '<label for=\"rimonthlytype\" class=\"label\">${i18n.monthlyRepeatOn}</label>',\n                        '<div class=\"field\">',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'value=\"DAYOFMONTH\"',\n                                    'name=\"rimonthlytype\"',\n                                    'id=\"${name}monthlytype:DAYOFMONTH\" />',\n                                '<label for=\"${name}monthlytype:DAYOFMONTH\">',\n                                    '${i18n.monthlyDayOfMonth1}',\n                                '</label>',\n                                '<select name=\"rimonthlydayofmonthday\"',\n                                    'id=\"${name}monthlydayofmonthday\">',\n                                '{{each [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,',\n                                        '18,19,20,21,22,23,24,25,26,27,28,29,30,31]}}',\n                                    '<option value=\"${$value}\">${$value}</option>',\n                                '{{/each}}',\n                                '</select>',\n                                '${i18n.monthlyDayOfMonth2}',\n                            '</div>',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'value=\"WEEKDAYOFMONTH\"',\n                                    'name=\"rimonthlytype\"',\n                                    'id=\"${name}monthlytype:WEEKDAYOFMONTH\" />',\n                                '<label for=\"${name}monthlytype:WEEKDAYOFMONTH\">',\n                                    '${i18n.monthlyWeekdayOfMonth1}',\n                                '</label>',\n                                '<select name=\"rimonthlyweekdayofmonthindex\">',\n                                    '{{each i18n.orderIndexes}}',\n                                        '<option value=\"${orderIndexes[$index]}\">${$value}</option>',\n                                    '{{/each}}',\n                                '</select>',\n                                '${i18n.monthlyWeekdayOfMonth2}',\n                                '<select name=\"rimonthlyweekdayofmonth\">',\n                                    '{{each orderedWeekdays}}',\n                                        '<option value=\"${weekdays[$value]}\">${i18n.weekdays[$value]}</option>',\n                                    '{{/each}}',\n                                '</select>',\n                                '${i18n.monthlyWeekdayOfMonth3}',\n                            '</div>',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"riyearlyinterval\" class=\"rifield\">',\n                        '<label for=\"riyearlyinterval\" class=\"label\">${i18n.yearlyInterval1}</label>',\n                        '<div class=\"field\">',\n                            '<input type=\"text\" size=\"2\"',\n                                'value=\"1\" ',\n                                'name=\"riyearlyinterval\"/>',\n                            '${i18n.yearlyInterval2}',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"riyearlyoptions\" class=\"rifield\">',\n                        '<label for=\"riyearlyType\" class=\"label\">${i18n.yearlyRepeatOn}</label>',\n                        '<div class=\"field\">',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'value=\"DAYOFMONTH\"',\n                                    'name=\"riyearlyType\"',\n                                    'id=\"${name}yearlytype:DAYOFMONTH\" />',\n                                '<label for=\"${name}yearlytype:DAYOFMONTH\">',\n                                    '${i18n.yearlyDayOfMonth1}',\n                                '</label>',\n                                '<select name=\"riyearlydayofmonthmonth\">',\n                                '{{each i18n.months}}',\n                                    '<option value=\"${$index+1}\">${$value}</option>',\n                                '{{/each}}',\n                                '</select>',\n                                '${i18n.yearlyDayOfMonth2}',\n                                '<select name=\"riyearlydayofmonthday\">',\n                                '{{each [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,',\n                                        '18,19,20,21,22,23,24,25,26,27,28,29,30,31]}}',\n                                    '<option value=\"${$value}\">${$value}</option>',\n                                '{{/each}}',\n                                '</select>',\n                                '${i18n.yearlyDayOfMonth3}',\n                            '</div>',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'value=\"WEEKDAYOFMONTH\"',\n                                    'name=\"riyearlyType\"',\n                                    'id=\"${name}yearlytype:WEEKDAYOFMONTH\"/>',\n                                '<label for=\"${name}yearlytype:WEEKDAYOFMONTH\">',\n                                    '${i18n.yearlyWeekdayOfMonth1}',\n                                '</label>',\n                                '<select name=\"riyearlyweekdayofmonthindex\">',\n                                '{{each i18n.orderIndexes}}',\n                                    '<option value=\"${orderIndexes[$index]}\">${$value}</option>',\n                                '{{/each}}',\n                                '</select>',\n                                '<label for=\"${name}yearlytype:WEEKDAYOFMONTH\">',\n                                    '${i18n.yearlyWeekdayOfMonth2}',\n                                '</label>',\n                                '<select name=\"riyearlyweekdayofmonthday\">',\n                                '{{each orderedWeekdays}}',\n                                    '<option value=\"${weekdays[$value]}\">${i18n.weekdays[$value]}</option>',\n                                '{{/each}}',\n                                '</select>',\n                                '${i18n.yearlyWeekdayOfMonth3}',\n                                '<select name=\"riyearlyweekdayofmonthmonth\">',\n                                '{{each i18n.months}}',\n                                    '<option value=\"${$index+1}\">${$value}</option>',\n                                '{{/each}}',\n                                '</select>',\n                                '${i18n.yearlyWeekdayOfMonth4}',\n                            '</div>',\n                        '</div>',\n                    '</div>',\n                    '<div id=\"rirangeoptions\" class=\"rifield\">',\n                        '<label class=\"label\">${i18n.range}</label>',\n                        '<div class=\"field\">',\n                          '{{if hasRepeatForeverButton}}',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'value=\"NOENDDATE\"',\n                                    'name=\"rirangetype\"',\n                                    'id=\"${name}rangetype:NOENDDATE\"/>',\n                                '<label for=\"${name}rangetype:NOENDDATE\">',\n                                    '${i18n.rangeNoEnd}',\n                                '</label>',\n                            '</div>',\n                          '{{/if}}',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'checked=\"checked\"',\n                                    'value=\"BYOCCURRENCES\"',\n                                    'name=\"rirangetype\"',\n                                    'id=\"${name}rangetype:BYOCCURRENCES\"/>',\n                                '<label for=\"${name}rangetype:BYOCCURRENCES\">',\n                                    '${i18n.rangeByOccurrences1}',\n                                '</label>',\n                                '<input',\n                                    'type=\"text\" size=\"3\"',\n                                    'value=\"7\"',\n                                    'name=\"rirangebyoccurrencesvalue\" />',\n                                '${i18n.rangeByOccurrences2}',\n                            '</div>',\n                            '<div>',\n                                '<input',\n                                    'type=\"radio\"',\n                                    'value=\"BYENDDATE\"',\n                                    'name=\"rirangetype\"',\n                                    'id=\"${name}rangetype:BYENDDATE\"/>',\n                                '<label for=\"${name}rangetype:BYENDDATE\">',\n                                    '${i18n.rangeByEndDate}',\n                                '</label>',\n                                '<input',\n                                    'type=\"date\"',\n                                    'name=\"rirangebyenddatecalendar\" />',\n                            '</div>',\n                        '</div>',\n                    '</div>',\n                '</div>',\n                '<div class=\"rioccurrencesactions\">',\n                    '<div class=\"rioccurancesheader\">',\n                        '<h2>${i18n.preview}</h2>',\n                        '<span class=\"refreshbutton action\">',\n                            '<a class=\"rirefreshbutton\" href=\"#\" title=\"${i18n.refresh}\">',\n                                '${i18n.refresh}',\n                            '</a>',\n                        '</span>',\n                    '</div>',\n                '</div>',\n                '<div class=\"rioccurrences\">',\n                '</div>',\n                '<div class=\"rioccurrencesactions\">',\n                    '<div class=\"rioccurancesheader\">',\n                        '<h2>${i18n.addDate}</h2>',\n                    '</div>',\n                    '<div class=\"riaddoccurrence\">',\n                        '<div class=\"errorarea\"></div>',\n                        '<input type=\"date\" name=\"adddate\" id=\"adddate\" />',\n                        '<input type=\"button\" name=\"addaction\" id=\"addaction\" value=\"${i18n.add}\">',\n                    '</div>',\n                '</div>',\n\n                '<div class=\"ributtons\">',\n                    '<input',\n                        'type=\"submit\"',\n                        'class=\"ricancelbutton ${ributtonExtraClass}\"',\n                        'value=\"${i18n.cancel}\" />',\n                    '<input',\n                        'type=\"submit\"',\n                        'class=\"risavebutton ${ributtonExtraClass}\"',\n                        'value=\"${i18n.save}\" />',\n                '</div>',\n            '</form></div>'].join('\\n');\n\n    $.template('formTmpl', FORMTMPL);\n\n    // Formatting function (mostly) from jQueryTools dateinput\n    var Re = /d{1,4}|m{1,4}|yy(?:yy)?|\"[^\"]*\"|'[^']*'/g;\n\n    function zeropad(val, len) {\n        val = val.toString();\n        len = len || 2;\n        while (val.length < len) { val = \"0\" + val; }\n        return val;\n    }\n\n    function format(date, fmt, conf) {\n        var d = date.getDate(),\n            D = date.getDay(),\n            m = date.getMonth(),\n            y = date.getFullYear(),\n\n            flags = {\n                d:    d,\n                dd:   zeropad(d),\n                ddd:  conf.i18n.shortWeekdays[D],\n                dddd: conf.i18n.weekdays[D],\n                m:    m + 1,\n                mm:   zeropad(m + 1),\n                mmm:  conf.i18n.shortMonths[m],\n                mmmm: conf.i18n.months[m],\n                yy:   String(y).slice(2),\n                yyyy: y\n            };\n\n        var result = fmt.replace(Re, function ($0) {\n            return flags.hasOwnProperty($0) ? flags[$0] : $0.slice(1, $0.length - 1);\n        });\n\n        return result;\n\n    }\n\n    /**\n     * Parsing RFC5545 from widget\n     */\n    function widgetSaveToRfc5545(form, conf, tz) {\n        var value = form.find('select[name=rirtemplate]').val();\n        var rtemplate = conf.rtemplate[value];\n        var result = rtemplate.rrule;\n        var human = conf.i18n.rtemplate[value];\n        var field, input, weekdays, i18nweekdays, i, j, index, tmp;\n        var day, month, year, interval, yearlyType, occurrences, date;\n\n        for (i = 0; i < rtemplate.fields.length; i++) {\n            field = form.find('#' + rtemplate.fields[i]);\n\n            switch (field.attr('id')) {\n\n            case 'ridailyinterval':\n                interval = field.find('input[name=ridailyinterval]').val();\n                if (interval !== '1') {\n                    result += ';INTERVAL=' + interval;\n                }\n                human = interval + ' ' + conf.i18n.dailyInterval2;\n                break;\n\n            case 'riweeklyinterval':\n                interval = field.find('input[name=riweeklyinterval]').val();\n                if (interval !== '1') {\n                    result += ';INTERVAL=' + interval;\n                }\n                human = interval + ' ' + conf.i18n.weeklyInterval2;\n                break;\n\n            case 'riweeklyweekdays':\n                weekdays = '';\n                i18nweekdays = '';\n                for (j = 0; j < conf.weekdays.length; j++) {\n                    input = field.find('input[name=riweeklyweekdays' + conf.weekdays[j] + ']');\n                    if (input.is(':checked')) {\n                        if (weekdays) {\n                            weekdays += ',';\n                            i18nweekdays += ', ';\n                        }\n                        weekdays += conf.weekdays[j];\n                        i18nweekdays += conf.i18n.weekdays[j];\n                    }\n                }\n                if (weekdays) {\n                    result += ';BYDAY=' + weekdays;\n                    human += ' ' + conf.i18n.weeklyWeekdaysHuman + ' ' + i18nweekdays;\n                }\n                break;\n\n            case 'rimonthlyinterval':\n                interval = field.find('input[name=rimonthlyinterval]').val();\n                if (interval !== '1') {\n                    result += ';INTERVAL=' + interval;\n                }\n                human = interval + ' ' + conf.i18n.monthlyInterval2;\n                break;\n\n            case 'rimonthlyoptions':\n                var monthlyType = $('input[name=rimonthlytype]:checked', form).val();\n                switch (monthlyType) {\n\n                case 'DAYOFMONTH':\n                    day = $('select[name=rimonthlydayofmonthday]', form).val();\n                    result += ';BYMONTHDAY=' + day;\n                    human += ', ' + conf.i18n.monthlyDayOfMonth1Human + ' ' + day + ' ' + conf.i18n.monthlyDayOfMonth2;\n                    break;\n                case 'WEEKDAYOFMONTH':\n                    index = $('select[name=rimonthlyweekdayofmonthindex]', form).val();\n                    day = $('select[name=rimonthlyweekdayofmonth]', form).val();\n                    if ($.inArray(day, ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU']) > -1) {\n                        result += ';BYDAY=' + index + day;\n                        human += ', ' + conf.i18n.monthlyWeekdayOfMonth1Human + ' ';\n                        human += ' ' + conf.i18n.orderIndexes[$.inArray(index, conf.orderIndexes)];\n                        human += ' ' + conf.i18n.monthlyWeekdayOfMonth2;\n                        human += ' ' + conf.i18n.weekdays[$.inArray(day, conf.weekdays)];\n                        human += ' ' + conf.i18n.monthlyDayOfMonth2;\n                    }\n                    break;\n                }\n                break;\n\n            case 'riyearlyinterval':\n                interval = field.find('input[name=riyearlyinterval]').val();\n                if (interval !== '1') {\n                    result += ';INTERVAL=' + interval;\n                }\n                human = interval + ' ' + conf.i18n.yearlyInterval2;\n                break;\n\n            case 'riyearlyoptions':\n                yearlyType = $('input[name=riyearlyType]:checked', form).val();\n                switch (yearlyType) {\n\n                case 'DAYOFMONTH':\n                    month = $('select[name=riyearlydayofmonthmonth]', form).val();\n                    day = $('select[name=riyearlydayofmonthday]', form).val();\n                    result += ';BYMONTH=' + month;\n                    result += ';BYMONTHDAY=' + day;\n                    human += ', ' + conf.i18n.yearlyDayOfMonth1Human + ' ' + conf.i18n.months[month - 1] + ' ' + day;\n                    break;\n                case 'WEEKDAYOFMONTH':\n                    index = $('select[name=riyearlyweekdayofmonthindex]', form).val();\n                    day = $('select[name=riyearlyweekdayofmonthday]', form).val();\n                    month = $('select[name=riyearlyweekdayofmonthmonth]', form).val();\n                    result += ';BYMONTH=' + month;\n                    if ($.inArray(day, ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU']) > -1) {\n                        result += ';BYDAY=' + index + day;\n                        human += ', ' + conf.i18n.yearlyWeekdayOfMonth1Human;\n                        human += ' ' + conf.i18n.orderIndexes[$.inArray(index, conf.orderIndexes)];\n                        human += ' ' + conf.i18n.yearlyWeekdayOfMonth2;\n                        human += ' ' + conf.i18n.weekdays[$.inArray(day, conf.weekdays)];\n                        human += ' ' + conf.i18n.yearlyWeekdayOfMonth3;\n                        human += ' ' + conf.i18n.months[month - 1];\n                        human += ' ' + conf.i18n.yearlyWeekdayOfMonth4;\n                    }\n                    break;\n                }\n                break;\n\n            case 'rirangeoptions':\n                var rangeType = form.find('input[name=rirangetype]:checked').val();\n                switch (rangeType) {\n\n                case 'BYOCCURRENCES':\n                    occurrences = form.find('input[name=rirangebyoccurrencesvalue]').val();\n                    result += ';COUNT=' + occurrences;\n                    human += ', ' + conf.i18n.rangeByOccurrences1Human;\n                    human += ' ' + occurrences;\n                    human += ' ' + conf.i18n.rangeByOccurrences2;\n                    break;\n                case 'BYENDDATE':\n                    field = form.find('input[name=rirangebyenddatecalendar]');\n                    date = field.data('dateinput').getValue('yyyymmdd');\n                    result += ';UNTIL=' + date + 'T000000';\n                    if (tz === true) {\n                        // Make it UTC:\n                        result += 'Z';\n                    }\n                    human += ', ' + conf.i18n.rangeByEndDateHuman;\n                    human += ' ' + field.data('dateinput').getValue(conf.i18n.longDateFormat);\n                    break;\n                }\n                break;\n            }\n        }\n\n        if (form.ical.RDATE !== undefined && form.ical.RDATE.length > 0) {\n            form.ical.RDATE.sort();\n            tmp = [];\n            for (i = 0; i < form.ical.RDATE.length; i++) {\n                if (form.ical.RDATE[i] !== '') {\n                    year = parseInt(form.ical.RDATE[i].substring(0, 4), 10);\n                    month = parseInt(form.ical.RDATE[i].substring(4, 6), 10) - 1;\n                    day = parseInt(form.ical.RDATE[i].substring(6, 8), 10);\n                    tmp.push(format(new Date(year, month, day), conf.i18n.longDateFormat, conf));\n                }\n            }\n            if (tmp.length !== 0) {\n                human = human + conf.i18n.including + ' ' + tmp.join('; ');\n            }\n        }\n\n        if (form.ical.EXDATE !== undefined && form.ical.EXDATE.length > 0) {\n            form.ical.EXDATE.sort();\n            tmp = [];\n            for (i = 0; i < form.ical.EXDATE.length; i++) {\n                if (form.ical.EXDATE[i] !== '') {\n                    year = parseInt(form.ical.EXDATE[i].substring(0, 4), 10);\n                    month = parseInt(form.ical.EXDATE[i].substring(4, 6), 10) - 1;\n                    day = parseInt(form.ical.EXDATE[i].substring(6, 8), 10);\n                    tmp.push(format(new Date(year, month, day), conf.i18n.longDateFormat, conf));\n                }\n            }\n            if (tmp.length !== 0) {\n                human = human + conf.i18n.except + ' ' + tmp.join('; ');\n            }\n        }\n        result = 'RRULE:' + result;\n        if (form.ical.EXDATE !== undefined && form.ical.EXDATE.join() !== \"\") {\n            tmp = $.map(form.ical.EXDATE, function (x) {\n                if (x.length === 8) { // DATE format. Make it DATE-TIME\n                    x += 'T000000';\n                }\n                if (tz === true) {\n                    // Make it UTC:\n                    x += 'Z';\n                }\n                return x;\n            });\n            result = result + '\\nEXDATE:' + tmp;\n        }\n        if (form.ical.RDATE !== undefined && form.ical.RDATE.join() !== \"\") {\n            tmp = $.map(form.ical.RDATE, function (x) {\n                if (x.length === 8) { // DATE format. Make it DATE-TIME\n                    x += 'T000000';\n                }\n                if (tz === true) {\n                    // Make it UTC:\n                    x += 'Z';\n                }\n                return x;\n            });\n            result = result + '\\nRDATE:' + tmp;\n        }\n        return {result: result, description: human};\n    }\n\n    function parseLine(icalline) {\n        var result = {};\n        var pos = icalline.indexOf(':');\n        var property = icalline.substring(0, pos);\n        result.value = icalline.substring(pos + 1);\n\n        if (property.indexOf(';') !== -1) {\n            pos = property.indexOf(';');\n            result.parameters = property.substring(pos + 1);\n            result.property = property.substring(0, pos);\n        } else {\n            result.parameters = null;\n            result.property = property;\n        }\n        return result;\n    }\n\n    function cleanDates(dates) {\n        // Get rid of timezones\n        // TODO: We could parse dates and range here, maybe?\n        var result = [];\n        var splitDates = dates.split(',');\n        var date;\n\n        for (date in splitDates) {\n            if (splitDates.hasOwnProperty(date)) {\n                if (splitDates[date].indexOf('Z') !== -1) {\n                    result.push(splitDates[date].substring(0, 15));\n                } else {\n                    result.push(splitDates[date]);\n                }\n            }\n        }\n        return result;\n    }\n\n    function parseIcal(icaldata) {\n        var lines = [];\n        var result = {};\n        var propAndValue = [];\n        var line = null;\n        var nextline;\n\n        lines = icaldata.split('\\n');\n        lines.reverse();\n        while (true) {\n            if (lines.length > 0) {\n                nextline = lines.pop();\n                if (nextline.charAt(0) === ' ' || nextline.charAt(0) === '\\t') {\n                    // Line continuation:\n                    line = line + nextline;\n                    continue;\n                }\n            } else {\n                nextline = '';\n            }\n\n            // New line; the current one is finished, add it to the result.\n            if (line !== null) {\n                line = parseLine(line);\n                 // We ignore properties for now\n                if (line.property === 'RDATE' || line.property === 'EXDATE') {\n                    result[line.property] = cleanDates(line.value);\n                } else {\n                    result[line.property] = line.value;\n                }\n            }\n\n            line = nextline;\n            if (line === '') {\n                break;\n            }\n        }\n        return result;\n    }\n\n    function widgetLoadFromRfc5545(form, conf, icaldata, force) {\n        var unsupportedFeatures = [];\n        var i, matches, match, matchIndex, rtemplate, d, input, index;\n        var selector, selectors, field, radiobutton, start, end;\n        var interval, byday, bymonth, bymonthday, count, until;\n        var day, month, year, weekday, ical;\n\n        form.ical = parseIcal(icaldata);\n        if (form.ical.RRULE === undefined) {\n            unsupportedFeatures.push(conf.i18n.noRule);\n            if (!force) {\n                return -1; // Fail!\n            }\n        } else {\n\n\n            matches = /INTERVAL=([0-9]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                interval = matches[1];\n            } else {\n                interval = '1';\n            }\n\n            matches = /BYDAY=([^;]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                byday = matches[1];\n            } else {\n                byday = '';\n            }\n\n            matches = /BYMONTHDAY=([^;]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                bymonthday = matches[1].split(\",\");\n            } else {\n                bymonthday = null;\n            }\n\n            matches = /BYMONTH=([^;]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                bymonth = matches[1].split(\",\");\n            } else {\n                bymonth = null;\n            }\n\n            matches = /COUNT=([0-9]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                count = matches[1];\n            } else {\n                count = null;\n            }\n\n            matches = /UNTIL=([0-9T]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                until = matches[1];\n            } else {\n                until = null;\n            }\n\n            matches = /BYSETPOS=([^;]+);?/.exec(form.ical.RRULE);\n            if (matches) {\n                unsupportedFeatures.push(conf.i18n.bysetpos);\n            }\n\n            // Find the best rule:\n            match = '';\n            matchIndex = null;\n            for (i in conf.rtemplate) {\n                if (conf.rtemplate.hasOwnProperty(i)) {\n                    rtemplate = conf.rtemplate[i];\n                    if (form.ical.RRULE.indexOf(rtemplate.rrule) === 0) {\n                        if (form.ical.RRULE.length > match.length) {\n                            // This is the best match so far\n                            match = form.ical.RRULE;\n                            matchIndex = i;\n                        }\n                    }\n                }\n            }\n\n            if (match) {\n                rtemplate = conf.rtemplate[matchIndex];\n                // Set the selector:\n                selector = form.find('select[name=rirtemplate]').val(matchIndex);\n            } else {\n                for (rtemplate in conf.rtemplate) {\n                    if (conf.rtemplate.hasOwnProperty(rtemplate)) {\n                        rtemplate = conf.rtemplate[rtemplate];\n                        break;\n                    }\n                }\n                unsupportedFeatures.push(conf.i18n.noTemplateMatch);\n            }\n\n            for (i = 0; i < rtemplate.fields.length; i++) {\n                field = form.find('#' + rtemplate.fields[i]);\n                switch (field.attr('id')) {\n\n                case 'ridailyinterval':\n                    field.find('input[name=ridailyinterval]').val(interval);\n                    break;\n\n                case 'riweeklyinterval':\n                    field.find('input[name=riweeklyinterval]').val(interval);\n                    break;\n\n                case 'riweeklyweekdays':\n                    byday = byday.split(\",\");\n                    for (d = 0; d < conf.weekdays.length; d++) {\n                        day = conf.weekdays[d];\n                        input = field.find('input[name=riweeklyweekdays' + day + ']');\n                        input.attr('checked', $.inArray(day, byday) !== -1);\n                    }\n                    break;\n\n                case 'rimonthlyinterval':\n                    field.find('input[name=rimonthlyinterval]').val(interval);\n                    break;\n\n                case 'rimonthlyoptions':\n                    var monthlyType = 'DAYOFMONTH'; // Default to using BYMONTHDAY\n\n                    if (bymonthday) {\n                        monthlyType = 'DAYOFMONTH';\n                        if (bymonthday.length > 1) {\n                            // No support for multiple days in one month\n                            unsupportedFeatures.push(conf.i18n.multipleDayOfMonth);\n                            // Just keep the first\n                            bymonthday = bymonthday[0];\n                        }\n                        field.find('select[name=rimonthlydayofmonthday]').val(bymonthday);\n                    }\n\n                    if (byday) {\n                        monthlyType = 'WEEKDAYOFMONTH';\n\n                        if (byday.indexOf(',') !== -1) {\n                            // No support for multiple days in one month\n                            unsupportedFeatures.push(conf.i18n.multipleDayOfMonth);\n                            byday = byday.split(\",\")[0];\n                        }\n                        index = byday.slice(0, -2);\n                        if (index.charAt(0) !== '+' && index.charAt(0) !== '-') {\n                            index = '+' + index;\n                        }\n                        weekday = byday.slice(-2);\n                        field.find('select[name=rimonthlyweekdayofmonthindex]').val(index);\n                        field.find('select[name=rimonthlyweekdayofmonth]').val(weekday);\n                    }\n\n                    selectors = field.find('input[name=rimonthlytype]');\n                    for (index = 0; index < selectors.length; index++) {\n                        radiobutton = selectors[index];\n                        $(radiobutton).attr('checked', radiobutton.value === monthlyType);\n                    }\n                    break;\n\n                case 'riyearlyinterval':\n                    field.find('input[name=riyearlyinterval]').val(interval);\n                    break;\n\n                case 'riyearlyoptions':\n                    var yearlyType = 'DAYOFMONTH'; // Default to using BYMONTHDAY\n\n                    if (bymonthday) {\n                        yearlyType = 'DAYOFMONTH';\n                        if (bymonthday.length > 1) {\n                            // No support for multiple days in one month\n                            unsupportedFeatures.push(conf.i18n.multipleDayOfMonth);\n                            bymonthday = bymonthday[0];\n                        }\n                        field.find('select[name=riyearlydayofmonthmonth]').val(bymonth);\n                        field.find('select[name=riyearlydayofmonthday]').val(bymonthday);\n                    }\n\n                    if (byday) {\n                        yearlyType = 'WEEKDAYOFMONTH';\n\n                        if (byday.indexOf(',') !== -1) {\n                            // No support for multiple days in one month\n                            unsupportedFeatures.push(conf.i18n.multipleDayOfMonth);\n                            byday = byday.split(\",\")[0];\n                        }\n                        index = byday.slice(0, -2);\n                        if (index.charAt(0) !== '+' && index.charAt(0) !== '-') {\n                            index = '+' + index;\n                        }\n                        weekday = byday.slice(-2);\n                        field.find('select[name=riyearlyweekdayofmonthindex]').val(index);\n                        field.find('select[name=riyearlyweekdayofmonthday]').val(weekday);\n                        field.find('select[name=riyearlyweekdayofmonthmonth]').val(bymonth);\n                    }\n\n                    selectors = field.find('input[name=riyearlyType]');\n                    for (index = 0; index < selectors.length; index++) {\n                        radiobutton = selectors[index];\n                        $(radiobutton).attr('checked', radiobutton.value === yearlyType);\n                    }\n                    break;\n\n                case 'rirangeoptions':\n                    var rangeType = 'NOENDDATE';\n\n                    if (count) {\n                        rangeType = 'BYOCCURRENCES';\n                        field.find('input[name=rirangebyoccurrencesvalue]').val(count);\n                    }\n\n                    if (until) {\n                        rangeType = 'BYENDDATE';\n                        input = field.find('input[name=rirangebyenddatecalendar]');\n                        year = until.slice(0, 4);\n                        month = until.slice(4, 6);\n                        month = parseInt(month, 10) - 1;\n                        day = until.slice(6, 8);\n                        input.data('dateinput').setValue(new Date(year, month, day));\n                    }\n\n                    selectors = field.find('input[name=rirangetype]');\n                    for (index = 0; index <  selectors.length; index++) {\n                        radiobutton = selectors[index];\n                        $(radiobutton).attr('checked', radiobutton.value === rangeType);\n                    }\n                    break;\n                }\n            }\n        }\n\n        var messagearea = form.find('#messagearea');\n        if (unsupportedFeatures.length !== 0) {\n            messagearea.text(conf.i18n.unsupportedFeatures + ' ' + unsupportedFeatures.join('; '));\n            messagearea.show();\n            return 1;\n        } else {\n            messagearea.text('');\n            messagearea.hide();\n            return 0;\n        }\n\n    }\n\n    /**\n     * RecurrenceInput - form, display and tools for recurrenceinput widget\n     */\n    function RecurrenceInput(conf, textarea) {\n\n        var self = this;\n        var form, display;\n\n        // Extend conf with non-configurable data used by templates.\n        var orderedWeekdays = [];\n        var index, i;\n        for (i = 0; i < 7; i++) {\n            index = i + conf.firstDay;\n            if (index > 6) {\n                index = index - 7;\n            }\n            orderedWeekdays.push(index);\n        }\n\n        $.extend(conf, {\n            orderIndexes: ['+1', '+2', '+3', '+4', '-1'],\n            weekdays: ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'],\n            orderedWeekdays: orderedWeekdays\n        });\n\n        // The recurrence type dropdown should show certain fields depending\n        // on selection:\n        function displayFields(selector) {\n            var i;\n            // First hide all the fields\n            form.find('.rifield').hide();\n            // Then show the ones that should be shown.\n            var value = selector.val();\n            if (value) {\n                var rtemplate = conf.rtemplate[value];\n                for (i = 0; i < rtemplate.fields.length; i++) {\n                    form.find('#' + rtemplate.fields[i]).show();\n                }\n            }\n        }\n\n        function occurrenceExclude(event) {\n            event.preventDefault();\n            if (form.ical.EXDATE === undefined) {\n                form.ical.EXDATE = [];\n            }\n            form.ical.EXDATE.push(this.attributes.date.value);\n            var $this = $(this);\n            $this.attr('class', 'exdate');\n            $this.parent().parent().addClass('exdate');\n            $this.unbind(event);\n            $this.click(occurrenceInclude); // Jslint warns here, but that's OK.\n        }\n\n        function occurrenceInclude(event) {\n            event.preventDefault();\n            form.ical.EXDATE.splice($.inArray(this.attributes.date.value, form.ical.EXDATE), 1);\n            var $this = $(this);\n            $this.attr('class', 'rrule');\n            $this.parent().parent().removeClass('exdate');\n            $this.unbind(event);\n            $this.click(occurrenceExclude);\n        }\n\n        function occurrenceDelete(event) {\n            event.preventDefault();\n            form.ical.RDATE.splice($.inArray(this.attributes.date.value, form.ical.RDATE), 1);\n            $(this).parent().parent().hide('slow', function () {\n                $(this).remove();\n            });\n        }\n\n        function occurrenceAdd(event) {\n            event.preventDefault();\n            var dateinput = form\n                .find('.riaddoccurrence input#adddate')\n                .data('dateinput');\n            var datevalue = dateinput.getValue('yyyymmddT000000');\n            if (form.ical.RDATE === undefined) {\n                form.ical.RDATE = [];\n            }\n            var errorarea = form.find('.riaddoccurrence div.errorarea');\n            errorarea.text('');\n            errorarea.hide();\n\n            // Add date only if it is not already in RDATE\n            if ($.inArray(datevalue, form.ical.RDATE) === -1) {\n                form.ical.RDATE.push(datevalue);\n                var html = ['<div class=\"occurrence rdate\" style=\"display: none;\">',\n                        '<span class=\"rdate\">',\n                            dateinput.getValue(conf.i18n.longDateFormat),\n                            '<span class=\"rlabel\">' + conf.i18n.additionalDate + '</span>',\n                        '</span>',\n                        '<span class=\"action\">',\n                            '<a date=\"' + datevalue + '\" href=\"#\" class=\"rdate\" >',\n                                'Include',\n                            '</a>',\n                        '</span>',\n                        '</div>'].join('\\n');\n                form.find('div.rioccurrences').prepend(html);\n                $(form.find('div.rioccurrences div')[0]).slideDown();\n                $(form.find('div.rioccurrences .action a.rdate')[0]).click(occurrenceDelete);\n            } else {\n                errorarea.text(conf.i18n.alreadyAdded).show();\n            }\n        }\n\n        // element is where to find the tag in question. Can be the form\n        // or the display widget. Defaults to the form.\n        function loadOccurrences(startdate, rfc5545, start, readonly) {\n            var element, occurrenceDiv;\n\n            if (!readonly) {\n                element = form;\n            } else {\n                element = display;\n            }\n\n            occurrenceDiv = element.find('.rioccurrences');\n            occurrenceDiv.hide();\n\n            var year, month, day;\n            year = startdate.getFullYear();\n            month = startdate.getMonth() + 1;\n            day = startdate.getDate();\n\n            var data = {year: year,\n                       month: month, // Sending January as 0? I think not.\n                       day: day,\n                       rrule: rfc5545,\n                       format: conf.i18n.longDateFormat,\n                       start: start};\n\n            var dict = {\n                url: conf.ajaxURL,\n                async: false, // Can't be tested if it's asynchronous, annoyingly.\n                type: 'post',\n                dataType: 'json',\n                contentType: conf.ajaxContentType,\n                cache: false,\n                data: data,\n                success: function (data, status, jqXHR) {\n                    var result, element;\n\n                    if (!readonly) {\n                        element = form;\n                    } else {\n                        element = display;\n                    }\n                    data.readOnly = readonly;\n                    data.i18n = conf.i18n;\n\n                    // Format dates:\n                    var occurrence, date, y, m, d, each;\n                    for (each in data.occurrences) {\n                        if (data.occurrences.hasOwnProperty(each)) {\n                            occurrence = data.occurrences[each];\n                            date = occurrence.date;\n                            y = parseInt(date.substring(0, 4), 10);\n                            m = parseInt(date.substring(4, 6), 10) - 1; // jan=0\n                            d = parseInt(date.substring(6, 8), 10);\n                            occurrence.formattedDate = format(new Date(y, m, d), conf.i18n.longDateFormat, conf);\n                        }\n                    }\n\n                    result = $.tmpl('occurrenceTmpl', data);\n                    occurrenceDiv = element.find('.rioccurrences');\n                    occurrenceDiv.replaceWith(result);\n\n                    // Add the batch actions:\n                    element.find('.rioccurrences .batching a').click(\n                        function (event) {\n                            event.preventDefault();\n                            loadOccurrences(startdate, rfc5545, this.attributes.start.value, readonly);\n                        }\n                    );\n\n                    // Add the delete/undelete actions:\n                    if (!readonly) {\n                        element.find('.rioccurrences .action a.rrule').click(occurrenceExclude);\n                        element.find('.rioccurrences .action a.exdate').click(occurrenceInclude);\n                        element.find('.rioccurrences .action a.rdate').click(occurrenceDelete);\n                    }\n                    // Show the new div\n                    element.find('.rioccurrences').show();\n                },\n                error: function (jqXHR, textStatus, errorThrown) {\n                    alert(textStatus);\n                }\n            };\n\n            $.ajax(dict);\n        }\n\n        function getField(field) {\n            // See if it is a field already\n            var realField = $(field);\n            if (!realField.length) {\n                // Otherwise, we assume it's an id:\n                realField = $('#' + field);\n            }\n            if (!realField.length) {\n                // Still not? Then it's a name.\n                realField = $(\"input[name='\" + field + \"']\");\n            }\n            return realField;\n        }\n        function findStartDate() {\n            var startdate = null;\n            var startField, startFieldYear, startFieldMonth, startFieldDay;\n\n            // Find the default byday and bymonthday from the start date, if any:\n            if (conf.startField) {\n                startField = getField(conf.startField);\n                if (!startField.length) {\n                    // Field not found\n                    return null;\n                }\n                // Now we have a field, see if it is a dateinput field:\n                startdate = startField.data('dateinput');\n                if (!startdate) {\n                    //No, it wasn't, just try to interpret it with Date()\n                    startdate = startField.val();\n                    if (startdate === \"\") {\n                        // Probably not an input at all. Try to see if it contains a date\n                        startdate = startField.text();\n                    }\n                } else {\n                    // Yes it was, get the date:\n                    startdate = startdate.getValue();\n                }\n\n                if (typeof startdate === 'string') {\n                    // convert human readable, non ISO8601 dates, like\n                    // '2014-04-24 19:00', where the 'T' separator is missing.\n                    startdate = startdate.replace(' ', 'T');\n                }\n\n                startdate = new Date(startdate);\n            } else if (conf.startFieldYear &&\n                       conf.startFieldMonth &&\n                       conf.startFieldDay) {\n                startFieldYear = getField(conf.startFieldYear);\n                startFieldMonth = getField(conf.startFieldMonth);\n                startFieldDay = getField(conf.startFieldDay);\n                if (!startFieldYear.length &&\n                    !startFieldMonth.length &&\n                    !startFieldDay.length) {\n                    // Field not found\n                    return null;\n                }\n                startdate = new Date(startFieldYear.val(),\n                                     startFieldMonth.val() - 1,\n                                     startFieldDay.val());\n            }\n            if (startdate === null) {\n                return null;\n            }\n            // We have some sort of startdate:\n            if (isNaN(startdate)) {\n                return null;\n            }\n            return startdate;\n        }\n        function findEndDate(form) {\n            var endField, enddate;\n\n            endField = form.find('input[name=rirangebyenddatecalendar]');\n\n            // Now we have a field, see if it is a dateinput field:\n            enddate = endField.data('dateinput');\n            if (!enddate) {\n                //No, it wasn't, just try to interpret it with Date()\n                enddate = endField.val();\n            } else {\n                // Yes it was, get the date:\n                enddate = enddate.getValue();\n            }\n            enddate = new Date(enddate);\n\n            // if the end date is incorrect or the field is left empty\n            if (isNaN(enddate) || endField.val() === \"\") {\n                return null;\n            }\n            return enddate;\n        }\n        function findIntField(fieldName, form) {\n            var field, num, isInt;\n\n            field = form.find('input[name=' + fieldName + ']');\n\n            num = field.val();\n\n            // if it's not a number or the field is left empty\n            if (isNaN(num) || (num.toString().indexOf('.') !== -1) || field.val() === \"\") {\n                return null;\n            }\n            return num;\n        }\n\n        // Loading (populating) display and form widget with\n        // passed RFC5545 string (data)\n        function loadData(rfc5545) {\n            var selector, format, startdate, dayindex, day;\n\n            if (rfc5545) {\n                widgetLoadFromRfc5545(form, conf, rfc5545, true);\n            }\n\n            startdate = findStartDate();\n\n            if (startdate !== null) {\n                // If the date is a real date, set the defaults in the form\n                form.find('select[name=rimonthlydayofmonthday]').val(startdate.getDate());\n                dayindex = conf.orderIndexes[Math.floor((startdate.getDate() - 1) / 7)];\n                day = conf.weekdays[startdate.getDay()];\n                form.find('select[name=rimonthlyweekdayofmonthindex]').val(dayindex);\n                form.find('select[name=rimonthlyweekdayofmonth]').val(day);\n\n                form.find('select[name=riyearlydayofmonthmonth]').val(startdate.getMonth() + 1);\n                form.find('select[name=riyearlydayofmonthday]').val(startdate.getDate());\n                form.find('select[name=riyearlyweekdayofmonthindex]').val(dayindex);\n                form.find('select[name=riyearlyweekdayofmonthday]').val(day);\n                form.find('select[name=riyearlyweekdayofmonthmonth]').val(startdate.getMonth() + 1);\n\n                // Now when we have a start date, we can also do an ajax call to calculate occurrences:\n                loadOccurrences(startdate, widgetSaveToRfc5545(form, conf, false).result, 0, false);\n\n                // Show the add and refresh buttons:\n                form.find('div.rioccurrencesactions').show();\n\n            } else {\n                // No EXDATE/RDATE support\n                form.find('div.rioccurrencesactions').hide();\n            }\n\n\n            selector = form.find('select[name=rirtemplate]');\n            displayFields(selector);\n        }\n\n        function recurrenceOn() {\n            var RFC5545 = widgetSaveToRfc5545(form, conf, false);\n            var label = display.find('label[class=ridisplay]');\n            label.text(conf.i18n.displayActivate + ' ' + RFC5545.description);\n            textarea.val(RFC5545.result).change();\n            var startdate = findStartDate();\n            if (startdate !== null) {\n                loadOccurrences(startdate, widgetSaveToRfc5545(form, conf, false).result, 0, true);\n            }\n            display.find('button[name=\"riedit\"]').text(conf.i18n.edit_rules);\n            display.find('button[name=\"ridelete\"]').show();\n        }\n\n        function recurrenceOff() {\n            var label = display.find('label[class=ridisplay]');\n            label.text(conf.i18n.displayUnactivate);\n            textarea.val('').change();  // Clear the textarea.\n            display.find('.rioccurrences').hide();\n            display.find('button[name=\"riedit\"]').text(conf.i18n.add_rules);\n            display.find('button[name=\"ridelete\"]').hide();\n        }\n\n        function checkFields(form) {\n            var startDate, endDate, num, messagearea;\n            startDate = findStartDate();\n\n            // Hide any error message from before\n            messagearea = form.find('#messagearea');\n            messagearea.text('');\n            messagearea.hide();\n\n            // Hide add field errors\n            form.find('.riaddoccurrence div.errorarea').text('').hide();\n\n            // Repeats Daily\n            if (form.find('#ridailyinterval').css('display') === 'block') {\n                // Check repeat every field\n                num = findIntField('ridailyinterval', form);\n                if (!num || num < 1 || num > 1000) {\n                    messagearea.text(conf.i18n.noRepeatEvery).show();\n                    return false;\n                }\n            }\n\n            // Repeats Weekly\n            if (form.find('#riweeklyinterval').css('display') === 'block') {\n                // Check repeat every field\n                num = findIntField('riweeklyinterval', form);\n                if (!num || num < 1 || num > 1000) {\n                    messagearea.text(conf.i18n.noRepeatEvery).show();\n                    return false;\n                }\n            }\n\n            // Repeats Monthly\n            if (form.find('#rimonthlyinterval').css('display') === 'block') {\n                // Check repeat every field\n                num = findIntField('rimonthlyinterval', form);\n                if (!num || num < 1 || num > 1000) {\n                    messagearea.text(conf.i18n.noRepeatEvery).show();\n                    return false;\n                }\n\n                // Check repeat on\n                if (form.find('#rimonthlyoptions input:checked').length === 0) {\n                    messagearea.text(conf.i18n.noRepeatOn).show();\n                    return false;\n                }\n            }\n\n            // Repeats Yearly\n            if (form.find('#riyearlyinterval').css('display') === 'block') {\n                // Check repeat every field\n                num = findIntField('riyearlyinterval', form);\n                if (!num || num < 1 || num > 1000) {\n                    messagearea.text(conf.i18n.noRepeatEvery).show();\n                    return false;\n                }\n\n                // Check repeat on\n                if (form.find('#riyearlyoptions input:checked').length === 0) {\n                    messagearea.text(conf.i18n.noRepeatOn).show();\n                    return false;\n                }\n            }\n\n            // End recurrence fields\n\n            // If after N occurences is selected, check its value\n            if (form.find('input[value=\"BYOCCURRENCES\"]:visible:checked').length > 0) {\n                num = findIntField('rirangebyoccurrencesvalue', form);\n                if (!num || num < 1 || num > 1000) {\n                    messagearea.text(conf.i18n.noEndAfterNOccurrences).show();\n                    return false;\n                }\n            }\n\n            // If end date is selected, check its value\n            if (form.find('input[value=\"BYENDDATE\"]:visible:checked').length > 0) {\n                endDate = findEndDate(form);\n                if (!endDate) {\n                    // if endDate is null that means the field is empty\n                    messagearea.text(conf.i18n.noEndDate).show();\n                    return false;\n                } else if (endDate < startDate) {\n                    // the end date cannot be before start date\n                    messagearea.text(conf.i18n.pastEndDate).show();\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        function save(event) {\n            event.preventDefault();\n            // if no field errors, process the request\n            if (checkFields(form)) {\n                // close overlay\n                form.overlay().close();\n                recurrenceOn();\n            }\n        }\n\n        function cancel(event) {\n            event.preventDefault();\n            // close overlay\n            form.overlay().close();\n        }\n\n        function updateOccurances() {\n            var startDate;\n            startDate = findStartDate();\n\n            // if no field errors, process the request\n            if (checkFields(form)) {\n                loadOccurrences(startDate,\n                    widgetSaveToRfc5545(form, conf, false).result,\n                    0,\n                    false);\n            }\n        }\n\n        /*\n          Load the templates\n        */\n\n        display = $.tmpl('displayTmpl', conf);\n        form = $.tmpl('formTmpl', conf);\n\n        // Make an overlay and hide it\n        form.overlay(conf.formOverlay).hide();\n        form.ical = {RDATE: [], EXDATE: []};\n\n        $.tools.dateinput.localize(conf.lang,  {\n            months:      LABELS[conf.lang].months.join(),\n            shortMonths: LABELS[conf.lang].shortMonths.join(),\n            days:        LABELS[conf.lang].weekdays.join(),\n            shortDays:   LABELS[conf.lang].shortWeekdays.join()\n        });\n\n        // Make the date input into a calendar dateinput()\n        form.find('input[name=rirangebyenddatecalendar]').dateinput({\n            selectors: true,\n            lang: conf.lang,\n            format: conf.i18n.shortDateFormat,\n            firstDay: conf.firstDay,\n            yearRange: [-5, 10]\n        }).data('dateinput').setValue(new Date());\n\n        if (textarea.val()) {\n            var result = widgetLoadFromRfc5545(form, conf, textarea.val(), false);\n            if (result === -1) {\n                var label = display.find('label[class=ridisplay]');\n                label.text(conf.i18n.noRule);\n            } else {\n                recurrenceOn();\n            }\n        }\n\n        /*\n          Do all the GUI stuff:\n        */\n\n        // When you click \"Delete...\", the recurrence rules should be cleared.\n        display.find('button[name=ridelete]').click(function (e) {\n            e.preventDefault();\n            recurrenceOff();\n        });\n\n        // Show form overlay when you click on the \"Edit...\" link\n        display.find('button[name=riedit]').click(\n            function (e) {\n                // Load the form to set up the right fields to show, etc.\n                loadData(textarea.val());\n                e.preventDefault();\n                form.overlay().load();\n            }\n        );\n\n        // Pop up the little add form when clicking \"Add\"\n        form.find('div.riaddoccurrence input#adddate').dateinput({\n            selectors: true,\n            lang: conf.lang,\n            format: conf.i18n.shortDateFormat,\n            firstDay: conf.firstDay,\n            yearRange: [-5, 10]\n        }).data('dateinput').setValue(new Date());\n        form.find('input#addaction').click(occurrenceAdd);\n\n        // When the reload button is clicked, reload\n        form.find('a.rirefreshbutton').click(\n            function (event) {\n                event.preventDefault();\n                updateOccurances();\n            }\n        );\n\n        // When selecting template, update what fieldsets are visible.\n        form.find('select[name=rirtemplate]').change(\n            function (e) {\n                displayFields($(this));\n            }\n        );\n\n        // When focus goes to a drop-down, select the relevant radiobutton.\n        form.find('select').change(\n            function (e) {\n                $(this).parent().find('> input').click().change();\n            }\n        );\n        form.find('input[name=rirangebyoccurrencesvalue]').change(\n            function (e) {\n                $(this).parent().find('input[name=rirangetype]').click().change();\n            }\n        );\n        form.find('input[name=rirangebyenddatecalendar]').change(function () {\n            // Update only if the occurances are shown\n            $(this).parent().find('input[name=rirangetype]').click();\n            if (form.find('.rioccurrencesactions:visible').length !== 0) {\n                updateOccurances();\n            }\n        });\n        // Update the selected dates section\n        form.find('input:radio, .riweeklyweekday > input, input[name=ridailyinterval], input[name=riweeklyinterval], input[name=rimonthlyinterval], input[name=riyearlyinterval]').change(\n            function (e) {\n                // Update only if the occurances are shown\n                if (form.find('.rioccurrencesactions:visible').length !== 0) {\n                    updateOccurances();\n                }\n            }\n        );\n\n        /*\n          Save and cancel methods:\n        */\n        form.find('.ricancelbutton').click(cancel);\n        form.find('.risavebutton').click(save);\n\n        /*\n         * Public API of RecurrenceInput\n         */\n\n        $.extend(self, {\n            display: display,\n            form: form,\n            loadData: loadData, //Used by tests.\n            save: save //Used by tests.\n        });\n\n    }\n\n\n    /*\n     * jQuery plugin implementation\n     */\n    $.fn.recurrenceinput = function (conf) {\n        if (this.data('recurrenceinput')) {\n            // plugin already installed\n            return this.data('recurrenceinput');\n        }\n\n        // \"compile\" configuration for widget\n        var config = $.extend({}, tool.conf);\n        $.extend(config, conf);\n        $.extend(config, {i18n: LABELS[config.lang], name: this.attr('name')});\n\n        // our recurrenceinput widget instance\n        var recurrenceinput = new RecurrenceInput(config, this);\n        // hide textarea and place display widget after textarea\n        recurrenceinput.form.appendTo('body');\n        this.after(recurrenceinput.display);\n\n        // hide the textarea\n        this.hide();\n\n        // save the data for next call\n        this.data('recurrenceinput', recurrenceinput);\n        return recurrenceinput;\n    };\n\n}(jQuery));\n\n\n\n//# sourceURL=webpack:///./.plone/++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/inlinevalidation/pattern.js":
/*!***************************************************************!*\
  !*** ./.plone/++resource++mockup/inlinevalidation/pattern.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* Inline Validation pattern.\n *\n * Options:\n *    type(string): The type of form generating library. Either z3c.form, formlib or archetypes\n *\n * Documentation:\n *\n *    # z3c.form\n *\n *    {{ example-1 }}\n *\n * Example: example-1\n *    <div class=\"pat-inlinevalidation\" data-pat-upload='{\"type\": \"z3c.form\"}'>\n *      <input id=\"form-widgets-IDublinCore-title\"\n *             name=\"form.widgets.IDublinCore.title\"\n *             class=\"text-widget required textline-field\"\n *             value=\"Welcome to Plone\" type=\"text\">\n *    </div>\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! pat-base */ \"./.plone/++plone++static/components/patternslib/src/core/base.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, Base) {\n  'use strict';\n\n  var InlineValidation = Base.extend({\n    name: 'inlinevalidation',\n    trigger: '.pat-inlinevalidation',\n    parser: 'mockup',\n\n    render_error: function ($field, errmsg) {\n       var $errbox = $('div.fieldErrorBox', $field);\n       if (errmsg !== '') {\n           $field.addClass('error');\n           $errbox.html(errmsg);\n       } else {\n           $field.removeClass('error');\n           $errbox.html('');\n       }\n    },\n\n    append_url_path: function (url, extra) {\n        // Add '/extra' on to the end of the URL, respecting querystring\n        var i, ret, urlParts = url.split(/\\?/);\n        ret = urlParts[0];\n        if (ret[ret.length - 1] !== '/') { ret += '/'; }\n        ret += extra;\n        for (i = 1; i < urlParts.length; i+=1) {\n            ret += '?' + urlParts[i];\n        }\n        return ret;\n    },\n\n    queue: function (queueName, callback) {\n        if (typeof callback === 'undefined') {\n          callback = queueName;\n          queueName = 'fx';  // 'fx' autoexecutes by default\n        }\n        $(window).queue(queueName, callback);\n    },\n\n    validate_archetypes_field: function (input) {\n        var $input = $(input),\n            $field = $input.closest('.field'),\n            uid = $field.attr('data-uid'),\n            fname = $field.attr('data-fieldname'),\n            value = $input.val();\n\n        // value is null for empty multiSelection select, turn it into a [] instead\n        // so it does not break at_validate_field\n        if ($input.prop('multiple') && value === null) {\n            value = $([]).serialize();\n        }\n\n        // if value is an Array, it will be send as value[]=value1&value[]=value2 by $.post\n        // turn it into something that will be useable or value will be omitted from the request\n        var traditional;\n        var params = $.param({uid: uid, fname: fname, value: value}, traditional = true);\n        if ($field && uid && fname) {\n            this.queue($.proxy(function(next) {\n                $.ajax({\n                    type: 'POST',\n                    url: $('base').attr('href') + '/at_validate_field?' + params,\n                    iframe: false,\n                    success: $.proxy(function (data) {\n                      this.render_error($field, data.errmsg);\n                      next();\n                    }, this),\n                    error: function () { next(); },\n                    dataType: 'json'\n                });\n            }, this));\n        }\n    },\n\n    validate_formlib_field: function (input) {\n        var $input = $(input),\n            $field = $input.closest('.field'),\n            $form = $field.closest('form'),\n            $cloned_form = $form.clone(),\n            fname = $field.attr('data-fieldname');\n\n        // XXX: Remove binary files so they are not uploaded to server\n        $cloned_form.find(\"input[type=file]\").remove();\n        this.queue($.proxy(function(next) {\n            $cloned_form.ajaxSubmit({\n                url: this.append_url_path($cloned_form.attr('action'), '@@formlib_validate_field'),\n                data: {fname: fname},\n                iframe: false,\n                success: $.proxy(function (data) {\n                    this.render_error($field, data.errmsg);\n                    next();\n                }, this),\n                error: function () { next(); },\n                dataType: 'json'\n            });\n        }, this));\n    },\n\n    validate_z3cform_field: function (input) {\n        var $input = $(input),\n            $field = $input.closest('.field'),\n            $form = $field.closest('form'),\n            $cloned_form = $form.clone(),\n            fset = $input.closest('fieldset').attr('data-fieldset'),\n            fname = $field.attr('data-fieldname');\n\n        // XXX: Remove binary files so they are not uploaded to server\n        $cloned_form.find(\"input[type=file]\").remove();\n        if (fname) {\n          this.queue($.proxy(function(next) {\n              $cloned_form.ajaxSubmit({\n                  url: this.append_url_path($cloned_form.attr('action'), '@@z3cform_validate_field'),\n                  data: {fname: fname, fset: fset},\n                  iframe: false,\n                  success: $.proxy(function (data) {\n                      this.render_error($field, data.errmsg);\n                      next();\n                  }, this),\n                  error: function () { next(); },\n                  dataType: 'json'\n              });\n          }, this));\n        }\n    },\n\n    init: function () {\n\n      this.$el.find(\n          'input[type=\"text\"], ' +\n          'input[type=\"password\"], ' +\n          'input[type=\"checkbox\"], ' +\n          'select, ' +\n          'textarea').on('blur',\n\n          $.proxy(function (ev) {\n            if (this.options.type === 'archetypes') {\n              this.validate_archetypes_field(ev.target);\n            } else if (this.options.type === 'z3c.form') {\n              this.validate_z3cform_field(ev.target);\n            } else if (this.options.type === 'formlib') {\n              this.validate_formlib_field(ev.target);\n            }\n          }, this));\n      },\n  });\n  return InlineValidation;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/inlinevalidation/pattern.js?");

/***/ }),

/***/ "./.plone/++resource++mockup/recurrence/pattern.js":
/*!*********************************************************!*\
  !*** ./.plone/++resource++mockup/recurrence/pattern.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* Recurrence pattern.\n *\n * Options:\n *    localization(object): Customizations to locatizations. Default to null\n *    configuration(object): recurrent input widget configuration\n *\n * Documentation:\n *\n *    # Simple\n *\n *    {{ example-1 }}\n *\n * Example: example-1\n *    <textarea class=\"pat-recurrence\"></textarea>\n *\n *\n */\n\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(/*! jquery */ \"./.plone/++plone++static/components/jquery/dist/jquery.min.js\"),\n  __webpack_require__(/*! pat-base */ \"./.plone/++plone++static/components/patternslib/src/core/base.js\"),\n  __webpack_require__(/*! jquery.recurrenceinput */ \"./.plone/++plone++static/components/jquery.recurrenceinput.js/src/jquery.recurrenceinput.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, Base) {\n  'use strict';\n\n  var Recurrence = Base.extend({\n    name: 'recurrence',\n    trigger: '.pat-recurrence',\n    parser: 'mockup',\n    defaults: {\n      // just passed onto the widget\n      language: 'en',\n      localization: null,\n      configuration: {}\n    },\n    init: function() {\n      this.$el.addClass('recurrence-widget');\n      if (this.options.localization) {\n        $.tools.recurrenceinput.localize(this.options.language, this.options.localization);\n      }\n      this.$el.recurrenceinput(this.options.configuration);\n    }\n  });\n\n  return Recurrence;\n\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./.plone/++resource++mockup/recurrence/pattern.js?");

/***/ })

}]);